/*
Copyright 2018 Ioannis Makris

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation and/or
other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

// This file was generated by glatter.py script.



#ifdef GLATTER_GL
#if defined(__gl31_h_)
#if defined(GL_ES_VERSION_2_0)
#ifndef glActiveTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveTexture, (texture), (GLenum texture))
#define glActiveTexture_defined
#endif
#ifndef glAttachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glAttachShader, (program, shader), (GLuint program, GLuint shader))
#define glAttachShader_defined
#endif
#ifndef glBindAttribLocation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindAttribLocation, (program, index, name), (GLuint program, GLuint index, const GLchar *name))
#define glBindAttribLocation_defined
#endif
#ifndef glBindBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBuffer, (target, buffer), (GLenum target, GLuint buffer))
#define glBindBuffer_defined
#endif
#ifndef glBindFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindFramebuffer, (target, framebuffer), (GLenum target, GLuint framebuffer))
#define glBindFramebuffer_defined
#endif
#ifndef glBindRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindRenderbuffer, (target, renderbuffer), (GLenum target, GLuint renderbuffer))
#define glBindRenderbuffer_defined
#endif
#ifndef glBindTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTexture, (target, texture), (GLenum target, GLuint texture))
#define glBindTexture_defined
#endif
#ifndef glBlendColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glBlendColor_defined
#endif
#ifndef glBlendEquation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquation, (mode), (GLenum mode))
#define glBlendEquation_defined
#endif
#ifndef glBlendEquationSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparate, (modeRGB, modeAlpha), (GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparate_defined
#endif
#ifndef glBlendFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunc, (sfactor, dfactor), (GLenum sfactor, GLenum dfactor))
#define glBlendFunc_defined
#endif
#ifndef glBlendFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparate, (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha), (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))
#define glBlendFuncSeparate_defined
#endif
#ifndef glBufferData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferData, (target, size, data, usage), (GLenum target, GLsizeiptr size, const void *data, GLenum usage))
#define glBufferData_defined
#endif
#ifndef glBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, const void *data))
#define glBufferSubData_defined
#endif
#ifndef glCheckFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glCheckFramebufferStatus, (target), (GLenum target))
#define glCheckFramebufferStatus_defined
#endif
#ifndef glClear_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClear, (mask), (GLbitfield mask))
#define glClear_defined
#endif
#ifndef glClearColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glClearColor_defined
#endif
#ifndef glClearDepthf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearDepthf, (d), (GLfloat d))
#define glClearDepthf_defined
#endif
#ifndef glClearStencil_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearStencil, (s), (GLint s))
#define glClearStencil_defined
#endif
#ifndef glColorMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMask, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glColorMask_defined
#endif
#ifndef glCompileShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompileShader, (shader), (GLuint shader))
#define glCompileShader_defined
#endif
#ifndef glCompressedTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage2D, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage2D_defined
#endif
#ifndef glCompressedTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage2D_defined
#endif
#ifndef glCopyTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexImage2D, (target, level, internalformat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2D_defined
#endif
#ifndef glCopyTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage2D, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2D_defined
#endif
#ifndef glCreateProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateProgram, (), (void))
#define glCreateProgram_defined
#endif
#ifndef glCreateShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShader, (type), (GLenum type))
#define glCreateShader_defined
#endif
#ifndef glCullFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCullFace, (mode), (GLenum mode))
#define glCullFace_defined
#endif
#ifndef glDeleteBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteBuffers, (n, buffers), (GLsizei n, const GLuint *buffers))
#define glDeleteBuffers_defined
#endif
#ifndef glDeleteFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteFramebuffers, (n, framebuffers), (GLsizei n, const GLuint *framebuffers))
#define glDeleteFramebuffers_defined
#endif
#ifndef glDeleteProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgram, (program), (GLuint program))
#define glDeleteProgram_defined
#endif
#ifndef glDeleteRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteRenderbuffers, (n, renderbuffers), (GLsizei n, const GLuint *renderbuffers))
#define glDeleteRenderbuffers_defined
#endif
#ifndef glDeleteShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteShader, (shader), (GLuint shader))
#define glDeleteShader_defined
#endif
#ifndef glDeleteTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTextures, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTextures_defined
#endif
#ifndef glDepthFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthFunc, (func), (GLenum func))
#define glDepthFunc_defined
#endif
#ifndef glDepthMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthMask, (flag), (GLboolean flag))
#define glDepthMask_defined
#endif
#ifndef glDepthRangef_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangef, (n, f), (GLfloat n, GLfloat f))
#define glDepthRangef_defined
#endif
#ifndef glDetachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDetachShader, (program, shader), (GLuint program, GLuint shader))
#define glDetachShader_defined
#endif
#ifndef glDisable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisable, (cap), (GLenum cap))
#define glDisable_defined
#endif
#ifndef glDisableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableVertexAttribArray, (index), (GLuint index))
#define glDisableVertexAttribArray_defined
#endif
#ifndef glDrawArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArrays, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArrays_defined
#endif
#ifndef glDrawElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElements, (mode, count, type, indices), (GLenum mode, GLsizei count, GLenum type, const void *indices))
#define glDrawElements_defined
#endif
#ifndef glEnable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnable, (cap), (GLenum cap))
#define glEnable_defined
#endif
#ifndef glEnableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableVertexAttribArray, (index), (GLuint index))
#define glEnableVertexAttribArray_defined
#endif
#ifndef glFinish_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFinish, (), (void))
#define glFinish_defined
#endif
#ifndef glFlush_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlush, (), (void))
#define glFlush_defined
#endif
#ifndef glFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferRenderbuffer, (target, attachment, renderbuffertarget, renderbuffer), (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glFramebufferRenderbuffer_defined
#endif
#ifndef glFramebufferTexture2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture2D_defined
#endif
#ifndef glFrontFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFrontFace, (mode), (GLenum mode))
#define glFrontFace_defined
#endif
#ifndef glGenBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glGenBuffers_defined
#endif
#ifndef glGenFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glGenFramebuffers_defined
#endif
#ifndef glGenRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glGenRenderbuffers_defined
#endif
#ifndef glGenTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTextures, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTextures_defined
#endif
#ifndef glGenerateMipmap_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenerateMipmap, (target), (GLenum target))
#define glGenerateMipmap_defined
#endif
#ifndef glGetActiveAttrib_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveAttrib, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveAttrib_defined
#endif
#ifndef glGetActiveUniform_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniform, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveUniform_defined
#endif
#ifndef glGetAttachedShaders_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetAttachedShaders, (program, maxCount, count, shaders), (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders))
#define glGetAttachedShaders_defined
#endif
#ifndef glGetAttribLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetAttribLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetAttribLocation_defined
#endif
#ifndef glGetBooleanv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBooleanv, (pname, data), (GLenum pname, GLboolean *data))
#define glGetBooleanv_defined
#endif
#ifndef glGetBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetBufferParameteriv_defined
#endif
#ifndef glGetError_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetError, (), (void))
#define glGetError_defined
#endif
#ifndef glGetFloatv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFloatv, (pname, data), (GLenum pname, GLfloat *data))
#define glGetFloatv_defined
#endif
#ifndef glGetFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFramebufferAttachmentParameteriv, (target, attachment, pname, params), (GLenum target, GLenum attachment, GLenum pname, GLint *params))
#define glGetFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetIntegerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegerv, (pname, data), (GLenum pname, GLint *data))
#define glGetIntegerv_defined
#endif
#ifndef glGetProgramInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramInfoLog, (program, bufSize, length, infoLog), (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramInfoLog_defined
#endif
#ifndef glGetProgramiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramiv, (program, pname, params), (GLuint program, GLenum pname, GLint *params))
#define glGetProgramiv_defined
#endif
#ifndef glGetRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetRenderbufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetRenderbufferParameteriv_defined
#endif
#ifndef glGetShaderInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderInfoLog, (shader, bufSize, length, infoLog), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetShaderInfoLog_defined
#endif
#ifndef glGetShaderPrecisionFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderPrecisionFormat, (shadertype, precisiontype, range, precision), (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision))
#define glGetShaderPrecisionFormat_defined
#endif
#ifndef glGetShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderSource, (shader, bufSize, length, source), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source))
#define glGetShaderSource_defined
#endif
#ifndef glGetShaderiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderiv, (shader, pname, params), (GLuint shader, GLenum pname, GLint *params))
#define glGetShaderiv_defined
#endif
#ifndef glGetString_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetString, (name), (GLenum name))
#define glGetString_defined
#endif
#ifndef glGetTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexParameterfv_defined
#endif
#ifndef glGetTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameteriv_defined
#endif
#ifndef glGetUniformLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetUniformLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetUniformLocation_defined
#endif
#ifndef glGetUniformfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformfv, (program, location, params), (GLuint program, GLint location, GLfloat *params))
#define glGetUniformfv_defined
#endif
#ifndef glGetUniformiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformiv, (program, location, params), (GLuint program, GLint location, GLint *params))
#define glGetUniformiv_defined
#endif
#ifndef glGetVertexAttribPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribPointerv, (index, pname, pointer), (GLuint index, GLenum pname, void **pointer))
#define glGetVertexAttribPointerv_defined
#endif
#ifndef glGetVertexAttribfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribfv, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribfv_defined
#endif
#ifndef glGetVertexAttribiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribiv_defined
#endif
#ifndef glHint_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glHint, (target, mode), (GLenum target, GLenum mode))
#define glHint_defined
#endif
#ifndef glIsBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsBuffer, (buffer), (GLuint buffer))
#define glIsBuffer_defined
#endif
#ifndef glIsEnabled_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnabled, (cap), (GLenum cap))
#define glIsEnabled_defined
#endif
#ifndef glIsFramebuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsFramebuffer, (framebuffer), (GLuint framebuffer))
#define glIsFramebuffer_defined
#endif
#ifndef glIsProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgram, (program), (GLuint program))
#define glIsProgram_defined
#endif
#ifndef glIsRenderbuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsRenderbuffer, (renderbuffer), (GLuint renderbuffer))
#define glIsRenderbuffer_defined
#endif
#ifndef glIsShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsShader, (shader), (GLuint shader))
#define glIsShader_defined
#endif
#ifndef glIsTexture_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTexture, (texture), (GLuint texture))
#define glIsTexture_defined
#endif
#ifndef glLineWidth_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLineWidth, (width), (GLfloat width))
#define glLineWidth_defined
#endif
#ifndef glLinkProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLinkProgram, (program), (GLuint program))
#define glLinkProgram_defined
#endif
#ifndef glPixelStorei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPixelStorei, (pname, param), (GLenum pname, GLint param))
#define glPixelStorei_defined
#endif
#ifndef glPolygonOffset_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPolygonOffset, (factor, units), (GLfloat factor, GLfloat units))
#define glPolygonOffset_defined
#endif
#ifndef glReadPixels_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadPixels, (x, y, width, height, format, type, pixels), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels))
#define glReadPixels_defined
#endif
#ifndef glReleaseShaderCompiler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReleaseShaderCompiler, (), (void))
#define glReleaseShaderCompiler_defined
#endif
#ifndef glRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorage, (target, internalformat, width, height), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorage_defined
#endif
#ifndef glSampleCoverage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSampleCoverage, (value, invert), (GLfloat value, GLboolean invert))
#define glSampleCoverage_defined
#endif
#ifndef glScissor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissor, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glScissor_defined
#endif
#ifndef glShaderBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderBinary, (count, shaders, binaryformat, binary, length), (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length))
#define glShaderBinary_defined
#endif
#ifndef glShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderSource, (shader, count, string, length), (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length))
#define glShaderSource_defined
#endif
#ifndef glStencilFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFunc, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glStencilFunc_defined
#endif
#ifndef glStencilFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFuncSeparate, (face, func, ref, mask), (GLenum face, GLenum func, GLint ref, GLuint mask))
#define glStencilFuncSeparate_defined
#endif
#ifndef glStencilMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMask, (mask), (GLuint mask))
#define glStencilMask_defined
#endif
#ifndef glStencilMaskSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMaskSeparate, (face, mask), (GLenum face, GLuint mask))
#define glStencilMaskSeparate_defined
#endif
#ifndef glStencilOp_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOp, (fail, zfail, zpass), (GLenum fail, GLenum zfail, GLenum zpass))
#define glStencilOp_defined
#endif
#ifndef glStencilOpSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOpSeparate, (face, sfail, dpfail, dppass), (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))
#define glStencilOpSeparate_defined
#endif
#ifndef glTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage2D, (target, level, internalformat, width, height, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage2D_defined
#endif
#ifndef glTexParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexParameterf_defined
#endif
#ifndef glTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexParameterfv_defined
#endif
#ifndef glTexParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexParameteri_defined
#endif
#ifndef glTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameteriv_defined
#endif
#ifndef glTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage2D_defined
#endif
#ifndef glUniform1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1f, (location, v0), (GLint location, GLfloat v0))
#define glUniform1f_defined
#endif
#ifndef glUniform1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform1fv_defined
#endif
#ifndef glUniform1i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1i, (location, v0), (GLint location, GLint v0))
#define glUniform1i_defined
#endif
#ifndef glUniform1iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform1iv_defined
#endif
#ifndef glUniform2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2f, (location, v0, v1), (GLint location, GLfloat v0, GLfloat v1))
#define glUniform2f_defined
#endif
#ifndef glUniform2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform2fv_defined
#endif
#ifndef glUniform2i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2i, (location, v0, v1), (GLint location, GLint v0, GLint v1))
#define glUniform2i_defined
#endif
#ifndef glUniform2iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform2iv_defined
#endif
#ifndef glUniform3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3f, (location, v0, v1, v2), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glUniform3f_defined
#endif
#ifndef glUniform3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform3fv_defined
#endif
#ifndef glUniform3i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3i, (location, v0, v1, v2), (GLint location, GLint v0, GLint v1, GLint v2))
#define glUniform3i_defined
#endif
#ifndef glUniform3iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform3iv_defined
#endif
#ifndef glUniform4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4f, (location, v0, v1, v2, v3), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glUniform4f_defined
#endif
#ifndef glUniform4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform4fv_defined
#endif
#ifndef glUniform4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4i, (location, v0, v1, v2, v3), (GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glUniform4i_defined
#endif
#ifndef glUniform4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform4iv_defined
#endif
#ifndef glUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2fv_defined
#endif
#ifndef glUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3fv_defined
#endif
#ifndef glUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4fv_defined
#endif
#ifndef glUseProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgram, (program), (GLuint program))
#define glUseProgram_defined
#endif
#ifndef glValidateProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgram, (program), (GLuint program))
#define glValidateProgram_defined
#endif
#ifndef glVertexAttrib1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1f, (index, x), (GLuint index, GLfloat x))
#define glVertexAttrib1f_defined
#endif
#ifndef glVertexAttrib1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib1fv_defined
#endif
#ifndef glVertexAttrib2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2f, (index, x, y), (GLuint index, GLfloat x, GLfloat y))
#define glVertexAttrib2f_defined
#endif
#ifndef glVertexAttrib2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib2fv_defined
#endif
#ifndef glVertexAttrib3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3f, (index, x, y, z), (GLuint index, GLfloat x, GLfloat y, GLfloat z))
#define glVertexAttrib3f_defined
#endif
#ifndef glVertexAttrib3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib3fv_defined
#endif
#ifndef glVertexAttrib4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4f, (index, x, y, z, w), (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexAttrib4f_defined
#endif
#ifndef glVertexAttrib4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib4fv_defined
#endif
#ifndef glVertexAttribPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribPointer, (index, size, type, normalized, stride, pointer), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))
#define glVertexAttribPointer_defined
#endif
#ifndef glViewport_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewport, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glViewport_defined
#endif
#endif // defined(GL_ES_VERSION_2_0)
#if defined(GL_ES_VERSION_3_0)
#ifndef glBeginQuery_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginQuery, (target, id), (GLenum target, GLuint id))
#define glBeginQuery_defined
#endif
#ifndef glBeginTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginTransformFeedback, (primitiveMode), (GLenum primitiveMode))
#define glBeginTransformFeedback_defined
#endif
#ifndef glBindBufferBase_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBufferBase, (target, index, buffer), (GLenum target, GLuint index, GLuint buffer))
#define glBindBufferBase_defined
#endif
#ifndef glBindBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBufferRange, (target, index, buffer, offset, size), (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glBindBufferRange_defined
#endif
#ifndef glBindSampler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindSampler, (unit, sampler), (GLuint unit, GLuint sampler))
#define glBindSampler_defined
#endif
#ifndef glBindTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTransformFeedback, (target, id), (GLenum target, GLuint id))
#define glBindTransformFeedback_defined
#endif
#ifndef glBindVertexArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindVertexArray, (array), (GLuint array))
#define glBindVertexArray_defined
#endif
#ifndef glBlitFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlitFramebuffer, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebuffer_defined
#endif
#ifndef glClearBufferfi_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferfi, (buffer, drawbuffer, depth, stencil), (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil))
#define glClearBufferfi_defined
#endif
#ifndef glClearBufferfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferfv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLfloat *value))
#define glClearBufferfv_defined
#endif
#ifndef glClearBufferiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLint *value))
#define glClearBufferiv_defined
#endif
#ifndef glClearBufferuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferuiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLuint *value))
#define glClearBufferuiv_defined
#endif
#ifndef glClientWaitSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glClientWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glClientWaitSync_defined
#endif
#ifndef glCompressedTexImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage3D, (target, level, internalformat, width, height, depth, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage3D_defined
#endif
#ifndef glCompressedTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage3D_defined
#endif
#ifndef glCopyBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyBufferSubData, (readTarget, writeTarget, readOffset, writeOffset, size), (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glCopyBufferSubData_defined
#endif
#ifndef glCopyTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage3D, (target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage3D_defined
#endif
#ifndef glDeleteQueries_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteQueries, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteQueries_defined
#endif
#ifndef glDeleteSamplers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSamplers, (count, samplers), (GLsizei count, const GLuint *samplers))
#define glDeleteSamplers_defined
#endif
#ifndef glDeleteSync_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSync, (sync), (GLsync sync))
#define glDeleteSync_defined
#endif
#ifndef glDeleteTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTransformFeedbacks, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteTransformFeedbacks_defined
#endif
#ifndef glDeleteVertexArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteVertexArrays, (n, arrays), (GLsizei n, const GLuint *arrays))
#define glDeleteVertexArrays_defined
#endif
#ifndef glDrawArraysInstanced_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstanced, (mode, first, count, instancecount), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount))
#define glDrawArraysInstanced_defined
#endif
#ifndef glDrawBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawBuffers, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffers_defined
#endif
#ifndef glDrawElementsInstanced_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstanced, (mode, count, type, indices, instancecount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount))
#define glDrawElementsInstanced_defined
#endif
#ifndef glDrawRangeElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawRangeElements, (mode, start, end, count, type, indices), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices))
#define glDrawRangeElements_defined
#endif
#ifndef glEndQuery_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndQuery, (target), (GLenum target))
#define glEndQuery_defined
#endif
#ifndef glEndTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndTransformFeedback, (), (void))
#define glEndTransformFeedback_defined
#endif
#ifndef glFenceSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLsync, GL_APIENTRY, glFenceSync, (condition, flags), (GLenum condition, GLbitfield flags))
#define glFenceSync_defined
#endif
#ifndef glFlushMappedBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlushMappedBufferRange, (target, offset, length), (GLenum target, GLintptr offset, GLsizeiptr length))
#define glFlushMappedBufferRange_defined
#endif
#ifndef glFramebufferTextureLayer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureLayer, (target, attachment, texture, level, layer), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glFramebufferTextureLayer_defined
#endif
#ifndef glGenQueries_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenQueries, (n, ids), (GLsizei n, GLuint *ids))
#define glGenQueries_defined
#endif
#ifndef glGenSamplers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenSamplers, (count, samplers), (GLsizei count, GLuint *samplers))
#define glGenSamplers_defined
#endif
#ifndef glGenTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTransformFeedbacks, (n, ids), (GLsizei n, GLuint *ids))
#define glGenTransformFeedbacks_defined
#endif
#ifndef glGenVertexArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenVertexArrays, (n, arrays), (GLsizei n, GLuint *arrays))
#define glGenVertexArrays_defined
#endif
#ifndef glGetActiveUniformBlockName_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformBlockName, (program, uniformBlockIndex, bufSize, length, uniformBlockName), (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName))
#define glGetActiveUniformBlockName_defined
#endif
#ifndef glGetActiveUniformBlockiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformBlockiv, (program, uniformBlockIndex, pname, params), (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params))
#define glGetActiveUniformBlockiv_defined
#endif
#ifndef glGetActiveUniformsiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformsiv, (program, uniformCount, uniformIndices, pname, params), (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params))
#define glGetActiveUniformsiv_defined
#endif
#ifndef glGetBufferParameteri64v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteri64v, (target, pname, params), (GLenum target, GLenum pname, GLint64 *params))
#define glGetBufferParameteri64v_defined
#endif
#ifndef glGetBufferPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferPointerv, (target, pname, params), (GLenum target, GLenum pname, void **params))
#define glGetBufferPointerv_defined
#endif
#ifndef glGetFragDataLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetFragDataLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataLocation_defined
#endif
#ifndef glGetInteger64i_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64i_v, (target, index, data), (GLenum target, GLuint index, GLint64 *data))
#define glGetInteger64i_v_defined
#endif
#ifndef glGetInteger64v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64v, (pname, data), (GLenum pname, GLint64 *data))
#define glGetInteger64v_defined
#endif
#ifndef glGetIntegeri_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegeri_v, (target, index, data), (GLenum target, GLuint index, GLint *data))
#define glGetIntegeri_v_defined
#endif
#ifndef glGetInternalformativ_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInternalformativ, (target, internalformat, pname, bufSize, params), (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params))
#define glGetInternalformativ_defined
#endif
#ifndef glGetProgramBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramBinary, (program, bufSize, length, binaryFormat, binary), (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary))
#define glGetProgramBinary_defined
#endif
#ifndef glGetQueryObjectuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjectuiv, (id, pname, params), (GLuint id, GLenum pname, GLuint *params))
#define glGetQueryObjectuiv_defined
#endif
#ifndef glGetQueryiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetQueryiv_defined
#endif
#ifndef glGetSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterfv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLfloat *params))
#define glGetSamplerParameterfv_defined
#endif
#ifndef glGetSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameteriv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameteriv_defined
#endif
#ifndef glGetStringi_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetStringi, (name, index), (GLenum name, GLuint index))
#define glGetStringi_defined
#endif
#ifndef glGetSynciv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSynciv, (sync, pname, bufSize, length, values), (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))
#define glGetSynciv_defined
#endif
#ifndef glGetTransformFeedbackVarying_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTransformFeedbackVarying, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))
#define glGetTransformFeedbackVarying_defined
#endif
#ifndef glGetUniformBlockIndex_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetUniformBlockIndex, (program, uniformBlockName), (GLuint program, const GLchar *uniformBlockName))
#define glGetUniformBlockIndex_defined
#endif
#ifndef glGetUniformIndices_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformIndices, (program, uniformCount, uniformNames, uniformIndices), (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices))
#define glGetUniformIndices_defined
#endif
#ifndef glGetUniformuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformuiv, (program, location, params), (GLuint program, GLint location, GLuint *params))
#define glGetUniformuiv_defined
#endif
#ifndef glGetVertexAttribIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribIiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribIiv_defined
#endif
#ifndef glGetVertexAttribIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribIuiv, (index, pname, params), (GLuint index, GLenum pname, GLuint *params))
#define glGetVertexAttribIuiv_defined
#endif
#ifndef glInvalidateFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInvalidateFramebuffer, (target, numAttachments, attachments), (GLenum target, GLsizei numAttachments, const GLenum *attachments))
#define glInvalidateFramebuffer_defined
#endif
#ifndef glInvalidateSubFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInvalidateSubFramebuffer, (target, numAttachments, attachments, x, y, width, height), (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))
#define glInvalidateSubFramebuffer_defined
#endif
#ifndef glIsQuery_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsQuery, (id), (GLuint id))
#define glIsQuery_defined
#endif
#ifndef glIsSampler_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSampler, (sampler), (GLuint sampler))
#define glIsSampler_defined
#endif
#ifndef glIsSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSync, (sync), (GLsync sync))
#define glIsSync_defined
#endif
#ifndef glIsTransformFeedback_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTransformFeedback, (id), (GLuint id))
#define glIsTransformFeedback_defined
#endif
#ifndef glIsVertexArray_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsVertexArray, (array), (GLuint array))
#define glIsVertexArray_defined
#endif
#ifndef glMapBufferRange_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, void *, GL_APIENTRY, glMapBufferRange, (target, offset, length, access), (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapBufferRange_defined
#endif
#ifndef glPauseTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPauseTransformFeedback, (), (void))
#define glPauseTransformFeedback_defined
#endif
#ifndef glProgramBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramBinary, (program, binaryFormat, binary, length), (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length))
#define glProgramBinary_defined
#endif
#ifndef glProgramParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramParameteri, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteri_defined
#endif
#ifndef glReadBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadBuffer, (src), (GLenum src))
#define glReadBuffer_defined
#endif
#ifndef glRenderbufferStorageMultisample_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisample, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisample_defined
#endif
#ifndef glResumeTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glResumeTransformFeedback, (), (void))
#define glResumeTransformFeedback_defined
#endif
#ifndef glSamplerParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterf, (sampler, pname, param), (GLuint sampler, GLenum pname, GLfloat param))
#define glSamplerParameterf_defined
#endif
#ifndef glSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterfv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLfloat *param))
#define glSamplerParameterfv_defined
#endif
#ifndef glSamplerParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameteri, (sampler, pname, param), (GLuint sampler, GLenum pname, GLint param))
#define glSamplerParameteri_defined
#endif
#ifndef glSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameteriv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameteriv_defined
#endif
#ifndef glTexImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage3D, (target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage3D_defined
#endif
#ifndef glTexStorage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage2D, (target, levels, internalformat, width, height), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTexStorage2D_defined
#endif
#ifndef glTexStorage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage3D, (target, levels, internalformat, width, height, depth), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTexStorage3D_defined
#endif
#ifndef glTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage3D_defined
#endif
#ifndef glTransformFeedbackVaryings_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTransformFeedbackVaryings, (program, count, varyings, bufferMode), (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode))
#define glTransformFeedbackVaryings_defined
#endif
#ifndef glUniform1ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1ui, (location, v0), (GLint location, GLuint v0))
#define glUniform1ui_defined
#endif
#ifndef glUniform1uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform1uiv_defined
#endif
#ifndef glUniform2ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2ui, (location, v0, v1), (GLint location, GLuint v0, GLuint v1))
#define glUniform2ui_defined
#endif
#ifndef glUniform2uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform2uiv_defined
#endif
#ifndef glUniform3ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3ui, (location, v0, v1, v2), (GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glUniform3ui_defined
#endif
#ifndef glUniform3uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform3uiv_defined
#endif
#ifndef glUniform4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4ui, (location, v0, v1, v2, v3), (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glUniform4ui_defined
#endif
#ifndef glUniform4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform4uiv_defined
#endif
#ifndef glUniformBlockBinding_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformBlockBinding, (program, uniformBlockIndex, uniformBlockBinding), (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding))
#define glUniformBlockBinding_defined
#endif
#ifndef glUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x3fv_defined
#endif
#ifndef glUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x4fv_defined
#endif
#ifndef glUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x2fv_defined
#endif
#ifndef glUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x4fv_defined
#endif
#ifndef glUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x2fv_defined
#endif
#ifndef glUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x3fv_defined
#endif
#ifndef glUnmapBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glUnmapBuffer, (target), (GLenum target))
#define glUnmapBuffer_defined
#endif
#ifndef glVertexAttribDivisor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribDivisor, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisor_defined
#endif
#ifndef glVertexAttribI4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4i, (index, x, y, z, w), (GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glVertexAttribI4i_defined
#endif
#ifndef glVertexAttribI4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI4iv_defined
#endif
#ifndef glVertexAttribI4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4ui, (index, x, y, z, w), (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glVertexAttribI4ui_defined
#endif
#ifndef glVertexAttribI4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI4uiv_defined
#endif
#ifndef glVertexAttribIPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribIPointer, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribIPointer_defined
#endif
#ifndef glWaitSync_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glWaitSync_defined
#endif
#endif // defined(GL_ES_VERSION_3_0)
#if defined(GL_ES_VERSION_3_1)
#ifndef glActiveShaderProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveShaderProgram, (pipeline, program), (GLuint pipeline, GLuint program))
#define glActiveShaderProgram_defined
#endif
#ifndef glBindImageTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindImageTexture, (unit, texture, level, layered, layer, access, format), (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format))
#define glBindImageTexture_defined
#endif
#ifndef glBindProgramPipeline_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindProgramPipeline, (pipeline), (GLuint pipeline))
#define glBindProgramPipeline_defined
#endif
#ifndef glBindVertexBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindVertexBuffer, (bindingindex, buffer, offset, stride), (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))
#define glBindVertexBuffer_defined
#endif
#ifndef glCreateShaderProgramv_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShaderProgramv, (type, count, strings), (GLenum type, GLsizei count, const GLchar *const*strings))
#define glCreateShaderProgramv_defined
#endif
#ifndef glDeleteProgramPipelines_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgramPipelines, (n, pipelines), (GLsizei n, const GLuint *pipelines))
#define glDeleteProgramPipelines_defined
#endif
#ifndef glDispatchCompute_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDispatchCompute, (num_groups_x, num_groups_y, num_groups_z), (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z))
#define glDispatchCompute_defined
#endif
#ifndef glDispatchComputeIndirect_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDispatchComputeIndirect, (indirect), (GLintptr indirect))
#define glDispatchComputeIndirect_defined
#endif
#ifndef glDrawArraysIndirect_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysIndirect, (mode, indirect), (GLenum mode, const void *indirect))
#define glDrawArraysIndirect_defined
#endif
#ifndef glDrawElementsIndirect_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsIndirect, (mode, type, indirect), (GLenum mode, GLenum type, const void *indirect))
#define glDrawElementsIndirect_defined
#endif
#ifndef glFramebufferParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glFramebufferParameteri_defined
#endif
#ifndef glGenProgramPipelines_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenProgramPipelines, (n, pipelines), (GLsizei n, GLuint *pipelines))
#define glGenProgramPipelines_defined
#endif
#ifndef glGetBooleani_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBooleani_v, (target, index, data), (GLenum target, GLuint index, GLboolean *data))
#define glGetBooleani_v_defined
#endif
#ifndef glGetFramebufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFramebufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetFramebufferParameteriv_defined
#endif
#ifndef glGetMultisamplefv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetMultisamplefv, (pname, index, val), (GLenum pname, GLuint index, GLfloat *val))
#define glGetMultisamplefv_defined
#endif
#ifndef glGetProgramInterfaceiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramInterfaceiv, (program, programInterface, pname, params), (GLuint program, GLenum programInterface, GLenum pname, GLint *params))
#define glGetProgramInterfaceiv_defined
#endif
#ifndef glGetProgramPipelineInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramPipelineInfoLog, (pipeline, bufSize, length, infoLog), (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramPipelineInfoLog_defined
#endif
#ifndef glGetProgramPipelineiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramPipelineiv, (pipeline, pname, params), (GLuint pipeline, GLenum pname, GLint *params))
#define glGetProgramPipelineiv_defined
#endif
#ifndef glGetProgramResourceIndex_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetProgramResourceIndex, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceIndex_defined
#endif
#ifndef glGetProgramResourceLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetProgramResourceLocation, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceLocation_defined
#endif
#ifndef glGetProgramResourceName_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramResourceName, (program, programInterface, index, bufSize, length, name), (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name))
#define glGetProgramResourceName_defined
#endif
#ifndef glGetProgramResourceiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramResourceiv, (program, programInterface, index, propCount, props, bufSize, length, params), (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params))
#define glGetProgramResourceiv_defined
#endif
#ifndef glGetTexLevelParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexLevelParameterfv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLfloat *params))
#define glGetTexLevelParameterfv_defined
#endif
#ifndef glGetTexLevelParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexLevelParameteriv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLint *params))
#define glGetTexLevelParameteriv_defined
#endif
#ifndef glIsProgramPipeline_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgramPipeline, (pipeline), (GLuint pipeline))
#define glIsProgramPipeline_defined
#endif
#ifndef glMemoryBarrier_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMemoryBarrier, (barriers), (GLbitfield barriers))
#define glMemoryBarrier_defined
#endif
#ifndef glMemoryBarrierByRegion_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMemoryBarrierByRegion, (barriers), (GLbitfield barriers))
#define glMemoryBarrierByRegion_defined
#endif
#ifndef glProgramUniform1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1f, (program, location, v0), (GLuint program, GLint location, GLfloat v0))
#define glProgramUniform1f_defined
#endif
#ifndef glProgramUniform1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform1fv_defined
#endif
#ifndef glProgramUniform1i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1i, (program, location, v0), (GLuint program, GLint location, GLint v0))
#define glProgramUniform1i_defined
#endif
#ifndef glProgramUniform1iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform1iv_defined
#endif
#ifndef glProgramUniform1ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1ui, (program, location, v0), (GLuint program, GLint location, GLuint v0))
#define glProgramUniform1ui_defined
#endif
#ifndef glProgramUniform1uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform1uiv_defined
#endif
#ifndef glProgramUniform2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2f, (program, location, v0, v1), (GLuint program, GLint location, GLfloat v0, GLfloat v1))
#define glProgramUniform2f_defined
#endif
#ifndef glProgramUniform2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform2fv_defined
#endif
#ifndef glProgramUniform2i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2i, (program, location, v0, v1), (GLuint program, GLint location, GLint v0, GLint v1))
#define glProgramUniform2i_defined
#endif
#ifndef glProgramUniform2iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform2iv_defined
#endif
#ifndef glProgramUniform2ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2ui, (program, location, v0, v1), (GLuint program, GLint location, GLuint v0, GLuint v1))
#define glProgramUniform2ui_defined
#endif
#ifndef glProgramUniform2uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform2uiv_defined
#endif
#ifndef glProgramUniform3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3f, (program, location, v0, v1, v2), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glProgramUniform3f_defined
#endif
#ifndef glProgramUniform3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform3fv_defined
#endif
#ifndef glProgramUniform3i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3i, (program, location, v0, v1, v2), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2))
#define glProgramUniform3i_defined
#endif
#ifndef glProgramUniform3iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform3iv_defined
#endif
#ifndef glProgramUniform3ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3ui, (program, location, v0, v1, v2), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glProgramUniform3ui_defined
#endif
#ifndef glProgramUniform3uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform3uiv_defined
#endif
#ifndef glProgramUniform4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4f, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glProgramUniform4f_defined
#endif
#ifndef glProgramUniform4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform4fv_defined
#endif
#ifndef glProgramUniform4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4i, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glProgramUniform4i_defined
#endif
#ifndef glProgramUniform4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform4iv_defined
#endif
#ifndef glProgramUniform4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4ui, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glProgramUniform4ui_defined
#endif
#ifndef glProgramUniform4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform4uiv_defined
#endif
#ifndef glProgramUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2fv_defined
#endif
#ifndef glProgramUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x3fv_defined
#endif
#ifndef glProgramUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x4fv_defined
#endif
#ifndef glProgramUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3fv_defined
#endif
#ifndef glProgramUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x2fv_defined
#endif
#ifndef glProgramUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x4fv_defined
#endif
#ifndef glProgramUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4fv_defined
#endif
#ifndef glProgramUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x2fv_defined
#endif
#ifndef glProgramUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x3fv_defined
#endif
#ifndef glSampleMaski_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSampleMaski, (maskNumber, mask), (GLuint maskNumber, GLbitfield mask))
#define glSampleMaski_defined
#endif
#ifndef glTexStorage2DMultisample_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage2DMultisample, (target, samples, internalformat, width, height, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTexStorage2DMultisample_defined
#endif
#ifndef glUseProgramStages_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgramStages, (pipeline, stages, program), (GLuint pipeline, GLbitfield stages, GLuint program))
#define glUseProgramStages_defined
#endif
#ifndef glValidateProgramPipeline_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgramPipeline, (pipeline), (GLuint pipeline))
#define glValidateProgramPipeline_defined
#endif
#ifndef glVertexAttribBinding_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribBinding, (attribindex, bindingindex), (GLuint attribindex, GLuint bindingindex))
#define glVertexAttribBinding_defined
#endif
#ifndef glVertexAttribFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribFormat, (attribindex, size, type, normalized, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))
#define glVertexAttribFormat_defined
#endif
#ifndef glVertexAttribIFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribIFormat, (attribindex, size, type, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexAttribIFormat_defined
#endif
#ifndef glVertexBindingDivisor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexBindingDivisor, (bindingindex, divisor), (GLuint bindingindex, GLuint divisor))
#define glVertexBindingDivisor_defined
#endif
#endif // defined(GL_ES_VERSION_3_1)
#endif // defined(__gl31_h_)
#if defined(__gl32_h_)
#if defined(GL_ES_VERSION_2_0)
#ifndef glActiveTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveTexture, (texture), (GLenum texture))
#define glActiveTexture_defined
#endif
#ifndef glAttachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glAttachShader, (program, shader), (GLuint program, GLuint shader))
#define glAttachShader_defined
#endif
#ifndef glBindAttribLocation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindAttribLocation, (program, index, name), (GLuint program, GLuint index, const GLchar *name))
#define glBindAttribLocation_defined
#endif
#ifndef glBindBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBuffer, (target, buffer), (GLenum target, GLuint buffer))
#define glBindBuffer_defined
#endif
#ifndef glBindFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindFramebuffer, (target, framebuffer), (GLenum target, GLuint framebuffer))
#define glBindFramebuffer_defined
#endif
#ifndef glBindRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindRenderbuffer, (target, renderbuffer), (GLenum target, GLuint renderbuffer))
#define glBindRenderbuffer_defined
#endif
#ifndef glBindTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTexture, (target, texture), (GLenum target, GLuint texture))
#define glBindTexture_defined
#endif
#ifndef glBlendColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glBlendColor_defined
#endif
#ifndef glBlendEquation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquation, (mode), (GLenum mode))
#define glBlendEquation_defined
#endif
#ifndef glBlendEquationSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparate, (modeRGB, modeAlpha), (GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparate_defined
#endif
#ifndef glBlendFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunc, (sfactor, dfactor), (GLenum sfactor, GLenum dfactor))
#define glBlendFunc_defined
#endif
#ifndef glBlendFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparate, (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha), (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))
#define glBlendFuncSeparate_defined
#endif
#ifndef glBufferData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferData, (target, size, data, usage), (GLenum target, GLsizeiptr size, const void *data, GLenum usage))
#define glBufferData_defined
#endif
#ifndef glBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, const void *data))
#define glBufferSubData_defined
#endif
#ifndef glCheckFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glCheckFramebufferStatus, (target), (GLenum target))
#define glCheckFramebufferStatus_defined
#endif
#ifndef glClear_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClear, (mask), (GLbitfield mask))
#define glClear_defined
#endif
#ifndef glClearColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glClearColor_defined
#endif
#ifndef glClearDepthf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearDepthf, (d), (GLfloat d))
#define glClearDepthf_defined
#endif
#ifndef glClearStencil_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearStencil, (s), (GLint s))
#define glClearStencil_defined
#endif
#ifndef glColorMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMask, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glColorMask_defined
#endif
#ifndef glCompileShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompileShader, (shader), (GLuint shader))
#define glCompileShader_defined
#endif
#ifndef glCompressedTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage2D, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage2D_defined
#endif
#ifndef glCompressedTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage2D_defined
#endif
#ifndef glCopyTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexImage2D, (target, level, internalformat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2D_defined
#endif
#ifndef glCopyTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage2D, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2D_defined
#endif
#ifndef glCreateProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateProgram, (), (void))
#define glCreateProgram_defined
#endif
#ifndef glCreateShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShader, (type), (GLenum type))
#define glCreateShader_defined
#endif
#ifndef glCullFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCullFace, (mode), (GLenum mode))
#define glCullFace_defined
#endif
#ifndef glDeleteBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteBuffers, (n, buffers), (GLsizei n, const GLuint *buffers))
#define glDeleteBuffers_defined
#endif
#ifndef glDeleteFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteFramebuffers, (n, framebuffers), (GLsizei n, const GLuint *framebuffers))
#define glDeleteFramebuffers_defined
#endif
#ifndef glDeleteProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgram, (program), (GLuint program))
#define glDeleteProgram_defined
#endif
#ifndef glDeleteRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteRenderbuffers, (n, renderbuffers), (GLsizei n, const GLuint *renderbuffers))
#define glDeleteRenderbuffers_defined
#endif
#ifndef glDeleteShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteShader, (shader), (GLuint shader))
#define glDeleteShader_defined
#endif
#ifndef glDeleteTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTextures, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTextures_defined
#endif
#ifndef glDepthFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthFunc, (func), (GLenum func))
#define glDepthFunc_defined
#endif
#ifndef glDepthMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthMask, (flag), (GLboolean flag))
#define glDepthMask_defined
#endif
#ifndef glDepthRangef_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangef, (n, f), (GLfloat n, GLfloat f))
#define glDepthRangef_defined
#endif
#ifndef glDetachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDetachShader, (program, shader), (GLuint program, GLuint shader))
#define glDetachShader_defined
#endif
#ifndef glDisable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisable, (cap), (GLenum cap))
#define glDisable_defined
#endif
#ifndef glDisableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableVertexAttribArray, (index), (GLuint index))
#define glDisableVertexAttribArray_defined
#endif
#ifndef glDrawArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArrays, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArrays_defined
#endif
#ifndef glDrawElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElements, (mode, count, type, indices), (GLenum mode, GLsizei count, GLenum type, const void *indices))
#define glDrawElements_defined
#endif
#ifndef glEnable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnable, (cap), (GLenum cap))
#define glEnable_defined
#endif
#ifndef glEnableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableVertexAttribArray, (index), (GLuint index))
#define glEnableVertexAttribArray_defined
#endif
#ifndef glFinish_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFinish, (), (void))
#define glFinish_defined
#endif
#ifndef glFlush_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlush, (), (void))
#define glFlush_defined
#endif
#ifndef glFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferRenderbuffer, (target, attachment, renderbuffertarget, renderbuffer), (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glFramebufferRenderbuffer_defined
#endif
#ifndef glFramebufferTexture2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture2D_defined
#endif
#ifndef glFrontFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFrontFace, (mode), (GLenum mode))
#define glFrontFace_defined
#endif
#ifndef glGenBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glGenBuffers_defined
#endif
#ifndef glGenFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glGenFramebuffers_defined
#endif
#ifndef glGenRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glGenRenderbuffers_defined
#endif
#ifndef glGenTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTextures, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTextures_defined
#endif
#ifndef glGenerateMipmap_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenerateMipmap, (target), (GLenum target))
#define glGenerateMipmap_defined
#endif
#ifndef glGetActiveAttrib_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveAttrib, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveAttrib_defined
#endif
#ifndef glGetActiveUniform_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniform, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveUniform_defined
#endif
#ifndef glGetAttachedShaders_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetAttachedShaders, (program, maxCount, count, shaders), (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders))
#define glGetAttachedShaders_defined
#endif
#ifndef glGetAttribLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetAttribLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetAttribLocation_defined
#endif
#ifndef glGetBooleanv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBooleanv, (pname, data), (GLenum pname, GLboolean *data))
#define glGetBooleanv_defined
#endif
#ifndef glGetBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetBufferParameteriv_defined
#endif
#ifndef glGetError_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetError, (), (void))
#define glGetError_defined
#endif
#ifndef glGetFloatv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFloatv, (pname, data), (GLenum pname, GLfloat *data))
#define glGetFloatv_defined
#endif
#ifndef glGetFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFramebufferAttachmentParameteriv, (target, attachment, pname, params), (GLenum target, GLenum attachment, GLenum pname, GLint *params))
#define glGetFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetIntegerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegerv, (pname, data), (GLenum pname, GLint *data))
#define glGetIntegerv_defined
#endif
#ifndef glGetProgramInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramInfoLog, (program, bufSize, length, infoLog), (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramInfoLog_defined
#endif
#ifndef glGetProgramiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramiv, (program, pname, params), (GLuint program, GLenum pname, GLint *params))
#define glGetProgramiv_defined
#endif
#ifndef glGetRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetRenderbufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetRenderbufferParameteriv_defined
#endif
#ifndef glGetShaderInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderInfoLog, (shader, bufSize, length, infoLog), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetShaderInfoLog_defined
#endif
#ifndef glGetShaderPrecisionFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderPrecisionFormat, (shadertype, precisiontype, range, precision), (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision))
#define glGetShaderPrecisionFormat_defined
#endif
#ifndef glGetShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderSource, (shader, bufSize, length, source), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source))
#define glGetShaderSource_defined
#endif
#ifndef glGetShaderiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderiv, (shader, pname, params), (GLuint shader, GLenum pname, GLint *params))
#define glGetShaderiv_defined
#endif
#ifndef glGetString_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetString, (name), (GLenum name))
#define glGetString_defined
#endif
#ifndef glGetTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexParameterfv_defined
#endif
#ifndef glGetTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameteriv_defined
#endif
#ifndef glGetUniformLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetUniformLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetUniformLocation_defined
#endif
#ifndef glGetUniformfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformfv, (program, location, params), (GLuint program, GLint location, GLfloat *params))
#define glGetUniformfv_defined
#endif
#ifndef glGetUniformiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformiv, (program, location, params), (GLuint program, GLint location, GLint *params))
#define glGetUniformiv_defined
#endif
#ifndef glGetVertexAttribPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribPointerv, (index, pname, pointer), (GLuint index, GLenum pname, void **pointer))
#define glGetVertexAttribPointerv_defined
#endif
#ifndef glGetVertexAttribfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribfv, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribfv_defined
#endif
#ifndef glGetVertexAttribiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribiv_defined
#endif
#ifndef glHint_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glHint, (target, mode), (GLenum target, GLenum mode))
#define glHint_defined
#endif
#ifndef glIsBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsBuffer, (buffer), (GLuint buffer))
#define glIsBuffer_defined
#endif
#ifndef glIsEnabled_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnabled, (cap), (GLenum cap))
#define glIsEnabled_defined
#endif
#ifndef glIsFramebuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsFramebuffer, (framebuffer), (GLuint framebuffer))
#define glIsFramebuffer_defined
#endif
#ifndef glIsProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgram, (program), (GLuint program))
#define glIsProgram_defined
#endif
#ifndef glIsRenderbuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsRenderbuffer, (renderbuffer), (GLuint renderbuffer))
#define glIsRenderbuffer_defined
#endif
#ifndef glIsShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsShader, (shader), (GLuint shader))
#define glIsShader_defined
#endif
#ifndef glIsTexture_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTexture, (texture), (GLuint texture))
#define glIsTexture_defined
#endif
#ifndef glLineWidth_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLineWidth, (width), (GLfloat width))
#define glLineWidth_defined
#endif
#ifndef glLinkProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLinkProgram, (program), (GLuint program))
#define glLinkProgram_defined
#endif
#ifndef glPixelStorei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPixelStorei, (pname, param), (GLenum pname, GLint param))
#define glPixelStorei_defined
#endif
#ifndef glPolygonOffset_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPolygonOffset, (factor, units), (GLfloat factor, GLfloat units))
#define glPolygonOffset_defined
#endif
#ifndef glReadPixels_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadPixels, (x, y, width, height, format, type, pixels), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels))
#define glReadPixels_defined
#endif
#ifndef glReleaseShaderCompiler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReleaseShaderCompiler, (), (void))
#define glReleaseShaderCompiler_defined
#endif
#ifndef glRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorage, (target, internalformat, width, height), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorage_defined
#endif
#ifndef glSampleCoverage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSampleCoverage, (value, invert), (GLfloat value, GLboolean invert))
#define glSampleCoverage_defined
#endif
#ifndef glScissor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissor, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glScissor_defined
#endif
#ifndef glShaderBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderBinary, (count, shaders, binaryformat, binary, length), (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length))
#define glShaderBinary_defined
#endif
#ifndef glShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderSource, (shader, count, string, length), (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length))
#define glShaderSource_defined
#endif
#ifndef glStencilFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFunc, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glStencilFunc_defined
#endif
#ifndef glStencilFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFuncSeparate, (face, func, ref, mask), (GLenum face, GLenum func, GLint ref, GLuint mask))
#define glStencilFuncSeparate_defined
#endif
#ifndef glStencilMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMask, (mask), (GLuint mask))
#define glStencilMask_defined
#endif
#ifndef glStencilMaskSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMaskSeparate, (face, mask), (GLenum face, GLuint mask))
#define glStencilMaskSeparate_defined
#endif
#ifndef glStencilOp_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOp, (fail, zfail, zpass), (GLenum fail, GLenum zfail, GLenum zpass))
#define glStencilOp_defined
#endif
#ifndef glStencilOpSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOpSeparate, (face, sfail, dpfail, dppass), (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))
#define glStencilOpSeparate_defined
#endif
#ifndef glTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage2D, (target, level, internalformat, width, height, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage2D_defined
#endif
#ifndef glTexParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexParameterf_defined
#endif
#ifndef glTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexParameterfv_defined
#endif
#ifndef glTexParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexParameteri_defined
#endif
#ifndef glTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameteriv_defined
#endif
#ifndef glTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage2D_defined
#endif
#ifndef glUniform1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1f, (location, v0), (GLint location, GLfloat v0))
#define glUniform1f_defined
#endif
#ifndef glUniform1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform1fv_defined
#endif
#ifndef glUniform1i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1i, (location, v0), (GLint location, GLint v0))
#define glUniform1i_defined
#endif
#ifndef glUniform1iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform1iv_defined
#endif
#ifndef glUniform2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2f, (location, v0, v1), (GLint location, GLfloat v0, GLfloat v1))
#define glUniform2f_defined
#endif
#ifndef glUniform2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform2fv_defined
#endif
#ifndef glUniform2i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2i, (location, v0, v1), (GLint location, GLint v0, GLint v1))
#define glUniform2i_defined
#endif
#ifndef glUniform2iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform2iv_defined
#endif
#ifndef glUniform3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3f, (location, v0, v1, v2), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glUniform3f_defined
#endif
#ifndef glUniform3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform3fv_defined
#endif
#ifndef glUniform3i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3i, (location, v0, v1, v2), (GLint location, GLint v0, GLint v1, GLint v2))
#define glUniform3i_defined
#endif
#ifndef glUniform3iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform3iv_defined
#endif
#ifndef glUniform4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4f, (location, v0, v1, v2, v3), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glUniform4f_defined
#endif
#ifndef glUniform4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform4fv_defined
#endif
#ifndef glUniform4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4i, (location, v0, v1, v2, v3), (GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glUniform4i_defined
#endif
#ifndef glUniform4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform4iv_defined
#endif
#ifndef glUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2fv_defined
#endif
#ifndef glUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3fv_defined
#endif
#ifndef glUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4fv_defined
#endif
#ifndef glUseProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgram, (program), (GLuint program))
#define glUseProgram_defined
#endif
#ifndef glValidateProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgram, (program), (GLuint program))
#define glValidateProgram_defined
#endif
#ifndef glVertexAttrib1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1f, (index, x), (GLuint index, GLfloat x))
#define glVertexAttrib1f_defined
#endif
#ifndef glVertexAttrib1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib1fv_defined
#endif
#ifndef glVertexAttrib2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2f, (index, x, y), (GLuint index, GLfloat x, GLfloat y))
#define glVertexAttrib2f_defined
#endif
#ifndef glVertexAttrib2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib2fv_defined
#endif
#ifndef glVertexAttrib3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3f, (index, x, y, z), (GLuint index, GLfloat x, GLfloat y, GLfloat z))
#define glVertexAttrib3f_defined
#endif
#ifndef glVertexAttrib3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib3fv_defined
#endif
#ifndef glVertexAttrib4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4f, (index, x, y, z, w), (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexAttrib4f_defined
#endif
#ifndef glVertexAttrib4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib4fv_defined
#endif
#ifndef glVertexAttribPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribPointer, (index, size, type, normalized, stride, pointer), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))
#define glVertexAttribPointer_defined
#endif
#ifndef glViewport_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewport, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glViewport_defined
#endif
#endif // defined(GL_ES_VERSION_2_0)
#if defined(GL_ES_VERSION_3_0)
#ifndef glBeginQuery_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginQuery, (target, id), (GLenum target, GLuint id))
#define glBeginQuery_defined
#endif
#ifndef glBeginTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginTransformFeedback, (primitiveMode), (GLenum primitiveMode))
#define glBeginTransformFeedback_defined
#endif
#ifndef glBindBufferBase_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBufferBase, (target, index, buffer), (GLenum target, GLuint index, GLuint buffer))
#define glBindBufferBase_defined
#endif
#ifndef glBindBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBufferRange, (target, index, buffer, offset, size), (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glBindBufferRange_defined
#endif
#ifndef glBindSampler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindSampler, (unit, sampler), (GLuint unit, GLuint sampler))
#define glBindSampler_defined
#endif
#ifndef glBindTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTransformFeedback, (target, id), (GLenum target, GLuint id))
#define glBindTransformFeedback_defined
#endif
#ifndef glBindVertexArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindVertexArray, (array), (GLuint array))
#define glBindVertexArray_defined
#endif
#ifndef glBlitFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlitFramebuffer, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebuffer_defined
#endif
#ifndef glClearBufferfi_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferfi, (buffer, drawbuffer, depth, stencil), (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil))
#define glClearBufferfi_defined
#endif
#ifndef glClearBufferfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferfv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLfloat *value))
#define glClearBufferfv_defined
#endif
#ifndef glClearBufferiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLint *value))
#define glClearBufferiv_defined
#endif
#ifndef glClearBufferuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferuiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLuint *value))
#define glClearBufferuiv_defined
#endif
#ifndef glClientWaitSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glClientWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glClientWaitSync_defined
#endif
#ifndef glCompressedTexImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage3D, (target, level, internalformat, width, height, depth, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage3D_defined
#endif
#ifndef glCompressedTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage3D_defined
#endif
#ifndef glCopyBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyBufferSubData, (readTarget, writeTarget, readOffset, writeOffset, size), (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glCopyBufferSubData_defined
#endif
#ifndef glCopyTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage3D, (target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage3D_defined
#endif
#ifndef glDeleteQueries_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteQueries, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteQueries_defined
#endif
#ifndef glDeleteSamplers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSamplers, (count, samplers), (GLsizei count, const GLuint *samplers))
#define glDeleteSamplers_defined
#endif
#ifndef glDeleteSync_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSync, (sync), (GLsync sync))
#define glDeleteSync_defined
#endif
#ifndef glDeleteTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTransformFeedbacks, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteTransformFeedbacks_defined
#endif
#ifndef glDeleteVertexArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteVertexArrays, (n, arrays), (GLsizei n, const GLuint *arrays))
#define glDeleteVertexArrays_defined
#endif
#ifndef glDrawArraysInstanced_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstanced, (mode, first, count, instancecount), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount))
#define glDrawArraysInstanced_defined
#endif
#ifndef glDrawBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawBuffers, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffers_defined
#endif
#ifndef glDrawElementsInstanced_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstanced, (mode, count, type, indices, instancecount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount))
#define glDrawElementsInstanced_defined
#endif
#ifndef glDrawRangeElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawRangeElements, (mode, start, end, count, type, indices), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices))
#define glDrawRangeElements_defined
#endif
#ifndef glEndQuery_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndQuery, (target), (GLenum target))
#define glEndQuery_defined
#endif
#ifndef glEndTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndTransformFeedback, (), (void))
#define glEndTransformFeedback_defined
#endif
#ifndef glFenceSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLsync, GL_APIENTRY, glFenceSync, (condition, flags), (GLenum condition, GLbitfield flags))
#define glFenceSync_defined
#endif
#ifndef glFlushMappedBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlushMappedBufferRange, (target, offset, length), (GLenum target, GLintptr offset, GLsizeiptr length))
#define glFlushMappedBufferRange_defined
#endif
#ifndef glFramebufferTextureLayer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureLayer, (target, attachment, texture, level, layer), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glFramebufferTextureLayer_defined
#endif
#ifndef glGenQueries_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenQueries, (n, ids), (GLsizei n, GLuint *ids))
#define glGenQueries_defined
#endif
#ifndef glGenSamplers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenSamplers, (count, samplers), (GLsizei count, GLuint *samplers))
#define glGenSamplers_defined
#endif
#ifndef glGenTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTransformFeedbacks, (n, ids), (GLsizei n, GLuint *ids))
#define glGenTransformFeedbacks_defined
#endif
#ifndef glGenVertexArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenVertexArrays, (n, arrays), (GLsizei n, GLuint *arrays))
#define glGenVertexArrays_defined
#endif
#ifndef glGetActiveUniformBlockName_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformBlockName, (program, uniformBlockIndex, bufSize, length, uniformBlockName), (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName))
#define glGetActiveUniformBlockName_defined
#endif
#ifndef glGetActiveUniformBlockiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformBlockiv, (program, uniformBlockIndex, pname, params), (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params))
#define glGetActiveUniformBlockiv_defined
#endif
#ifndef glGetActiveUniformsiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformsiv, (program, uniformCount, uniformIndices, pname, params), (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params))
#define glGetActiveUniformsiv_defined
#endif
#ifndef glGetBufferParameteri64v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteri64v, (target, pname, params), (GLenum target, GLenum pname, GLint64 *params))
#define glGetBufferParameteri64v_defined
#endif
#ifndef glGetBufferPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferPointerv, (target, pname, params), (GLenum target, GLenum pname, void **params))
#define glGetBufferPointerv_defined
#endif
#ifndef glGetFragDataLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetFragDataLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataLocation_defined
#endif
#ifndef glGetInteger64i_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64i_v, (target, index, data), (GLenum target, GLuint index, GLint64 *data))
#define glGetInteger64i_v_defined
#endif
#ifndef glGetInteger64v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64v, (pname, data), (GLenum pname, GLint64 *data))
#define glGetInteger64v_defined
#endif
#ifndef glGetIntegeri_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegeri_v, (target, index, data), (GLenum target, GLuint index, GLint *data))
#define glGetIntegeri_v_defined
#endif
#ifndef glGetInternalformativ_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInternalformativ, (target, internalformat, pname, bufSize, params), (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params))
#define glGetInternalformativ_defined
#endif
#ifndef glGetProgramBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramBinary, (program, bufSize, length, binaryFormat, binary), (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary))
#define glGetProgramBinary_defined
#endif
#ifndef glGetQueryObjectuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjectuiv, (id, pname, params), (GLuint id, GLenum pname, GLuint *params))
#define glGetQueryObjectuiv_defined
#endif
#ifndef glGetQueryiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetQueryiv_defined
#endif
#ifndef glGetSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterfv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLfloat *params))
#define glGetSamplerParameterfv_defined
#endif
#ifndef glGetSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameteriv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameteriv_defined
#endif
#ifndef glGetStringi_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetStringi, (name, index), (GLenum name, GLuint index))
#define glGetStringi_defined
#endif
#ifndef glGetSynciv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSynciv, (sync, pname, bufSize, length, values), (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))
#define glGetSynciv_defined
#endif
#ifndef glGetTransformFeedbackVarying_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTransformFeedbackVarying, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))
#define glGetTransformFeedbackVarying_defined
#endif
#ifndef glGetUniformBlockIndex_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetUniformBlockIndex, (program, uniformBlockName), (GLuint program, const GLchar *uniformBlockName))
#define glGetUniformBlockIndex_defined
#endif
#ifndef glGetUniformIndices_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformIndices, (program, uniformCount, uniformNames, uniformIndices), (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices))
#define glGetUniformIndices_defined
#endif
#ifndef glGetUniformuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformuiv, (program, location, params), (GLuint program, GLint location, GLuint *params))
#define glGetUniformuiv_defined
#endif
#ifndef glGetVertexAttribIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribIiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribIiv_defined
#endif
#ifndef glGetVertexAttribIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribIuiv, (index, pname, params), (GLuint index, GLenum pname, GLuint *params))
#define glGetVertexAttribIuiv_defined
#endif
#ifndef glInvalidateFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInvalidateFramebuffer, (target, numAttachments, attachments), (GLenum target, GLsizei numAttachments, const GLenum *attachments))
#define glInvalidateFramebuffer_defined
#endif
#ifndef glInvalidateSubFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInvalidateSubFramebuffer, (target, numAttachments, attachments, x, y, width, height), (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))
#define glInvalidateSubFramebuffer_defined
#endif
#ifndef glIsQuery_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsQuery, (id), (GLuint id))
#define glIsQuery_defined
#endif
#ifndef glIsSampler_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSampler, (sampler), (GLuint sampler))
#define glIsSampler_defined
#endif
#ifndef glIsSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSync, (sync), (GLsync sync))
#define glIsSync_defined
#endif
#ifndef glIsTransformFeedback_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTransformFeedback, (id), (GLuint id))
#define glIsTransformFeedback_defined
#endif
#ifndef glIsVertexArray_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsVertexArray, (array), (GLuint array))
#define glIsVertexArray_defined
#endif
#ifndef glMapBufferRange_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, void *, GL_APIENTRY, glMapBufferRange, (target, offset, length, access), (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapBufferRange_defined
#endif
#ifndef glPauseTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPauseTransformFeedback, (), (void))
#define glPauseTransformFeedback_defined
#endif
#ifndef glProgramBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramBinary, (program, binaryFormat, binary, length), (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length))
#define glProgramBinary_defined
#endif
#ifndef glProgramParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramParameteri, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteri_defined
#endif
#ifndef glReadBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadBuffer, (src), (GLenum src))
#define glReadBuffer_defined
#endif
#ifndef glRenderbufferStorageMultisample_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisample, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisample_defined
#endif
#ifndef glResumeTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glResumeTransformFeedback, (), (void))
#define glResumeTransformFeedback_defined
#endif
#ifndef glSamplerParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterf, (sampler, pname, param), (GLuint sampler, GLenum pname, GLfloat param))
#define glSamplerParameterf_defined
#endif
#ifndef glSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterfv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLfloat *param))
#define glSamplerParameterfv_defined
#endif
#ifndef glSamplerParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameteri, (sampler, pname, param), (GLuint sampler, GLenum pname, GLint param))
#define glSamplerParameteri_defined
#endif
#ifndef glSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameteriv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameteriv_defined
#endif
#ifndef glTexImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage3D, (target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage3D_defined
#endif
#ifndef glTexStorage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage2D, (target, levels, internalformat, width, height), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTexStorage2D_defined
#endif
#ifndef glTexStorage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage3D, (target, levels, internalformat, width, height, depth), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTexStorage3D_defined
#endif
#ifndef glTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage3D_defined
#endif
#ifndef glTransformFeedbackVaryings_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTransformFeedbackVaryings, (program, count, varyings, bufferMode), (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode))
#define glTransformFeedbackVaryings_defined
#endif
#ifndef glUniform1ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1ui, (location, v0), (GLint location, GLuint v0))
#define glUniform1ui_defined
#endif
#ifndef glUniform1uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform1uiv_defined
#endif
#ifndef glUniform2ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2ui, (location, v0, v1), (GLint location, GLuint v0, GLuint v1))
#define glUniform2ui_defined
#endif
#ifndef glUniform2uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform2uiv_defined
#endif
#ifndef glUniform3ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3ui, (location, v0, v1, v2), (GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glUniform3ui_defined
#endif
#ifndef glUniform3uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform3uiv_defined
#endif
#ifndef glUniform4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4ui, (location, v0, v1, v2, v3), (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glUniform4ui_defined
#endif
#ifndef glUniform4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform4uiv_defined
#endif
#ifndef glUniformBlockBinding_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformBlockBinding, (program, uniformBlockIndex, uniformBlockBinding), (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding))
#define glUniformBlockBinding_defined
#endif
#ifndef glUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x3fv_defined
#endif
#ifndef glUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x4fv_defined
#endif
#ifndef glUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x2fv_defined
#endif
#ifndef glUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x4fv_defined
#endif
#ifndef glUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x2fv_defined
#endif
#ifndef glUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x3fv_defined
#endif
#ifndef glUnmapBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glUnmapBuffer, (target), (GLenum target))
#define glUnmapBuffer_defined
#endif
#ifndef glVertexAttribDivisor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribDivisor, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisor_defined
#endif
#ifndef glVertexAttribI4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4i, (index, x, y, z, w), (GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glVertexAttribI4i_defined
#endif
#ifndef glVertexAttribI4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI4iv_defined
#endif
#ifndef glVertexAttribI4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4ui, (index, x, y, z, w), (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glVertexAttribI4ui_defined
#endif
#ifndef glVertexAttribI4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI4uiv_defined
#endif
#ifndef glVertexAttribIPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribIPointer, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribIPointer_defined
#endif
#ifndef glWaitSync_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glWaitSync_defined
#endif
#endif // defined(GL_ES_VERSION_3_0)
#if defined(GL_ES_VERSION_3_1)
#ifndef glActiveShaderProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveShaderProgram, (pipeline, program), (GLuint pipeline, GLuint program))
#define glActiveShaderProgram_defined
#endif
#ifndef glBindImageTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindImageTexture, (unit, texture, level, layered, layer, access, format), (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format))
#define glBindImageTexture_defined
#endif
#ifndef glBindProgramPipeline_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindProgramPipeline, (pipeline), (GLuint pipeline))
#define glBindProgramPipeline_defined
#endif
#ifndef glBindVertexBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindVertexBuffer, (bindingindex, buffer, offset, stride), (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride))
#define glBindVertexBuffer_defined
#endif
#ifndef glCreateShaderProgramv_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShaderProgramv, (type, count, strings), (GLenum type, GLsizei count, const GLchar *const*strings))
#define glCreateShaderProgramv_defined
#endif
#ifndef glDeleteProgramPipelines_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgramPipelines, (n, pipelines), (GLsizei n, const GLuint *pipelines))
#define glDeleteProgramPipelines_defined
#endif
#ifndef glDispatchCompute_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDispatchCompute, (num_groups_x, num_groups_y, num_groups_z), (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z))
#define glDispatchCompute_defined
#endif
#ifndef glDispatchComputeIndirect_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDispatchComputeIndirect, (indirect), (GLintptr indirect))
#define glDispatchComputeIndirect_defined
#endif
#ifndef glDrawArraysIndirect_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysIndirect, (mode, indirect), (GLenum mode, const void *indirect))
#define glDrawArraysIndirect_defined
#endif
#ifndef glDrawElementsIndirect_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsIndirect, (mode, type, indirect), (GLenum mode, GLenum type, const void *indirect))
#define glDrawElementsIndirect_defined
#endif
#ifndef glFramebufferParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glFramebufferParameteri_defined
#endif
#ifndef glGenProgramPipelines_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenProgramPipelines, (n, pipelines), (GLsizei n, GLuint *pipelines))
#define glGenProgramPipelines_defined
#endif
#ifndef glGetBooleani_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBooleani_v, (target, index, data), (GLenum target, GLuint index, GLboolean *data))
#define glGetBooleani_v_defined
#endif
#ifndef glGetFramebufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFramebufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetFramebufferParameteriv_defined
#endif
#ifndef glGetMultisamplefv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetMultisamplefv, (pname, index, val), (GLenum pname, GLuint index, GLfloat *val))
#define glGetMultisamplefv_defined
#endif
#ifndef glGetProgramInterfaceiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramInterfaceiv, (program, programInterface, pname, params), (GLuint program, GLenum programInterface, GLenum pname, GLint *params))
#define glGetProgramInterfaceiv_defined
#endif
#ifndef glGetProgramPipelineInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramPipelineInfoLog, (pipeline, bufSize, length, infoLog), (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramPipelineInfoLog_defined
#endif
#ifndef glGetProgramPipelineiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramPipelineiv, (pipeline, pname, params), (GLuint pipeline, GLenum pname, GLint *params))
#define glGetProgramPipelineiv_defined
#endif
#ifndef glGetProgramResourceIndex_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetProgramResourceIndex, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceIndex_defined
#endif
#ifndef glGetProgramResourceLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetProgramResourceLocation, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceLocation_defined
#endif
#ifndef glGetProgramResourceName_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramResourceName, (program, programInterface, index, bufSize, length, name), (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name))
#define glGetProgramResourceName_defined
#endif
#ifndef glGetProgramResourceiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramResourceiv, (program, programInterface, index, propCount, props, bufSize, length, params), (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params))
#define glGetProgramResourceiv_defined
#endif
#ifndef glGetTexLevelParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexLevelParameterfv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLfloat *params))
#define glGetTexLevelParameterfv_defined
#endif
#ifndef glGetTexLevelParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexLevelParameteriv, (target, level, pname, params), (GLenum target, GLint level, GLenum pname, GLint *params))
#define glGetTexLevelParameteriv_defined
#endif
#ifndef glIsProgramPipeline_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgramPipeline, (pipeline), (GLuint pipeline))
#define glIsProgramPipeline_defined
#endif
#ifndef glMemoryBarrier_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMemoryBarrier, (barriers), (GLbitfield barriers))
#define glMemoryBarrier_defined
#endif
#ifndef glMemoryBarrierByRegion_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMemoryBarrierByRegion, (barriers), (GLbitfield barriers))
#define glMemoryBarrierByRegion_defined
#endif
#ifndef glProgramUniform1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1f, (program, location, v0), (GLuint program, GLint location, GLfloat v0))
#define glProgramUniform1f_defined
#endif
#ifndef glProgramUniform1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform1fv_defined
#endif
#ifndef glProgramUniform1i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1i, (program, location, v0), (GLuint program, GLint location, GLint v0))
#define glProgramUniform1i_defined
#endif
#ifndef glProgramUniform1iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform1iv_defined
#endif
#ifndef glProgramUniform1ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1ui, (program, location, v0), (GLuint program, GLint location, GLuint v0))
#define glProgramUniform1ui_defined
#endif
#ifndef glProgramUniform1uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform1uiv_defined
#endif
#ifndef glProgramUniform2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2f, (program, location, v0, v1), (GLuint program, GLint location, GLfloat v0, GLfloat v1))
#define glProgramUniform2f_defined
#endif
#ifndef glProgramUniform2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform2fv_defined
#endif
#ifndef glProgramUniform2i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2i, (program, location, v0, v1), (GLuint program, GLint location, GLint v0, GLint v1))
#define glProgramUniform2i_defined
#endif
#ifndef glProgramUniform2iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform2iv_defined
#endif
#ifndef glProgramUniform2ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2ui, (program, location, v0, v1), (GLuint program, GLint location, GLuint v0, GLuint v1))
#define glProgramUniform2ui_defined
#endif
#ifndef glProgramUniform2uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform2uiv_defined
#endif
#ifndef glProgramUniform3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3f, (program, location, v0, v1, v2), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glProgramUniform3f_defined
#endif
#ifndef glProgramUniform3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform3fv_defined
#endif
#ifndef glProgramUniform3i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3i, (program, location, v0, v1, v2), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2))
#define glProgramUniform3i_defined
#endif
#ifndef glProgramUniform3iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform3iv_defined
#endif
#ifndef glProgramUniform3ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3ui, (program, location, v0, v1, v2), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glProgramUniform3ui_defined
#endif
#ifndef glProgramUniform3uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform3uiv_defined
#endif
#ifndef glProgramUniform4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4f, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glProgramUniform4f_defined
#endif
#ifndef glProgramUniform4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4fv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform4fv_defined
#endif
#ifndef glProgramUniform4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4i, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glProgramUniform4i_defined
#endif
#ifndef glProgramUniform4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4iv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform4iv_defined
#endif
#ifndef glProgramUniform4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4ui, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glProgramUniform4ui_defined
#endif
#ifndef glProgramUniform4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4uiv, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform4uiv_defined
#endif
#ifndef glProgramUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2fv_defined
#endif
#ifndef glProgramUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x3fv_defined
#endif
#ifndef glProgramUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x4fv_defined
#endif
#ifndef glProgramUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3fv_defined
#endif
#ifndef glProgramUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x2fv_defined
#endif
#ifndef glProgramUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3x4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x4fv_defined
#endif
#ifndef glProgramUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4fv_defined
#endif
#ifndef glProgramUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4x2fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x2fv_defined
#endif
#ifndef glProgramUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4x3fv, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x3fv_defined
#endif
#ifndef glSampleMaski_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSampleMaski, (maskNumber, mask), (GLuint maskNumber, GLbitfield mask))
#define glSampleMaski_defined
#endif
#ifndef glTexStorage2DMultisample_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage2DMultisample, (target, samples, internalformat, width, height, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations))
#define glTexStorage2DMultisample_defined
#endif
#ifndef glUseProgramStages_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgramStages, (pipeline, stages, program), (GLuint pipeline, GLbitfield stages, GLuint program))
#define glUseProgramStages_defined
#endif
#ifndef glValidateProgramPipeline_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgramPipeline, (pipeline), (GLuint pipeline))
#define glValidateProgramPipeline_defined
#endif
#ifndef glVertexAttribBinding_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribBinding, (attribindex, bindingindex), (GLuint attribindex, GLuint bindingindex))
#define glVertexAttribBinding_defined
#endif
#ifndef glVertexAttribFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribFormat, (attribindex, size, type, normalized, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset))
#define glVertexAttribFormat_defined
#endif
#ifndef glVertexAttribIFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribIFormat, (attribindex, size, type, relativeoffset), (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset))
#define glVertexAttribIFormat_defined
#endif
#ifndef glVertexBindingDivisor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexBindingDivisor, (bindingindex, divisor), (GLuint bindingindex, GLuint divisor))
#define glVertexBindingDivisor_defined
#endif
#endif // defined(GL_ES_VERSION_3_1)
#if defined(GL_ES_VERSION_3_2)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendBarrier, (), (void))
#define glBlendBarrier_defined
#ifndef glBlendEquationSeparatei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparatei, (buf, modeRGB, modeAlpha), (GLuint buf, GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparatei_defined
#endif
#ifndef glBlendEquationi_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationi, (buf, mode), (GLuint buf, GLenum mode))
#define glBlendEquationi_defined
#endif
#ifndef glBlendFuncSeparatei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparatei, (buf, srcRGB, dstRGB, srcAlpha, dstAlpha), (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))
#define glBlendFuncSeparatei_defined
#endif
#ifndef glBlendFunci_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunci, (buf, src, dst), (GLuint buf, GLenum src, GLenum dst))
#define glBlendFunci_defined
#endif
#ifndef glColorMaski_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMaski, (index, r, g, b, a), (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a))
#define glColorMaski_defined
#endif
#ifndef glCopyImageSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyImageSubData, (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth), (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth))
#define glCopyImageSubData_defined
#endif
#ifndef glDebugMessageCallback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDebugMessageCallback, (callback, userParam), (GLDEBUGPROC callback, const void *userParam))
#define glDebugMessageCallback_defined
#endif
#ifndef glDebugMessageControl_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDebugMessageControl, (source, type, severity, count, ids, enabled), (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))
#define glDebugMessageControl_defined
#endif
#ifndef glDebugMessageInsert_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDebugMessageInsert, (source, type, id, severity, length, buf), (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf))
#define glDebugMessageInsert_defined
#endif
#ifndef glDisablei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisablei, (target, index), (GLenum target, GLuint index))
#define glDisablei_defined
#endif
#ifndef glDrawElementsBaseVertex_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsBaseVertex, (mode, count, type, indices, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawElementsBaseVertex_defined
#endif
#ifndef glDrawElementsInstancedBaseVertex_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedBaseVertex, (mode, count, type, indices, instancecount, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex))
#define glDrawElementsInstancedBaseVertex_defined
#endif
#ifndef glDrawRangeElementsBaseVertex_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawRangeElementsBaseVertex, (mode, start, end, count, type, indices, basevertex), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawRangeElementsBaseVertex_defined
#endif
#ifndef glEnablei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnablei, (target, index), (GLenum target, GLuint index))
#define glEnablei_defined
#endif
#ifndef glFramebufferTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture, (target, attachment, texture, level), (GLenum target, GLenum attachment, GLuint texture, GLint level))
#define glFramebufferTexture_defined
#endif
#ifndef glGetDebugMessageLog_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetDebugMessageLog, (count, bufSize, sources, types, ids, severities, lengths, messageLog), (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog))
#define glGetDebugMessageLog_defined
#endif
#ifndef glGetGraphicsResetStatus_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetGraphicsResetStatus, (), (void))
#define glGetGraphicsResetStatus_defined
#endif
#ifndef glGetObjectLabel_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetObjectLabel, (identifier, name, bufSize, length, label), (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectLabel_defined
#endif
#ifndef glGetObjectPtrLabel_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetObjectPtrLabel, (ptr, bufSize, length, label), (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectPtrLabel_defined
#endif
#ifndef glGetPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPointerv, (pname, params), (GLenum pname, void **params))
#define glGetPointerv_defined
#endif
#ifndef glGetSamplerParameterIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterIiv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameterIiv_defined
#endif
#ifndef glGetSamplerParameterIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterIuiv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLuint *params))
#define glGetSamplerParameterIuiv_defined
#endif
#ifndef glGetTexParameterIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterIiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameterIiv_defined
#endif
#ifndef glGetTexParameterIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterIuiv, (target, pname, params), (GLenum target, GLenum pname, GLuint *params))
#define glGetTexParameterIuiv_defined
#endif
#ifndef glGetnUniformfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformfv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLfloat *params))
#define glGetnUniformfv_defined
#endif
#ifndef glGetnUniformiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformiv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint *params))
#define glGetnUniformiv_defined
#endif
#ifndef glGetnUniformuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformuiv, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLuint *params))
#define glGetnUniformuiv_defined
#endif
#ifndef glIsEnabledi_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnabledi, (target, index), (GLenum target, GLuint index))
#define glIsEnabledi_defined
#endif
#ifndef glMinSampleShading_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMinSampleShading, (value), (GLfloat value))
#define glMinSampleShading_defined
#endif
#ifndef glObjectLabel_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glObjectLabel, (identifier, name, length, label), (GLenum identifier, GLuint name, GLsizei length, const GLchar *label))
#define glObjectLabel_defined
#endif
#ifndef glObjectPtrLabel_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glObjectPtrLabel, (ptr, length, label), (const void *ptr, GLsizei length, const GLchar *label))
#define glObjectPtrLabel_defined
#endif
#ifndef glPatchParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPatchParameteri, (pname, value), (GLenum pname, GLint value))
#define glPatchParameteri_defined
#endif
#ifndef glPopDebugGroup_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPopDebugGroup, (), (void))
#define glPopDebugGroup_defined
#endif
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPrimitiveBoundingBox, (minX, minY, minZ, minW, maxX, maxY, maxZ, maxW), (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW))
#define glPrimitiveBoundingBox_defined
#ifndef glPushDebugGroup_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPushDebugGroup, (source, id, length, message), (GLenum source, GLuint id, GLsizei length, const GLchar *message))
#define glPushDebugGroup_defined
#endif
#ifndef glReadnPixels_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadnPixels, (x, y, width, height, format, type, bufSize, data), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))
#define glReadnPixels_defined
#endif
#ifndef glSamplerParameterIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterIiv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameterIiv_defined
#endif
#ifndef glSamplerParameterIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterIuiv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLuint *param))
#define glSamplerParameterIuiv_defined
#endif
#ifndef glTexBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexBuffer, (target, internalformat, buffer), (GLenum target, GLenum internalformat, GLuint buffer))
#define glTexBuffer_defined
#endif
#ifndef glTexBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexBufferRange, (target, internalformat, buffer, offset, size), (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTexBufferRange_defined
#endif
#ifndef glTexParameterIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterIiv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameterIiv_defined
#endif
#ifndef glTexParameterIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterIuiv, (target, pname, params), (GLenum target, GLenum pname, const GLuint *params))
#define glTexParameterIuiv_defined
#endif
#ifndef glTexStorage3DMultisample_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage3DMultisample, (target, samples, internalformat, width, height, depth, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTexStorage3DMultisample_defined
#endif
#endif // defined(GL_ES_VERSION_3_2)
#endif // defined(__gl32_h_)
#if defined(__gles2_gl2_h_)
#if defined(GL_ES_VERSION_2_0)
#ifndef glActiveTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveTexture, (texture), (GLenum texture))
#define glActiveTexture_defined
#endif
#ifndef glAttachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glAttachShader, (program, shader), (GLuint program, GLuint shader))
#define glAttachShader_defined
#endif
#ifndef glBindAttribLocation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindAttribLocation, (program, index, name), (GLuint program, GLuint index, const GLchar *name))
#define glBindAttribLocation_defined
#endif
#ifndef glBindBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBuffer, (target, buffer), (GLenum target, GLuint buffer))
#define glBindBuffer_defined
#endif
#ifndef glBindFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindFramebuffer, (target, framebuffer), (GLenum target, GLuint framebuffer))
#define glBindFramebuffer_defined
#endif
#ifndef glBindRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindRenderbuffer, (target, renderbuffer), (GLenum target, GLuint renderbuffer))
#define glBindRenderbuffer_defined
#endif
#ifndef glBindTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTexture, (target, texture), (GLenum target, GLuint texture))
#define glBindTexture_defined
#endif
#ifndef glBlendColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glBlendColor_defined
#endif
#ifndef glBlendEquation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquation, (mode), (GLenum mode))
#define glBlendEquation_defined
#endif
#ifndef glBlendEquationSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparate, (modeRGB, modeAlpha), (GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparate_defined
#endif
#ifndef glBlendFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunc, (sfactor, dfactor), (GLenum sfactor, GLenum dfactor))
#define glBlendFunc_defined
#endif
#ifndef glBlendFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparate, (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha), (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))
#define glBlendFuncSeparate_defined
#endif
#ifndef glBufferData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferData, (target, size, data, usage), (GLenum target, GLsizeiptr size, const void *data, GLenum usage))
#define glBufferData_defined
#endif
#ifndef glBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, const void *data))
#define glBufferSubData_defined
#endif
#ifndef glCheckFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glCheckFramebufferStatus, (target), (GLenum target))
#define glCheckFramebufferStatus_defined
#endif
#ifndef glClear_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClear, (mask), (GLbitfield mask))
#define glClear_defined
#endif
#ifndef glClearColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glClearColor_defined
#endif
#ifndef glClearDepthf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearDepthf, (d), (GLfloat d))
#define glClearDepthf_defined
#endif
#ifndef glClearStencil_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearStencil, (s), (GLint s))
#define glClearStencil_defined
#endif
#ifndef glColorMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMask, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glColorMask_defined
#endif
#ifndef glCompileShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompileShader, (shader), (GLuint shader))
#define glCompileShader_defined
#endif
#ifndef glCompressedTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage2D, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage2D_defined
#endif
#ifndef glCompressedTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage2D_defined
#endif
#ifndef glCopyTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexImage2D, (target, level, internalformat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2D_defined
#endif
#ifndef glCopyTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage2D, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2D_defined
#endif
#ifndef glCreateProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateProgram, (), (void))
#define glCreateProgram_defined
#endif
#ifndef glCreateShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShader, (type), (GLenum type))
#define glCreateShader_defined
#endif
#ifndef glCullFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCullFace, (mode), (GLenum mode))
#define glCullFace_defined
#endif
#ifndef glDeleteBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteBuffers, (n, buffers), (GLsizei n, const GLuint *buffers))
#define glDeleteBuffers_defined
#endif
#ifndef glDeleteFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteFramebuffers, (n, framebuffers), (GLsizei n, const GLuint *framebuffers))
#define glDeleteFramebuffers_defined
#endif
#ifndef glDeleteProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgram, (program), (GLuint program))
#define glDeleteProgram_defined
#endif
#ifndef glDeleteRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteRenderbuffers, (n, renderbuffers), (GLsizei n, const GLuint *renderbuffers))
#define glDeleteRenderbuffers_defined
#endif
#ifndef glDeleteShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteShader, (shader), (GLuint shader))
#define glDeleteShader_defined
#endif
#ifndef glDeleteTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTextures, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTextures_defined
#endif
#ifndef glDepthFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthFunc, (func), (GLenum func))
#define glDepthFunc_defined
#endif
#ifndef glDepthMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthMask, (flag), (GLboolean flag))
#define glDepthMask_defined
#endif
#ifndef glDepthRangef_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangef, (n, f), (GLfloat n, GLfloat f))
#define glDepthRangef_defined
#endif
#ifndef glDetachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDetachShader, (program, shader), (GLuint program, GLuint shader))
#define glDetachShader_defined
#endif
#ifndef glDisable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisable, (cap), (GLenum cap))
#define glDisable_defined
#endif
#ifndef glDisableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableVertexAttribArray, (index), (GLuint index))
#define glDisableVertexAttribArray_defined
#endif
#ifndef glDrawArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArrays, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArrays_defined
#endif
#ifndef glDrawElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElements, (mode, count, type, indices), (GLenum mode, GLsizei count, GLenum type, const void *indices))
#define glDrawElements_defined
#endif
#ifndef glEnable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnable, (cap), (GLenum cap))
#define glEnable_defined
#endif
#ifndef glEnableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableVertexAttribArray, (index), (GLuint index))
#define glEnableVertexAttribArray_defined
#endif
#ifndef glFinish_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFinish, (), (void))
#define glFinish_defined
#endif
#ifndef glFlush_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlush, (), (void))
#define glFlush_defined
#endif
#ifndef glFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferRenderbuffer, (target, attachment, renderbuffertarget, renderbuffer), (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glFramebufferRenderbuffer_defined
#endif
#ifndef glFramebufferTexture2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture2D_defined
#endif
#ifndef glFrontFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFrontFace, (mode), (GLenum mode))
#define glFrontFace_defined
#endif
#ifndef glGenBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glGenBuffers_defined
#endif
#ifndef glGenFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glGenFramebuffers_defined
#endif
#ifndef glGenRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glGenRenderbuffers_defined
#endif
#ifndef glGenTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTextures, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTextures_defined
#endif
#ifndef glGenerateMipmap_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenerateMipmap, (target), (GLenum target))
#define glGenerateMipmap_defined
#endif
#ifndef glGetActiveAttrib_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveAttrib, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveAttrib_defined
#endif
#ifndef glGetActiveUniform_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniform, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveUniform_defined
#endif
#ifndef glGetAttachedShaders_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetAttachedShaders, (program, maxCount, count, shaders), (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders))
#define glGetAttachedShaders_defined
#endif
#ifndef glGetAttribLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetAttribLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetAttribLocation_defined
#endif
#ifndef glGetBooleanv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBooleanv, (pname, data), (GLenum pname, GLboolean *data))
#define glGetBooleanv_defined
#endif
#ifndef glGetBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetBufferParameteriv_defined
#endif
#ifndef glGetError_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetError, (), (void))
#define glGetError_defined
#endif
#ifndef glGetFloatv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFloatv, (pname, data), (GLenum pname, GLfloat *data))
#define glGetFloatv_defined
#endif
#ifndef glGetFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFramebufferAttachmentParameteriv, (target, attachment, pname, params), (GLenum target, GLenum attachment, GLenum pname, GLint *params))
#define glGetFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetIntegerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegerv, (pname, data), (GLenum pname, GLint *data))
#define glGetIntegerv_defined
#endif
#ifndef glGetProgramInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramInfoLog, (program, bufSize, length, infoLog), (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramInfoLog_defined
#endif
#ifndef glGetProgramiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramiv, (program, pname, params), (GLuint program, GLenum pname, GLint *params))
#define glGetProgramiv_defined
#endif
#ifndef glGetRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetRenderbufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetRenderbufferParameteriv_defined
#endif
#ifndef glGetShaderInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderInfoLog, (shader, bufSize, length, infoLog), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetShaderInfoLog_defined
#endif
#ifndef glGetShaderPrecisionFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderPrecisionFormat, (shadertype, precisiontype, range, precision), (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision))
#define glGetShaderPrecisionFormat_defined
#endif
#ifndef glGetShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderSource, (shader, bufSize, length, source), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source))
#define glGetShaderSource_defined
#endif
#ifndef glGetShaderiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderiv, (shader, pname, params), (GLuint shader, GLenum pname, GLint *params))
#define glGetShaderiv_defined
#endif
#ifndef glGetString_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetString, (name), (GLenum name))
#define glGetString_defined
#endif
#ifndef glGetTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexParameterfv_defined
#endif
#ifndef glGetTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameteriv_defined
#endif
#ifndef glGetUniformLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetUniformLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetUniformLocation_defined
#endif
#ifndef glGetUniformfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformfv, (program, location, params), (GLuint program, GLint location, GLfloat *params))
#define glGetUniformfv_defined
#endif
#ifndef glGetUniformiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformiv, (program, location, params), (GLuint program, GLint location, GLint *params))
#define glGetUniformiv_defined
#endif
#ifndef glGetVertexAttribPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribPointerv, (index, pname, pointer), (GLuint index, GLenum pname, void **pointer))
#define glGetVertexAttribPointerv_defined
#endif
#ifndef glGetVertexAttribfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribfv, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribfv_defined
#endif
#ifndef glGetVertexAttribiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribiv_defined
#endif
#ifndef glHint_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glHint, (target, mode), (GLenum target, GLenum mode))
#define glHint_defined
#endif
#ifndef glIsBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsBuffer, (buffer), (GLuint buffer))
#define glIsBuffer_defined
#endif
#ifndef glIsEnabled_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnabled, (cap), (GLenum cap))
#define glIsEnabled_defined
#endif
#ifndef glIsFramebuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsFramebuffer, (framebuffer), (GLuint framebuffer))
#define glIsFramebuffer_defined
#endif
#ifndef glIsProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgram, (program), (GLuint program))
#define glIsProgram_defined
#endif
#ifndef glIsRenderbuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsRenderbuffer, (renderbuffer), (GLuint renderbuffer))
#define glIsRenderbuffer_defined
#endif
#ifndef glIsShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsShader, (shader), (GLuint shader))
#define glIsShader_defined
#endif
#ifndef glIsTexture_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTexture, (texture), (GLuint texture))
#define glIsTexture_defined
#endif
#ifndef glLineWidth_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLineWidth, (width), (GLfloat width))
#define glLineWidth_defined
#endif
#ifndef glLinkProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLinkProgram, (program), (GLuint program))
#define glLinkProgram_defined
#endif
#ifndef glPixelStorei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPixelStorei, (pname, param), (GLenum pname, GLint param))
#define glPixelStorei_defined
#endif
#ifndef glPolygonOffset_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPolygonOffset, (factor, units), (GLfloat factor, GLfloat units))
#define glPolygonOffset_defined
#endif
#ifndef glReadPixels_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadPixels, (x, y, width, height, format, type, pixels), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels))
#define glReadPixels_defined
#endif
#ifndef glReleaseShaderCompiler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReleaseShaderCompiler, (), (void))
#define glReleaseShaderCompiler_defined
#endif
#ifndef glRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorage, (target, internalformat, width, height), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorage_defined
#endif
#ifndef glSampleCoverage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSampleCoverage, (value, invert), (GLfloat value, GLboolean invert))
#define glSampleCoverage_defined
#endif
#ifndef glScissor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissor, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glScissor_defined
#endif
#ifndef glShaderBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderBinary, (count, shaders, binaryformat, binary, length), (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length))
#define glShaderBinary_defined
#endif
#ifndef glShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderSource, (shader, count, string, length), (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length))
#define glShaderSource_defined
#endif
#ifndef glStencilFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFunc, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glStencilFunc_defined
#endif
#ifndef glStencilFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFuncSeparate, (face, func, ref, mask), (GLenum face, GLenum func, GLint ref, GLuint mask))
#define glStencilFuncSeparate_defined
#endif
#ifndef glStencilMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMask, (mask), (GLuint mask))
#define glStencilMask_defined
#endif
#ifndef glStencilMaskSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMaskSeparate, (face, mask), (GLenum face, GLuint mask))
#define glStencilMaskSeparate_defined
#endif
#ifndef glStencilOp_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOp, (fail, zfail, zpass), (GLenum fail, GLenum zfail, GLenum zpass))
#define glStencilOp_defined
#endif
#ifndef glStencilOpSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOpSeparate, (face, sfail, dpfail, dppass), (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))
#define glStencilOpSeparate_defined
#endif
#ifndef glTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage2D, (target, level, internalformat, width, height, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage2D_defined
#endif
#ifndef glTexParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexParameterf_defined
#endif
#ifndef glTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexParameterfv_defined
#endif
#ifndef glTexParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexParameteri_defined
#endif
#ifndef glTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameteriv_defined
#endif
#ifndef glTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage2D_defined
#endif
#ifndef glUniform1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1f, (location, v0), (GLint location, GLfloat v0))
#define glUniform1f_defined
#endif
#ifndef glUniform1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform1fv_defined
#endif
#ifndef glUniform1i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1i, (location, v0), (GLint location, GLint v0))
#define glUniform1i_defined
#endif
#ifndef glUniform1iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform1iv_defined
#endif
#ifndef glUniform2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2f, (location, v0, v1), (GLint location, GLfloat v0, GLfloat v1))
#define glUniform2f_defined
#endif
#ifndef glUniform2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform2fv_defined
#endif
#ifndef glUniform2i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2i, (location, v0, v1), (GLint location, GLint v0, GLint v1))
#define glUniform2i_defined
#endif
#ifndef glUniform2iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform2iv_defined
#endif
#ifndef glUniform3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3f, (location, v0, v1, v2), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glUniform3f_defined
#endif
#ifndef glUniform3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform3fv_defined
#endif
#ifndef glUniform3i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3i, (location, v0, v1, v2), (GLint location, GLint v0, GLint v1, GLint v2))
#define glUniform3i_defined
#endif
#ifndef glUniform3iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform3iv_defined
#endif
#ifndef glUniform4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4f, (location, v0, v1, v2, v3), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glUniform4f_defined
#endif
#ifndef glUniform4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform4fv_defined
#endif
#ifndef glUniform4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4i, (location, v0, v1, v2, v3), (GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glUniform4i_defined
#endif
#ifndef glUniform4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform4iv_defined
#endif
#ifndef glUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2fv_defined
#endif
#ifndef glUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3fv_defined
#endif
#ifndef glUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4fv_defined
#endif
#ifndef glUseProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgram, (program), (GLuint program))
#define glUseProgram_defined
#endif
#ifndef glValidateProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgram, (program), (GLuint program))
#define glValidateProgram_defined
#endif
#ifndef glVertexAttrib1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1f, (index, x), (GLuint index, GLfloat x))
#define glVertexAttrib1f_defined
#endif
#ifndef glVertexAttrib1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib1fv_defined
#endif
#ifndef glVertexAttrib2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2f, (index, x, y), (GLuint index, GLfloat x, GLfloat y))
#define glVertexAttrib2f_defined
#endif
#ifndef glVertexAttrib2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib2fv_defined
#endif
#ifndef glVertexAttrib3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3f, (index, x, y, z), (GLuint index, GLfloat x, GLfloat y, GLfloat z))
#define glVertexAttrib3f_defined
#endif
#ifndef glVertexAttrib3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib3fv_defined
#endif
#ifndef glVertexAttrib4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4f, (index, x, y, z, w), (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexAttrib4f_defined
#endif
#ifndef glVertexAttrib4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib4fv_defined
#endif
#ifndef glVertexAttribPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribPointer, (index, size, type, normalized, stride, pointer), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))
#define glVertexAttribPointer_defined
#endif
#ifndef glViewport_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewport, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glViewport_defined
#endif
#endif // defined(GL_ES_VERSION_2_0)
#endif // defined(__gles2_gl2_h_)
#if defined(__gles2_gl2ext_h_)
#if defined(GL_AMD_framebuffer_multisample_advanced)
#ifndef glNamedRenderbufferStorageMultisampleAdvancedAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glNamedRenderbufferStorageMultisampleAdvancedAMD, (renderbuffer, samples, storageSamples, internalformat, width, height), (GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height))
#define glNamedRenderbufferStorageMultisampleAdvancedAMD_defined
#endif
#ifndef glRenderbufferStorageMultisampleAdvancedAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisampleAdvancedAMD, (target, samples, storageSamples, internalformat, width, height), (GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleAdvancedAMD_defined
#endif
#endif // defined(GL_AMD_framebuffer_multisample_advanced)
#if defined(GL_AMD_performance_monitor)
#ifndef glBeginPerfMonitorAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginPerfMonitorAMD, (monitor), (GLuint monitor))
#define glBeginPerfMonitorAMD_defined
#endif
#ifndef glDeletePerfMonitorsAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeletePerfMonitorsAMD, (n, monitors), (GLsizei n, GLuint *monitors))
#define glDeletePerfMonitorsAMD_defined
#endif
#ifndef glEndPerfMonitorAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndPerfMonitorAMD, (monitor), (GLuint monitor))
#define glEndPerfMonitorAMD_defined
#endif
#ifndef glGenPerfMonitorsAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenPerfMonitorsAMD, (n, monitors), (GLsizei n, GLuint *monitors))
#define glGenPerfMonitorsAMD_defined
#endif
#ifndef glGetPerfMonitorCounterDataAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfMonitorCounterDataAMD, (monitor, pname, dataSize, data, bytesWritten), (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten))
#define glGetPerfMonitorCounterDataAMD_defined
#endif
#ifndef glGetPerfMonitorCounterInfoAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfMonitorCounterInfoAMD, (group, counter, pname, data), (GLuint group, GLuint counter, GLenum pname, void *data))
#define glGetPerfMonitorCounterInfoAMD_defined
#endif
#ifndef glGetPerfMonitorCounterStringAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfMonitorCounterStringAMD, (group, counter, bufSize, length, counterString), (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString))
#define glGetPerfMonitorCounterStringAMD_defined
#endif
#ifndef glGetPerfMonitorCountersAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfMonitorCountersAMD, (group, numCounters, maxActiveCounters, counterSize, counters), (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters))
#define glGetPerfMonitorCountersAMD_defined
#endif
#ifndef glGetPerfMonitorGroupStringAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfMonitorGroupStringAMD, (group, bufSize, length, groupString), (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString))
#define glGetPerfMonitorGroupStringAMD_defined
#endif
#ifndef glGetPerfMonitorGroupsAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfMonitorGroupsAMD, (numGroups, groupsSize, groups), (GLint *numGroups, GLsizei groupsSize, GLuint *groups))
#define glGetPerfMonitorGroupsAMD_defined
#endif
#ifndef glSelectPerfMonitorCountersAMD_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSelectPerfMonitorCountersAMD, (monitor, enable, group, numCounters, counterList), (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList))
#define glSelectPerfMonitorCountersAMD_defined
#endif
#endif // defined(GL_AMD_performance_monitor)
#if defined(GL_ANGLE_framebuffer_blit)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlitFramebufferANGLE, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebufferANGLE_defined
#endif // defined(GL_ANGLE_framebuffer_blit)
#if defined(GL_ANGLE_framebuffer_multisample)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisampleANGLE, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleANGLE_defined
#endif // defined(GL_ANGLE_framebuffer_multisample)
#if defined(GL_ANGLE_instanced_arrays)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstancedANGLE, (mode, first, count, primcount), (GLenum mode, GLint first, GLsizei count, GLsizei primcount))
#define glDrawArraysInstancedANGLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedANGLE, (mode, count, type, indices, primcount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount))
#define glDrawElementsInstancedANGLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribDivisorANGLE, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisorANGLE_defined
#endif // defined(GL_ANGLE_instanced_arrays)
#if defined(GL_ANGLE_translated_shader_source)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTranslatedShaderSourceANGLE, (shader, bufsize, length, source), (GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source))
#define glGetTranslatedShaderSourceANGLE_defined
#endif // defined(GL_ANGLE_translated_shader_source)
#if defined(GL_APPLE_copy_texture_levels)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTextureLevelsAPPLE, (destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount), (GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount))
#define glCopyTextureLevelsAPPLE_defined
#endif // defined(GL_APPLE_copy_texture_levels)
#if defined(GL_APPLE_framebuffer_multisample)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisampleAPPLE, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleAPPLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glResolveMultisampleFramebufferAPPLE, (), (void))
#define glResolveMultisampleFramebufferAPPLE_defined
#endif // defined(GL_APPLE_framebuffer_multisample)
#if defined(GL_APPLE_sync)
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glClientWaitSyncAPPLE, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glClientWaitSyncAPPLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSyncAPPLE, (sync), (GLsync sync))
#define glDeleteSyncAPPLE_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLsync, GL_APIENTRY, glFenceSyncAPPLE, (condition, flags), (GLenum condition, GLbitfield flags))
#define glFenceSyncAPPLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64vAPPLE, (pname, params), (GLenum pname, GLint64 *params))
#define glGetInteger64vAPPLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSyncivAPPLE, (sync, pname, bufSize, length, values), (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))
#define glGetSyncivAPPLE_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSyncAPPLE, (sync), (GLsync sync))
#define glIsSyncAPPLE_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWaitSyncAPPLE, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glWaitSyncAPPLE_defined
#endif // defined(GL_APPLE_sync)
#if defined(GL_EXT_EGL_image_storage)
#ifndef glEGLImageTargetTexStorageEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEGLImageTargetTexStorageEXT, (target, image, attrib_list), (GLenum target, GLeglImageOES image, const GLint* attrib_list))
#define glEGLImageTargetTexStorageEXT_defined
#endif
#ifndef glEGLImageTargetTextureStorageEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEGLImageTargetTextureStorageEXT, (texture, image, attrib_list), (GLuint texture, GLeglImageOES image, const GLint* attrib_list))
#define glEGLImageTargetTextureStorageEXT_defined
#endif
#endif // defined(GL_EXT_EGL_image_storage)
#if defined(GL_EXT_base_instance)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstancedBaseInstanceEXT, (mode, first, count, instancecount, baseinstance), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance))
#define glDrawArraysInstancedBaseInstanceEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedBaseInstanceEXT, (mode, count, type, indices, instancecount, baseinstance), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance))
#define glDrawElementsInstancedBaseInstanceEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedBaseVertexBaseInstanceEXT, (mode, count, type, indices, instancecount, basevertex, baseinstance), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance))
#define glDrawElementsInstancedBaseVertexBaseInstanceEXT_defined
#endif // defined(GL_EXT_base_instance)
#if defined(GL_EXT_blend_func_extended)
#ifndef glBindFragDataLocationEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindFragDataLocationEXT, (program, color, name), (GLuint program, GLuint color, const GLchar *name))
#define glBindFragDataLocationEXT_defined
#endif
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindFragDataLocationIndexedEXT, (program, colorNumber, index, name), (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name))
#define glBindFragDataLocationIndexedEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetFragDataIndexEXT, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataIndexEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetProgramResourceLocationIndexEXT, (program, programInterface, name), (GLuint program, GLenum programInterface, const GLchar *name))
#define glGetProgramResourceLocationIndexEXT_defined
#endif // defined(GL_EXT_blend_func_extended)
#if defined(GL_EXT_buffer_storage)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferStorageEXT, (target, size, data, flags), (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags))
#define glBufferStorageEXT_defined
#endif // defined(GL_EXT_buffer_storage)
#if defined(GL_EXT_clear_texture)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearTexImageEXT, (texture, level, format, type, data), (GLuint texture, GLint level, GLenum format, GLenum type, const void *data))
#define glClearTexImageEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearTexSubImageEXT, (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data), (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data))
#define glClearTexSubImageEXT_defined
#endif // defined(GL_EXT_clear_texture)
#if defined(GL_EXT_clip_control)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClipControlEXT, (origin, depth), (GLenum origin, GLenum depth))
#define glClipControlEXT_defined
#endif // defined(GL_EXT_clip_control)
#if defined(GL_EXT_copy_image)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyImageSubDataEXT, (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth), (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth))
#define glCopyImageSubDataEXT_defined
#endif // defined(GL_EXT_copy_image)
#if defined(GL_EXT_debug_label)
#ifndef glGetObjectLabelEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetObjectLabelEXT, (type, object, bufSize, length, label), (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectLabelEXT_defined
#endif
#ifndef glLabelObjectEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLabelObjectEXT, (type, object, length, label), (GLenum type, GLuint object, GLsizei length, const GLchar *label))
#define glLabelObjectEXT_defined
#endif
#endif // defined(GL_EXT_debug_label)
#if defined(GL_EXT_debug_marker)
#ifndef glInsertEventMarkerEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInsertEventMarkerEXT, (length, marker), (GLsizei length, const GLchar *marker))
#define glInsertEventMarkerEXT_defined
#endif
#ifndef glPopGroupMarkerEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPopGroupMarkerEXT, (), (void))
#define glPopGroupMarkerEXT_defined
#endif
#ifndef glPushGroupMarkerEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPushGroupMarkerEXT, (length, marker), (GLsizei length, const GLchar *marker))
#define glPushGroupMarkerEXT_defined
#endif
#endif // defined(GL_EXT_debug_marker)
#if defined(GL_EXT_discard_framebuffer)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDiscardFramebufferEXT, (target, numAttachments, attachments), (GLenum target, GLsizei numAttachments, const GLenum *attachments))
#define glDiscardFramebufferEXT_defined
#endif // defined(GL_EXT_discard_framebuffer)
#if defined(GL_EXT_disjoint_timer_query)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginQueryEXT, (target, id), (GLenum target, GLuint id))
#define glBeginQueryEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteQueriesEXT, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteQueriesEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndQueryEXT, (target), (GLenum target))
#define glEndQueryEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenQueriesEXT, (n, ids), (GLsizei n, GLuint *ids))
#define glGenQueriesEXT_defined
#ifndef glGetQueryObjecti64vEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjecti64vEXT, (id, pname, params), (GLuint id, GLenum pname, GLint64 *params))
#define glGetQueryObjecti64vEXT_defined
#endif
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjectivEXT, (id, pname, params), (GLuint id, GLenum pname, GLint *params))
#define glGetQueryObjectivEXT_defined
#ifndef glGetQueryObjectui64vEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjectui64vEXT, (id, pname, params), (GLuint id, GLenum pname, GLuint64 *params))
#define glGetQueryObjectui64vEXT_defined
#endif
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjectuivEXT, (id, pname, params), (GLuint id, GLenum pname, GLuint *params))
#define glGetQueryObjectuivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryivEXT, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetQueryivEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsQueryEXT, (id), (GLuint id))
#define glIsQueryEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glQueryCounterEXT, (id, target), (GLuint id, GLenum target))
#define glQueryCounterEXT_defined
#endif // defined(GL_EXT_disjoint_timer_query)
#if defined(GL_EXT_draw_buffers)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawBuffersEXT, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffersEXT_defined
#endif // defined(GL_EXT_draw_buffers)
#if defined(GL_EXT_draw_buffers_indexed)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparateiEXT, (buf, modeRGB, modeAlpha), (GLuint buf, GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparateiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationiEXT, (buf, mode), (GLuint buf, GLenum mode))
#define glBlendEquationiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparateiEXT, (buf, srcRGB, dstRGB, srcAlpha, dstAlpha), (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))
#define glBlendFuncSeparateiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunciEXT, (buf, src, dst), (GLuint buf, GLenum src, GLenum dst))
#define glBlendFunciEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMaskiEXT, (index, r, g, b, a), (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a))
#define glColorMaskiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableiEXT, (target, index), (GLenum target, GLuint index))
#define glDisableiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableiEXT, (target, index), (GLenum target, GLuint index))
#define glEnableiEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnablediEXT, (target, index), (GLenum target, GLuint index))
#define glIsEnablediEXT_defined
#endif // defined(GL_EXT_draw_buffers_indexed)
#if defined(GL_EXT_draw_elements_base_vertex)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsBaseVertexEXT, (mode, count, type, indices, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawElementsBaseVertexEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedBaseVertexEXT, (mode, count, type, indices, instancecount, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex))
#define glDrawElementsInstancedBaseVertexEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawRangeElementsBaseVertexEXT, (mode, start, end, count, type, indices, basevertex), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawRangeElementsBaseVertexEXT_defined
#endif // defined(GL_EXT_draw_elements_base_vertex)
#if defined(GL_EXT_draw_instanced)
#ifndef glDrawArraysInstancedEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstancedEXT, (mode, start, count, primcount), (GLenum mode, GLint start, GLsizei count, GLsizei primcount))
#define glDrawArraysInstancedEXT_defined
#endif
#ifndef glDrawElementsInstancedEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedEXT, (mode, count, type, indices, primcount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount))
#define glDrawElementsInstancedEXT_defined
#endif
#endif // defined(GL_EXT_draw_instanced)
#if defined(GL_EXT_draw_transform_feedback)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawTransformFeedbackEXT, (mode, id), (GLenum mode, GLuint id))
#define glDrawTransformFeedbackEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawTransformFeedbackInstancedEXT, (mode, id, instancecount), (GLenum mode, GLuint id, GLsizei instancecount))
#define glDrawTransformFeedbackInstancedEXT_defined
#endif // defined(GL_EXT_draw_transform_feedback)
#if defined(GL_EXT_external_buffer)
#ifndef glBufferStorageExternalEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferStorageExternalEXT, (target, offset, size, clientBuffer, flags), (GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags))
#define glBufferStorageExternalEXT_defined
#endif
#ifndef glNamedBufferStorageExternalEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glNamedBufferStorageExternalEXT, (buffer, offset, size, clientBuffer, flags), (GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags))
#define glNamedBufferStorageExternalEXT_defined
#endif
#endif // defined(GL_EXT_external_buffer)
#if defined(GL_EXT_geometry_shader)
#ifndef glFramebufferTextureEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureEXT, (target, attachment, texture, level), (GLenum target, GLenum attachment, GLuint texture, GLint level))
#define glFramebufferTextureEXT_defined
#endif
#endif // defined(GL_EXT_geometry_shader)
#if defined(GL_EXT_instanced_arrays)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribDivisorEXT, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisorEXT_defined
#endif // defined(GL_EXT_instanced_arrays)
#if defined(GL_EXT_map_buffer_range)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlushMappedBufferRangeEXT, (target, offset, length), (GLenum target, GLintptr offset, GLsizeiptr length))
#define glFlushMappedBufferRangeEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, void *, GL_APIENTRY, glMapBufferRangeEXT, (target, offset, length, access), (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapBufferRangeEXT_defined
#endif // defined(GL_EXT_map_buffer_range)
#if defined(GL_EXT_memory_object)
#ifndef glBufferStorageMemEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferStorageMemEXT, (target, size, memory, offset), (GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset))
#define glBufferStorageMemEXT_defined
#endif
#ifndef glCreateMemoryObjectsEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCreateMemoryObjectsEXT, (n, memoryObjects), (GLsizei n, GLuint *memoryObjects))
#define glCreateMemoryObjectsEXT_defined
#endif
#ifndef glDeleteMemoryObjectsEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteMemoryObjectsEXT, (n, memoryObjects), (GLsizei n, const GLuint *memoryObjects))
#define glDeleteMemoryObjectsEXT_defined
#endif
#ifndef glGetMemoryObjectParameterivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetMemoryObjectParameterivEXT, (memoryObject, pname, params), (GLuint memoryObject, GLenum pname, GLint *params))
#define glGetMemoryObjectParameterivEXT_defined
#endif
#ifndef glGetUnsignedBytei_vEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUnsignedBytei_vEXT, (target, index, data), (GLenum target, GLuint index, GLubyte *data))
#define glGetUnsignedBytei_vEXT_defined
#endif
#ifndef glGetUnsignedBytevEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUnsignedBytevEXT, (pname, data), (GLenum pname, GLubyte *data))
#define glGetUnsignedBytevEXT_defined
#endif
#ifndef glIsMemoryObjectEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsMemoryObjectEXT, (memoryObject), (GLuint memoryObject))
#define glIsMemoryObjectEXT_defined
#endif
#ifndef glMemoryObjectParameterivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMemoryObjectParameterivEXT, (memoryObject, pname, params), (GLuint memoryObject, GLenum pname, const GLint *params))
#define glMemoryObjectParameterivEXT_defined
#endif
#ifndef glNamedBufferStorageMemEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glNamedBufferStorageMemEXT, (buffer, size, memory, offset), (GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset))
#define glNamedBufferStorageMemEXT_defined
#endif
#ifndef glTexStorageMem2DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorageMem2DEXT, (target, levels, internalFormat, width, height, memory, offset), (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset))
#define glTexStorageMem2DEXT_defined
#endif
#ifndef glTexStorageMem2DMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorageMem2DMultisampleEXT, (target, samples, internalFormat, width, height, fixedSampleLocations, memory, offset), (GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset))
#define glTexStorageMem2DMultisampleEXT_defined
#endif
#ifndef glTexStorageMem3DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorageMem3DEXT, (target, levels, internalFormat, width, height, depth, memory, offset), (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset))
#define glTexStorageMem3DEXT_defined
#endif
#ifndef glTexStorageMem3DMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorageMem3DMultisampleEXT, (target, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset), (GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset))
#define glTexStorageMem3DMultisampleEXT_defined
#endif
#ifndef glTextureStorageMem2DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureStorageMem2DEXT, (texture, levels, internalFormat, width, height, memory, offset), (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset))
#define glTextureStorageMem2DEXT_defined
#endif
#ifndef glTextureStorageMem2DMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureStorageMem2DMultisampleEXT, (texture, samples, internalFormat, width, height, fixedSampleLocations, memory, offset), (GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset))
#define glTextureStorageMem2DMultisampleEXT_defined
#endif
#ifndef glTextureStorageMem3DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureStorageMem3DEXT, (texture, levels, internalFormat, width, height, depth, memory, offset), (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset))
#define glTextureStorageMem3DEXT_defined
#endif
#ifndef glTextureStorageMem3DMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureStorageMem3DMultisampleEXT, (texture, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset), (GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset))
#define glTextureStorageMem3DMultisampleEXT_defined
#endif
#endif // defined(GL_EXT_memory_object)
#if defined(GL_EXT_memory_object_fd)
#ifndef glImportMemoryFdEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glImportMemoryFdEXT, (memory, size, handleType, fd), (GLuint memory, GLuint64 size, GLenum handleType, GLint fd))
#define glImportMemoryFdEXT_defined
#endif
#endif // defined(GL_EXT_memory_object_fd)
#if defined(GL_EXT_memory_object_win32)
#ifndef glImportMemoryWin32HandleEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glImportMemoryWin32HandleEXT, (memory, size, handleType, handle), (GLuint memory, GLuint64 size, GLenum handleType, void *handle))
#define glImportMemoryWin32HandleEXT_defined
#endif
#ifndef glImportMemoryWin32NameEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glImportMemoryWin32NameEXT, (memory, size, handleType, name), (GLuint memory, GLuint64 size, GLenum handleType, const void *name))
#define glImportMemoryWin32NameEXT_defined
#endif
#endif // defined(GL_EXT_memory_object_win32)
#if defined(GL_EXT_multi_draw_arrays)
#ifndef glMultiDrawArraysEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMultiDrawArraysEXT, (mode, first, count, primcount), (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount))
#define glMultiDrawArraysEXT_defined
#endif
#ifndef glMultiDrawElementsEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMultiDrawElementsEXT, (mode, count, type, indices, primcount), (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount))
#define glMultiDrawElementsEXT_defined
#endif
#endif // defined(GL_EXT_multi_draw_arrays)
#if defined(GL_EXT_multi_draw_indirect)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMultiDrawArraysIndirectEXT, (mode, indirect, drawcount, stride), (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride))
#define glMultiDrawArraysIndirectEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMultiDrawElementsIndirectEXT, (mode, type, indirect, drawcount, stride), (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride))
#define glMultiDrawElementsIndirectEXT_defined
#endif // defined(GL_EXT_multi_draw_indirect)
#if defined(GL_EXT_multisampled_render_to_texture)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2DMultisampleEXT, (target, attachment, textarget, texture, level, samples), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples))
#define glFramebufferTexture2DMultisampleEXT_defined
#ifndef glRenderbufferStorageMultisampleEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisampleEXT, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleEXT_defined
#endif
#endif // defined(GL_EXT_multisampled_render_to_texture)
#if defined(GL_EXT_multiview_draw_buffers)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawBuffersIndexedEXT, (n, location, indices), (GLint n, const GLenum *location, const GLint *indices))
#define glDrawBuffersIndexedEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegeri_vEXT, (target, index, data), (GLenum target, GLuint index, GLint *data))
#define glGetIntegeri_vEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadBufferIndexedEXT, (src, index), (GLenum src, GLint index))
#define glReadBufferIndexedEXT_defined
#endif // defined(GL_EXT_multiview_draw_buffers)
#if defined(GL_EXT_polygon_offset_clamp)
#ifndef glPolygonOffsetClampEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPolygonOffsetClampEXT, (factor, units, clamp), (GLfloat factor, GLfloat units, GLfloat clamp))
#define glPolygonOffsetClampEXT_defined
#endif
#endif // defined(GL_EXT_polygon_offset_clamp)
#if defined(GL_EXT_primitive_bounding_box)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPrimitiveBoundingBoxEXT, (minX, minY, minZ, minW, maxX, maxY, maxZ, maxW), (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW))
#define glPrimitiveBoundingBoxEXT_defined
#endif // defined(GL_EXT_primitive_bounding_box)
#if defined(GL_EXT_raster_multisample)
#ifndef glRasterSamplesEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRasterSamplesEXT, (samples, fixedsamplelocations), (GLuint samples, GLboolean fixedsamplelocations))
#define glRasterSamplesEXT_defined
#endif
#endif // defined(GL_EXT_raster_multisample)
#if defined(GL_EXT_robustness)
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetGraphicsResetStatusEXT, (), (void))
#define glGetGraphicsResetStatusEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformfvEXT, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLfloat *params))
#define glGetnUniformfvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformivEXT, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint *params))
#define glGetnUniformivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadnPixelsEXT, (x, y, width, height, format, type, bufSize, data), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))
#define glReadnPixelsEXT_defined
#endif // defined(GL_EXT_robustness)
#if defined(GL_EXT_semaphore)
#ifndef glDeleteSemaphoresEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSemaphoresEXT, (n, semaphores), (GLsizei n, const GLuint *semaphores))
#define glDeleteSemaphoresEXT_defined
#endif
#ifndef glGenSemaphoresEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenSemaphoresEXT, (n, semaphores), (GLsizei n, GLuint *semaphores))
#define glGenSemaphoresEXT_defined
#endif
#ifndef glGetSemaphoreParameterui64vEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSemaphoreParameterui64vEXT, (semaphore, pname, params), (GLuint semaphore, GLenum pname, GLuint64 *params))
#define glGetSemaphoreParameterui64vEXT_defined
#endif
#ifndef glIsSemaphoreEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSemaphoreEXT, (semaphore), (GLuint semaphore))
#define glIsSemaphoreEXT_defined
#endif
#ifndef glSemaphoreParameterui64vEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSemaphoreParameterui64vEXT, (semaphore, pname, params), (GLuint semaphore, GLenum pname, const GLuint64 *params))
#define glSemaphoreParameterui64vEXT_defined
#endif
#ifndef glSignalSemaphoreEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSignalSemaphoreEXT, (semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, dstLayouts), (GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts))
#define glSignalSemaphoreEXT_defined
#endif
#ifndef glWaitSemaphoreEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWaitSemaphoreEXT, (semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, srcLayouts), (GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts))
#define glWaitSemaphoreEXT_defined
#endif
#endif // defined(GL_EXT_semaphore)
#if defined(GL_EXT_semaphore_fd)
#ifndef glImportSemaphoreFdEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glImportSemaphoreFdEXT, (semaphore, handleType, fd), (GLuint semaphore, GLenum handleType, GLint fd))
#define glImportSemaphoreFdEXT_defined
#endif
#endif // defined(GL_EXT_semaphore_fd)
#if defined(GL_EXT_semaphore_win32)
#ifndef glImportSemaphoreWin32HandleEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glImportSemaphoreWin32HandleEXT, (semaphore, handleType, handle), (GLuint semaphore, GLenum handleType, void *handle))
#define glImportSemaphoreWin32HandleEXT_defined
#endif
#ifndef glImportSemaphoreWin32NameEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glImportSemaphoreWin32NameEXT, (semaphore, handleType, name), (GLuint semaphore, GLenum handleType, const void *name))
#define glImportSemaphoreWin32NameEXT_defined
#endif
#endif // defined(GL_EXT_semaphore_win32)
#if defined(GL_EXT_separate_shader_objects)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveShaderProgramEXT, (pipeline, program), (GLuint pipeline, GLuint program))
#define glActiveShaderProgramEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindProgramPipelineEXT, (pipeline), (GLuint pipeline))
#define glBindProgramPipelineEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShaderProgramvEXT, (type, count, strings), (GLenum type, GLsizei count, const GLchar **strings))
#define glCreateShaderProgramvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgramPipelinesEXT, (n, pipelines), (GLsizei n, const GLuint *pipelines))
#define glDeleteProgramPipelinesEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenProgramPipelinesEXT, (n, pipelines), (GLsizei n, GLuint *pipelines))
#define glGenProgramPipelinesEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramPipelineInfoLogEXT, (pipeline, bufSize, length, infoLog), (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramPipelineInfoLogEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramPipelineivEXT, (pipeline, pname, params), (GLuint pipeline, GLenum pname, GLint *params))
#define glGetProgramPipelineivEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgramPipelineEXT, (pipeline), (GLuint pipeline))
#define glIsProgramPipelineEXT_defined
#ifndef glProgramParameteriEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramParameteriEXT, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteriEXT_defined
#endif
#ifndef glProgramUniform1fEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1fEXT, (program, location, v0), (GLuint program, GLint location, GLfloat v0))
#define glProgramUniform1fEXT_defined
#endif
#ifndef glProgramUniform1fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform1fvEXT_defined
#endif
#ifndef glProgramUniform1iEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1iEXT, (program, location, v0), (GLuint program, GLint location, GLint v0))
#define glProgramUniform1iEXT_defined
#endif
#ifndef glProgramUniform1ivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform1ivEXT_defined
#endif
#ifndef glProgramUniform1uiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1uiEXT, (program, location, v0), (GLuint program, GLint location, GLuint v0))
#define glProgramUniform1uiEXT_defined
#endif
#ifndef glProgramUniform1uivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform1uivEXT_defined
#endif
#ifndef glProgramUniform2fEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2fEXT, (program, location, v0, v1), (GLuint program, GLint location, GLfloat v0, GLfloat v1))
#define glProgramUniform2fEXT_defined
#endif
#ifndef glProgramUniform2fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform2fvEXT_defined
#endif
#ifndef glProgramUniform2iEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2iEXT, (program, location, v0, v1), (GLuint program, GLint location, GLint v0, GLint v1))
#define glProgramUniform2iEXT_defined
#endif
#ifndef glProgramUniform2ivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform2ivEXT_defined
#endif
#ifndef glProgramUniform2uiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2uiEXT, (program, location, v0, v1), (GLuint program, GLint location, GLuint v0, GLuint v1))
#define glProgramUniform2uiEXT_defined
#endif
#ifndef glProgramUniform2uivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform2uivEXT_defined
#endif
#ifndef glProgramUniform3fEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3fEXT, (program, location, v0, v1, v2), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glProgramUniform3fEXT_defined
#endif
#ifndef glProgramUniform3fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform3fvEXT_defined
#endif
#ifndef glProgramUniform3iEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3iEXT, (program, location, v0, v1, v2), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2))
#define glProgramUniform3iEXT_defined
#endif
#ifndef glProgramUniform3ivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform3ivEXT_defined
#endif
#ifndef glProgramUniform3uiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3uiEXT, (program, location, v0, v1, v2), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glProgramUniform3uiEXT_defined
#endif
#ifndef glProgramUniform3uivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform3uivEXT_defined
#endif
#ifndef glProgramUniform4fEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4fEXT, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glProgramUniform4fEXT_defined
#endif
#ifndef glProgramUniform4fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4fvEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLfloat *value))
#define glProgramUniform4fvEXT_defined
#endif
#ifndef glProgramUniform4iEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4iEXT, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glProgramUniform4iEXT_defined
#endif
#ifndef glProgramUniform4ivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4ivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint *value))
#define glProgramUniform4ivEXT_defined
#endif
#ifndef glProgramUniform4uiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4uiEXT, (program, location, v0, v1, v2, v3), (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glProgramUniform4uiEXT_defined
#endif
#ifndef glProgramUniform4uivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4uivEXT, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint *value))
#define glProgramUniform4uivEXT_defined
#endif
#ifndef glProgramUniformMatrix2fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2fvEXT_defined
#endif
#ifndef glProgramUniformMatrix2x3fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2x3fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x3fvEXT_defined
#endif
#ifndef glProgramUniformMatrix2x4fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix2x4fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix2x4fvEXT_defined
#endif
#ifndef glProgramUniformMatrix3fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3fvEXT_defined
#endif
#ifndef glProgramUniformMatrix3x2fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3x2fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x2fvEXT_defined
#endif
#ifndef glProgramUniformMatrix3x4fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix3x4fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix3x4fvEXT_defined
#endif
#ifndef glProgramUniformMatrix4fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4fvEXT_defined
#endif
#ifndef glProgramUniformMatrix4x2fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4x2fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x2fvEXT_defined
#endif
#ifndef glProgramUniformMatrix4x3fvEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformMatrix4x3fvEXT, (program, location, count, transpose, value), (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glProgramUniformMatrix4x3fvEXT_defined
#endif
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgramStagesEXT, (pipeline, stages, program), (GLuint pipeline, GLbitfield stages, GLuint program))
#define glUseProgramStagesEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgramPipelineEXT, (pipeline), (GLuint pipeline))
#define glValidateProgramPipelineEXT_defined
#endif // defined(GL_EXT_separate_shader_objects)
#if defined(GL_EXT_shader_framebuffer_fetch_non_coherent)
#ifndef glFramebufferFetchBarrierEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferFetchBarrierEXT, (), (void))
#define glFramebufferFetchBarrierEXT_defined
#endif
#endif // defined(GL_EXT_shader_framebuffer_fetch_non_coherent)
#if defined(GL_EXT_shader_pixel_local_storage2)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearPixelLocalStorageuiEXT, (offset, n, values), (GLsizei offset, GLsizei n, const GLuint *values))
#define glClearPixelLocalStorageuiEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferPixelLocalStorageSizeEXT, (target, size), (GLuint target, GLsizei size))
#define glFramebufferPixelLocalStorageSizeEXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLsizei, GL_APIENTRY, glGetFramebufferPixelLocalStorageSizeEXT, (target), (GLuint target))
#define glGetFramebufferPixelLocalStorageSizeEXT_defined
#endif // defined(GL_EXT_shader_pixel_local_storage2)
#if defined(GL_EXT_sparse_texture)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexPageCommitmentEXT, (target, level, xoffset, yoffset, zoffset, width, height, depth, commit), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit))
#define glTexPageCommitmentEXT_defined
#endif // defined(GL_EXT_sparse_texture)
#if defined(GL_EXT_tessellation_shader)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPatchParameteriEXT, (pname, value), (GLenum pname, GLint value))
#define glPatchParameteriEXT_defined
#endif // defined(GL_EXT_tessellation_shader)
#if defined(GL_EXT_texture_border_clamp)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterIivEXT, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterIuivEXT, (sampler, pname, params), (GLuint sampler, GLenum pname, GLuint *params))
#define glGetSamplerParameterIuivEXT_defined
#ifndef glGetTexParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterIivEXT, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameterIivEXT_defined
#endif
#ifndef glGetTexParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterIuivEXT, (target, pname, params), (GLenum target, GLenum pname, GLuint *params))
#define glGetTexParameterIuivEXT_defined
#endif
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterIivEXT, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterIuivEXT, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLuint *param))
#define glSamplerParameterIuivEXT_defined
#ifndef glTexParameterIivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterIivEXT, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameterIivEXT_defined
#endif
#ifndef glTexParameterIuivEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterIuivEXT, (target, pname, params), (GLenum target, GLenum pname, const GLuint *params))
#define glTexParameterIuivEXT_defined
#endif
#endif // defined(GL_EXT_texture_border_clamp)
#if defined(GL_EXT_texture_buffer)
#ifndef glTexBufferEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexBufferEXT, (target, internalformat, buffer), (GLenum target, GLenum internalformat, GLuint buffer))
#define glTexBufferEXT_defined
#endif
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexBufferRangeEXT, (target, internalformat, buffer, offset, size), (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTexBufferRangeEXT_defined
#endif // defined(GL_EXT_texture_buffer)
#if defined(GL_EXT_texture_storage)
#ifndef glTexStorage1DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage1DEXT, (target, levels, internalformat, width), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width))
#define glTexStorage1DEXT_defined
#endif
#ifndef glTexStorage2DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage2DEXT, (target, levels, internalformat, width, height), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTexStorage2DEXT_defined
#endif
#ifndef glTexStorage3DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage3DEXT, (target, levels, internalformat, width, height, depth), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTexStorage3DEXT_defined
#endif
#ifndef glTextureStorage1DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureStorage1DEXT, (texture, target, levels, internalformat, width), (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width))
#define glTextureStorage1DEXT_defined
#endif
#ifndef glTextureStorage2DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureStorage2DEXT, (texture, target, levels, internalformat, width, height), (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTextureStorage2DEXT_defined
#endif
#ifndef glTextureStorage3DEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureStorage3DEXT, (texture, target, levels, internalformat, width, height, depth), (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTextureStorage3DEXT_defined
#endif
#endif // defined(GL_EXT_texture_storage)
#if defined(GL_EXT_texture_view)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureViewEXT, (texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers), (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers))
#define glTextureViewEXT_defined
#endif // defined(GL_EXT_texture_view)
#if defined(GL_EXT_win32_keyed_mutex)
#ifndef glAcquireKeyedMutexWin32EXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glAcquireKeyedMutexWin32EXT, (memory, key, timeout), (GLuint memory, GLuint64 key, GLuint timeout))
#define glAcquireKeyedMutexWin32EXT_defined
#endif
#ifndef glReleaseKeyedMutexWin32EXT_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glReleaseKeyedMutexWin32EXT, (memory, key), (GLuint memory, GLuint64 key))
#define glReleaseKeyedMutexWin32EXT_defined
#endif
#endif // defined(GL_EXT_win32_keyed_mutex)
#if defined(GL_EXT_window_rectangles)
#ifndef glWindowRectanglesEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWindowRectanglesEXT, (mode, count, box), (GLenum mode, GLsizei count, const GLint *box))
#define glWindowRectanglesEXT_defined
#endif
#endif // defined(GL_EXT_window_rectangles)
#if defined(GL_IMG_bindless_texture)
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint64, GL_APIENTRY, glGetTextureHandleIMG, (texture), (GLuint texture))
#define glGetTextureHandleIMG_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint64, GL_APIENTRY, glGetTextureSamplerHandleIMG, (texture, sampler), (GLuint texture, GLuint sampler))
#define glGetTextureSamplerHandleIMG_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformHandleui64IMG, (program, location, value), (GLuint program, GLint location, GLuint64 value))
#define glProgramUniformHandleui64IMG_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformHandleui64vIMG, (program, location, count, values), (GLuint program, GLint location, GLsizei count, const GLuint64 *values))
#define glProgramUniformHandleui64vIMG_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformHandleui64IMG, (location, value), (GLint location, GLuint64 value))
#define glUniformHandleui64IMG_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformHandleui64vIMG, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniformHandleui64vIMG_defined
#endif // defined(GL_IMG_bindless_texture)
#if defined(GL_IMG_framebuffer_downsample)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2DDownsampleIMG, (target, attachment, textarget, texture, level, xscale, yscale), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint xscale, GLint yscale))
#define glFramebufferTexture2DDownsampleIMG_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureLayerDownsampleIMG, (target, attachment, texture, level, layer, xscale, yscale), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, GLint xscale, GLint yscale))
#define glFramebufferTextureLayerDownsampleIMG_defined
#endif // defined(GL_IMG_framebuffer_downsample)
#if defined(GL_IMG_multisampled_render_to_texture)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2DMultisampleIMG, (target, attachment, textarget, texture, level, samples), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples))
#define glFramebufferTexture2DMultisampleIMG_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisampleIMG, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleIMG_defined
#endif // defined(GL_IMG_multisampled_render_to_texture)
#if defined(GL_INTEL_framebuffer_CMAA)
#ifndef glApplyFramebufferAttachmentCMAAINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glApplyFramebufferAttachmentCMAAINTEL, (), (void))
#define glApplyFramebufferAttachmentCMAAINTEL_defined
#endif
#endif // defined(GL_INTEL_framebuffer_CMAA)
#if defined(GL_INTEL_performance_query)
#ifndef glBeginPerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginPerfQueryINTEL, (queryHandle), (GLuint queryHandle))
#define glBeginPerfQueryINTEL_defined
#endif
#ifndef glCreatePerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCreatePerfQueryINTEL, (queryId, queryHandle), (GLuint queryId, GLuint *queryHandle))
#define glCreatePerfQueryINTEL_defined
#endif
#ifndef glDeletePerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeletePerfQueryINTEL, (queryHandle), (GLuint queryHandle))
#define glDeletePerfQueryINTEL_defined
#endif
#ifndef glEndPerfQueryINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndPerfQueryINTEL, (queryHandle), (GLuint queryHandle))
#define glEndPerfQueryINTEL_defined
#endif
#ifndef glGetFirstPerfQueryIdINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFirstPerfQueryIdINTEL, (queryId), (GLuint *queryId))
#define glGetFirstPerfQueryIdINTEL_defined
#endif
#ifndef glGetNextPerfQueryIdINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetNextPerfQueryIdINTEL, (queryId, nextQueryId), (GLuint queryId, GLuint *nextQueryId))
#define glGetNextPerfQueryIdINTEL_defined
#endif
#ifndef glGetPerfCounterInfoINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfCounterInfoINTEL, (queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue), (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue))
#define glGetPerfCounterInfoINTEL_defined
#endif
#ifndef glGetPerfQueryDataINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfQueryDataINTEL, (queryHandle, flags, dataSize, data, bytesWritten), (GLuint queryHandle, GLuint flags, GLsizei dataSize, void *data, GLuint *bytesWritten))
#define glGetPerfQueryDataINTEL_defined
#endif
#ifndef glGetPerfQueryIdByNameINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfQueryIdByNameINTEL, (queryName, queryId), (GLchar *queryName, GLuint *queryId))
#define glGetPerfQueryIdByNameINTEL_defined
#endif
#ifndef glGetPerfQueryInfoINTEL_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPerfQueryInfoINTEL, (queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask), (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask))
#define glGetPerfQueryInfoINTEL_defined
#endif
#endif // defined(GL_INTEL_performance_query)
#if defined(GL_KHR_blend_equation_advanced)
#ifndef glBlendBarrierKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendBarrierKHR, (), (void))
#define glBlendBarrierKHR_defined
#endif
#endif // defined(GL_KHR_blend_equation_advanced)
#if defined(GL_KHR_debug)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDebugMessageCallbackKHR, (callback, userParam), (GLDEBUGPROCKHR callback, const void *userParam))
#define glDebugMessageCallbackKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDebugMessageControlKHR, (source, type, severity, count, ids, enabled), (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled))
#define glDebugMessageControlKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDebugMessageInsertKHR, (source, type, id, severity, length, buf), (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf))
#define glDebugMessageInsertKHR_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetDebugMessageLogKHR, (count, bufSize, sources, types, ids, severities, lengths, messageLog), (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog))
#define glGetDebugMessageLogKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetObjectLabelKHR, (identifier, name, bufSize, length, label), (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectLabelKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetObjectPtrLabelKHR, (ptr, bufSize, length, label), (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label))
#define glGetObjectPtrLabelKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPointervKHR, (pname, params), (GLenum pname, void **params))
#define glGetPointervKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glObjectLabelKHR, (identifier, name, length, label), (GLenum identifier, GLuint name, GLsizei length, const GLchar *label))
#define glObjectLabelKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glObjectPtrLabelKHR, (ptr, length, label), (const void *ptr, GLsizei length, const GLchar *label))
#define glObjectPtrLabelKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPopDebugGroupKHR, (), (void))
#define glPopDebugGroupKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPushDebugGroupKHR, (source, id, length, message), (GLenum source, GLuint id, GLsizei length, const GLchar *message))
#define glPushDebugGroupKHR_defined
#endif // defined(GL_KHR_debug)
#if defined(GL_KHR_parallel_shader_compile)
#ifndef glMaxShaderCompilerThreadsKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMaxShaderCompilerThreadsKHR, (count), (GLuint count))
#define glMaxShaderCompilerThreadsKHR_defined
#endif
#endif // defined(GL_KHR_parallel_shader_compile)
#if defined(GL_KHR_robustness)
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetGraphicsResetStatusKHR, (), (void))
#define glGetGraphicsResetStatusKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformfvKHR, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLfloat *params))
#define glGetnUniformfvKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformivKHR, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLint *params))
#define glGetnUniformivKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetnUniformuivKHR, (program, location, bufSize, params), (GLuint program, GLint location, GLsizei bufSize, GLuint *params))
#define glGetnUniformuivKHR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadnPixelsKHR, (x, y, width, height, format, type, bufSize, data), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data))
#define glReadnPixelsKHR_defined
#endif // defined(GL_KHR_robustness)
#if defined(GL_NV_bindless_texture)
#ifndef glGetImageHandleNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint64, GL_APIENTRY, glGetImageHandleNV, (texture, level, layered, layer, format), (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format))
#define glGetImageHandleNV_defined
#endif
#ifndef glGetTextureHandleNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint64, GL_APIENTRY, glGetTextureHandleNV, (texture), (GLuint texture))
#define glGetTextureHandleNV_defined
#endif
#ifndef glGetTextureSamplerHandleNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint64, GL_APIENTRY, glGetTextureSamplerHandleNV, (texture, sampler), (GLuint texture, GLuint sampler))
#define glGetTextureSamplerHandleNV_defined
#endif
#ifndef glIsImageHandleResidentNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsImageHandleResidentNV, (handle), (GLuint64 handle))
#define glIsImageHandleResidentNV_defined
#endif
#ifndef glIsTextureHandleResidentNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTextureHandleResidentNV, (handle), (GLuint64 handle))
#define glIsTextureHandleResidentNV_defined
#endif
#ifndef glMakeImageHandleNonResidentNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMakeImageHandleNonResidentNV, (handle), (GLuint64 handle))
#define glMakeImageHandleNonResidentNV_defined
#endif
#ifndef glMakeImageHandleResidentNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMakeImageHandleResidentNV, (handle, access), (GLuint64 handle, GLenum access))
#define glMakeImageHandleResidentNV_defined
#endif
#ifndef glMakeTextureHandleNonResidentNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMakeTextureHandleNonResidentNV, (handle), (GLuint64 handle))
#define glMakeTextureHandleNonResidentNV_defined
#endif
#ifndef glMakeTextureHandleResidentNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMakeTextureHandleResidentNV, (handle), (GLuint64 handle))
#define glMakeTextureHandleResidentNV_defined
#endif
#ifndef glProgramUniformHandleui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformHandleui64NV, (program, location, value), (GLuint program, GLint location, GLuint64 value))
#define glProgramUniformHandleui64NV_defined
#endif
#ifndef glProgramUniformHandleui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniformHandleui64vNV, (program, location, count, values), (GLuint program, GLint location, GLsizei count, const GLuint64 *values))
#define glProgramUniformHandleui64vNV_defined
#endif
#ifndef glUniformHandleui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformHandleui64NV, (location, value), (GLint location, GLuint64 value))
#define glUniformHandleui64NV_defined
#endif
#ifndef glUniformHandleui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformHandleui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64 *value))
#define glUniformHandleui64vNV_defined
#endif
#endif // defined(GL_NV_bindless_texture)
#if defined(GL_NV_blend_equation_advanced)
#ifndef glBlendBarrierNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendBarrierNV, (), (void))
#define glBlendBarrierNV_defined
#endif
#ifndef glBlendParameteriNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendParameteriNV, (pname, value), (GLenum pname, GLint value))
#define glBlendParameteriNV_defined
#endif
#endif // defined(GL_NV_blend_equation_advanced)
#if defined(GL_NV_clip_space_w_scaling)
#ifndef glViewportPositionWScaleNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportPositionWScaleNV, (index, xcoeff, ycoeff), (GLuint index, GLfloat xcoeff, GLfloat ycoeff))
#define glViewportPositionWScaleNV_defined
#endif
#endif // defined(GL_NV_clip_space_w_scaling)
#if defined(GL_NV_conditional_render)
#ifndef glBeginConditionalRenderNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginConditionalRenderNV, (id, mode), (GLuint id, GLenum mode))
#define glBeginConditionalRenderNV_defined
#endif
#ifndef glEndConditionalRenderNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndConditionalRenderNV, (), (void))
#define glEndConditionalRenderNV_defined
#endif
#endif // defined(GL_NV_conditional_render)
#if defined(GL_NV_conservative_raster)
#ifndef glSubpixelPrecisionBiasNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSubpixelPrecisionBiasNV, (xbits, ybits), (GLuint xbits, GLuint ybits))
#define glSubpixelPrecisionBiasNV_defined
#endif
#endif // defined(GL_NV_conservative_raster)
#if defined(GL_NV_conservative_raster_pre_snap_triangles)
#ifndef glConservativeRasterParameteriNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glConservativeRasterParameteriNV, (pname, param), (GLenum pname, GLint param))
#define glConservativeRasterParameteriNV_defined
#endif
#endif // defined(GL_NV_conservative_raster_pre_snap_triangles)
#if defined(GL_NV_copy_buffer)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyBufferSubDataNV, (readTarget, writeTarget, readOffset, writeOffset, size), (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glCopyBufferSubDataNV_defined
#endif // defined(GL_NV_copy_buffer)
#if defined(GL_NV_coverage_sample)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverageMaskNV, (mask), (GLboolean mask))
#define glCoverageMaskNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverageOperationNV, (operation), (GLenum operation))
#define glCoverageOperationNV_defined
#endif // defined(GL_NV_coverage_sample)
#if defined(GL_NV_draw_buffers)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawBuffersNV, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffersNV_defined
#endif // defined(GL_NV_draw_buffers)
#if defined(GL_NV_draw_instanced)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstancedNV, (mode, first, count, primcount), (GLenum mode, GLint first, GLsizei count, GLsizei primcount))
#define glDrawArraysInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedNV, (mode, count, type, indices, primcount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount))
#define glDrawElementsInstancedNV_defined
#endif // defined(GL_NV_draw_instanced)
#if defined(GL_NV_draw_vulkan_image)
#ifndef glDrawVkImageNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawVkImageNV, (vkImage, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1), (GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1))
#define glDrawVkImageNV_defined
#endif
#ifndef glGetVkProcAddrNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLVULKANPROCNV, GL_APIENTRY, glGetVkProcAddrNV, (name), (const GLchar *name))
#define glGetVkProcAddrNV_defined
#endif
#ifndef glSignalVkFenceNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSignalVkFenceNV, (vkFence), (GLuint64 vkFence))
#define glSignalVkFenceNV_defined
#endif
#ifndef glSignalVkSemaphoreNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSignalVkSemaphoreNV, (vkSemaphore), (GLuint64 vkSemaphore))
#define glSignalVkSemaphoreNV_defined
#endif
#ifndef glWaitVkSemaphoreNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWaitVkSemaphoreNV, (vkSemaphore), (GLuint64 vkSemaphore))
#define glWaitVkSemaphoreNV_defined
#endif
#endif // defined(GL_NV_draw_vulkan_image)
#if defined(GL_NV_fence)
#ifndef glDeleteFencesNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteFencesNV, (n, fences), (GLsizei n, const GLuint *fences))
#define glDeleteFencesNV_defined
#endif
#ifndef glFinishFenceNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFinishFenceNV, (fence), (GLuint fence))
#define glFinishFenceNV_defined
#endif
#ifndef glGenFencesNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenFencesNV, (n, fences), (GLsizei n, GLuint *fences))
#define glGenFencesNV_defined
#endif
#ifndef glGetFenceivNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFenceivNV, (fence, pname, params), (GLuint fence, GLenum pname, GLint *params))
#define glGetFenceivNV_defined
#endif
#ifndef glIsFenceNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsFenceNV, (fence), (GLuint fence))
#define glIsFenceNV_defined
#endif
#ifndef glSetFenceNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSetFenceNV, (fence, condition), (GLuint fence, GLenum condition))
#define glSetFenceNV_defined
#endif
#ifndef glTestFenceNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glTestFenceNV, (fence), (GLuint fence))
#define glTestFenceNV_defined
#endif
#endif // defined(GL_NV_fence)
#if defined(GL_NV_fragment_coverage_to_color)
#ifndef glFragmentCoverageColorNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFragmentCoverageColorNV, (color), (GLuint color))
#define glFragmentCoverageColorNV_defined
#endif
#endif // defined(GL_NV_fragment_coverage_to_color)
#if defined(GL_NV_framebuffer_blit)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlitFramebufferNV, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebufferNV_defined
#endif // defined(GL_NV_framebuffer_blit)
#if defined(GL_NV_framebuffer_mixed_samples)
#ifndef glCoverageModulationNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverageModulationNV, (components), (GLenum components))
#define glCoverageModulationNV_defined
#endif
#ifndef glCoverageModulationTableNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverageModulationTableNV, (n, v), (GLsizei n, const GLfloat *v))
#define glCoverageModulationTableNV_defined
#endif
#ifndef glGetCoverageModulationTableNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetCoverageModulationTableNV, (bufsize, v), (GLsizei bufsize, GLfloat *v))
#define glGetCoverageModulationTableNV_defined
#endif
#endif // defined(GL_NV_framebuffer_mixed_samples)
#if defined(GL_NV_framebuffer_multisample)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisampleNV, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisampleNV_defined
#endif // defined(GL_NV_framebuffer_multisample)
#if defined(GL_NV_gpu_shader5)
#ifndef glGetUniformi64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformi64vNV, (program, location, params), (GLuint program, GLint location, GLint64EXT *params))
#define glGetUniformi64vNV_defined
#endif
#ifndef glProgramUniform1i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1i64NV, (program, location, x), (GLuint program, GLint location, GLint64EXT x))
#define glProgramUniform1i64NV_defined
#endif
#ifndef glProgramUniform1i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform1i64vNV_defined
#endif
#ifndef glProgramUniform1ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1ui64NV, (program, location, x), (GLuint program, GLint location, GLuint64EXT x))
#define glProgramUniform1ui64NV_defined
#endif
#ifndef glProgramUniform1ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform1ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform1ui64vNV_defined
#endif
#ifndef glProgramUniform2i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2i64NV, (program, location, x, y), (GLuint program, GLint location, GLint64EXT x, GLint64EXT y))
#define glProgramUniform2i64NV_defined
#endif
#ifndef glProgramUniform2i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform2i64vNV_defined
#endif
#ifndef glProgramUniform2ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2ui64NV, (program, location, x, y), (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y))
#define glProgramUniform2ui64NV_defined
#endif
#ifndef glProgramUniform2ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform2ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform2ui64vNV_defined
#endif
#ifndef glProgramUniform3i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3i64NV, (program, location, x, y, z), (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z))
#define glProgramUniform3i64NV_defined
#endif
#ifndef glProgramUniform3i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform3i64vNV_defined
#endif
#ifndef glProgramUniform3ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3ui64NV, (program, location, x, y, z), (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z))
#define glProgramUniform3ui64NV_defined
#endif
#ifndef glProgramUniform3ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform3ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform3ui64vNV_defined
#endif
#ifndef glProgramUniform4i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4i64NV, (program, location, x, y, z, w), (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w))
#define glProgramUniform4i64NV_defined
#endif
#ifndef glProgramUniform4i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4i64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLint64EXT *value))
#define glProgramUniform4i64vNV_defined
#endif
#ifndef glProgramUniform4ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4ui64NV, (program, location, x, y, z, w), (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w))
#define glProgramUniform4ui64NV_defined
#endif
#ifndef glProgramUniform4ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramUniform4ui64vNV, (program, location, count, value), (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value))
#define glProgramUniform4ui64vNV_defined
#endif
#ifndef glUniform1i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1i64NV, (location, x), (GLint location, GLint64EXT x))
#define glUniform1i64NV_defined
#endif
#ifndef glUniform1i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform1i64vNV_defined
#endif
#ifndef glUniform1ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1ui64NV, (location, x), (GLint location, GLuint64EXT x))
#define glUniform1ui64NV_defined
#endif
#ifndef glUniform1ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform1ui64vNV_defined
#endif
#ifndef glUniform2i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2i64NV, (location, x, y), (GLint location, GLint64EXT x, GLint64EXT y))
#define glUniform2i64NV_defined
#endif
#ifndef glUniform2i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform2i64vNV_defined
#endif
#ifndef glUniform2ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2ui64NV, (location, x, y), (GLint location, GLuint64EXT x, GLuint64EXT y))
#define glUniform2ui64NV_defined
#endif
#ifndef glUniform2ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform2ui64vNV_defined
#endif
#ifndef glUniform3i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3i64NV, (location, x, y, z), (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z))
#define glUniform3i64NV_defined
#endif
#ifndef glUniform3i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform3i64vNV_defined
#endif
#ifndef glUniform3ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3ui64NV, (location, x, y, z), (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z))
#define glUniform3ui64NV_defined
#endif
#ifndef glUniform3ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform3ui64vNV_defined
#endif
#ifndef glUniform4i64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4i64NV, (location, x, y, z, w), (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w))
#define glUniform4i64NV_defined
#endif
#ifndef glUniform4i64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4i64vNV, (location, count, value), (GLint location, GLsizei count, const GLint64EXT *value))
#define glUniform4i64vNV_defined
#endif
#ifndef glUniform4ui64NV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4ui64NV, (location, x, y, z, w), (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w))
#define glUniform4ui64NV_defined
#endif
#ifndef glUniform4ui64vNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4ui64vNV, (location, count, value), (GLint location, GLsizei count, const GLuint64EXT *value))
#define glUniform4ui64vNV_defined
#endif
#endif // defined(GL_NV_gpu_shader5)
#if defined(GL_NV_instanced_arrays)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribDivisorNV, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisorNV_defined
#endif // defined(GL_NV_instanced_arrays)
#if defined(GL_NV_internalformat_sample_query)
#ifndef glGetInternalformatSampleivNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInternalformatSampleivNV, (target, internalformat, samples, pname, bufSize, params), (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params))
#define glGetInternalformatSampleivNV_defined
#endif
#endif // defined(GL_NV_internalformat_sample_query)
#if defined(GL_NV_non_square_matrices)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x3fvNV, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x3fvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x4fvNV, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x4fvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x2fvNV, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x2fvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x4fvNV, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x4fvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x2fvNV, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x2fvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x3fvNV, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x3fvNV_defined
#endif // defined(GL_NV_non_square_matrices)
#if defined(GL_NV_path_rendering)
#ifndef glCopyPathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyPathNV, (resultPath, srcPath), (GLuint resultPath, GLuint srcPath))
#define glCopyPathNV_defined
#endif
#ifndef glCoverFillPathInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverFillPathInstancedNV, (numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glCoverFillPathInstancedNV_defined
#endif
#ifndef glCoverFillPathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverFillPathNV, (path, coverMode), (GLuint path, GLenum coverMode))
#define glCoverFillPathNV_defined
#endif
#ifndef glCoverStrokePathInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverStrokePathInstancedNV, (numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glCoverStrokePathInstancedNV_defined
#endif
#ifndef glCoverStrokePathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCoverStrokePathNV, (path, coverMode), (GLuint path, GLenum coverMode))
#define glCoverStrokePathNV_defined
#endif
#ifndef glDeletePathsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeletePathsNV, (path, range), (GLuint path, GLsizei range))
#define glDeletePathsNV_defined
#endif
#ifndef glGenPathsNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGenPathsNV, (range), (GLsizei range))
#define glGenPathsNV_defined
#endif
#ifndef glGetPathCommandsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathCommandsNV, (path, commands), (GLuint path, GLubyte *commands))
#define glGetPathCommandsNV_defined
#endif
#ifndef glGetPathCoordsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathCoordsNV, (path, coords), (GLuint path, GLfloat *coords))
#define glGetPathCoordsNV_defined
#endif
#ifndef glGetPathDashArrayNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathDashArrayNV, (path, dashArray), (GLuint path, GLfloat *dashArray))
#define glGetPathDashArrayNV_defined
#endif
#ifndef glGetPathLengthNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLfloat, GL_APIENTRY, glGetPathLengthNV, (path, startSegment, numSegments), (GLuint path, GLsizei startSegment, GLsizei numSegments))
#define glGetPathLengthNV_defined
#endif
#ifndef glGetPathMetricRangeNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathMetricRangeNV, (metricQueryMask, firstPathName, numPaths, stride, metrics), (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics))
#define glGetPathMetricRangeNV_defined
#endif
#ifndef glGetPathMetricsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathMetricsNV, (metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics), (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics))
#define glGetPathMetricsNV_defined
#endif
#ifndef glGetPathParameterfvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathParameterfvNV, (path, pname, value), (GLuint path, GLenum pname, GLfloat *value))
#define glGetPathParameterfvNV_defined
#endif
#ifndef glGetPathParameterivNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathParameterivNV, (path, pname, value), (GLuint path, GLenum pname, GLint *value))
#define glGetPathParameterivNV_defined
#endif
#ifndef glGetPathSpacingNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetPathSpacingNV, (pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing), (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing))
#define glGetPathSpacingNV_defined
#endif
#ifndef glGetProgramResourcefvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramResourcefvNV, (program, programInterface, index, propCount, props, bufSize, length, params), (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params))
#define glGetProgramResourcefvNV_defined
#endif
#ifndef glInterpolatePathsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInterpolatePathsNV, (resultPath, pathA, pathB, weight), (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight))
#define glInterpolatePathsNV_defined
#endif
#ifndef glIsPathNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsPathNV, (path), (GLuint path))
#define glIsPathNV_defined
#endif
#ifndef glIsPointInFillPathNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsPointInFillPathNV, (path, mask, x, y), (GLuint path, GLuint mask, GLfloat x, GLfloat y))
#define glIsPointInFillPathNV_defined
#endif
#ifndef glIsPointInStrokePathNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsPointInStrokePathNV, (path, x, y), (GLuint path, GLfloat x, GLfloat y))
#define glIsPointInStrokePathNV_defined
#endif
#ifndef glMatrixFrustumEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixFrustumEXT, (mode, left, right, bottom, top, zNear, zFar), (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar))
#define glMatrixFrustumEXT_defined
#endif
#ifndef glMatrixLoad3x2fNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixLoad3x2fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixLoad3x2fNV_defined
#endif
#ifndef glMatrixLoad3x3fNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixLoad3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixLoad3x3fNV_defined
#endif
#ifndef glMatrixLoadIdentityEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixLoadIdentityEXT, (mode), (GLenum mode))
#define glMatrixLoadIdentityEXT_defined
#endif
#ifndef glMatrixLoadTranspose3x3fNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixLoadTranspose3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixLoadTranspose3x3fNV_defined
#endif
#ifndef glMatrixLoadTransposedEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixLoadTransposedEXT, (mode, m), (GLenum mode, const GLdouble *m))
#define glMatrixLoadTransposedEXT_defined
#endif
#ifndef glMatrixLoadTransposefEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixLoadTransposefEXT, (mode, m), (GLenum mode, const GLfloat *m))
#define glMatrixLoadTransposefEXT_defined
#endif
#ifndef glMatrixLoaddEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixLoaddEXT, (mode, m), (GLenum mode, const GLdouble *m))
#define glMatrixLoaddEXT_defined
#endif
#ifndef glMatrixLoadfEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixLoadfEXT, (mode, m), (GLenum mode, const GLfloat *m))
#define glMatrixLoadfEXT_defined
#endif
#ifndef glMatrixMult3x2fNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixMult3x2fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixMult3x2fNV_defined
#endif
#ifndef glMatrixMult3x3fNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixMult3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixMult3x3fNV_defined
#endif
#ifndef glMatrixMultTranspose3x3fNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixMultTranspose3x3fNV, (matrixMode, m), (GLenum matrixMode, const GLfloat *m))
#define glMatrixMultTranspose3x3fNV_defined
#endif
#ifndef glMatrixMultTransposedEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixMultTransposedEXT, (mode, m), (GLenum mode, const GLdouble *m))
#define glMatrixMultTransposedEXT_defined
#endif
#ifndef glMatrixMultTransposefEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixMultTransposefEXT, (mode, m), (GLenum mode, const GLfloat *m))
#define glMatrixMultTransposefEXT_defined
#endif
#ifndef glMatrixMultdEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixMultdEXT, (mode, m), (GLenum mode, const GLdouble *m))
#define glMatrixMultdEXT_defined
#endif
#ifndef glMatrixMultfEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixMultfEXT, (mode, m), (GLenum mode, const GLfloat *m))
#define glMatrixMultfEXT_defined
#endif
#ifndef glMatrixOrthoEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixOrthoEXT, (mode, left, right, bottom, top, zNear, zFar), (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar))
#define glMatrixOrthoEXT_defined
#endif
#ifndef glMatrixPopEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixPopEXT, (mode), (GLenum mode))
#define glMatrixPopEXT_defined
#endif
#ifndef glMatrixPushEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixPushEXT, (mode), (GLenum mode))
#define glMatrixPushEXT_defined
#endif
#ifndef glMatrixRotatedEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixRotatedEXT, (mode, angle, x, y, z), (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z))
#define glMatrixRotatedEXT_defined
#endif
#ifndef glMatrixRotatefEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixRotatefEXT, (mode, angle, x, y, z), (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z))
#define glMatrixRotatefEXT_defined
#endif
#ifndef glMatrixScaledEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixScaledEXT, (mode, x, y, z), (GLenum mode, GLdouble x, GLdouble y, GLdouble z))
#define glMatrixScaledEXT_defined
#endif
#ifndef glMatrixScalefEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixScalefEXT, (mode, x, y, z), (GLenum mode, GLfloat x, GLfloat y, GLfloat z))
#define glMatrixScalefEXT_defined
#endif
#ifndef glMatrixTranslatedEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixTranslatedEXT, (mode, x, y, z), (GLenum mode, GLdouble x, GLdouble y, GLdouble z))
#define glMatrixTranslatedEXT_defined
#endif
#ifndef glMatrixTranslatefEXT_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMatrixTranslatefEXT, (mode, x, y, z), (GLenum mode, GLfloat x, GLfloat y, GLfloat z))
#define glMatrixTranslatefEXT_defined
#endif
#ifndef glPathCommandsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathCommandsNV, (path, numCommands, commands, numCoords, coordType, coords), (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathCommandsNV_defined
#endif
#ifndef glPathCoordsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathCoordsNV, (path, numCoords, coordType, coords), (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathCoordsNV_defined
#endif
#ifndef glPathCoverDepthFuncNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathCoverDepthFuncNV, (func), (GLenum func))
#define glPathCoverDepthFuncNV_defined
#endif
#ifndef glPathDashArrayNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathDashArrayNV, (path, dashCount, dashArray), (GLuint path, GLsizei dashCount, const GLfloat *dashArray))
#define glPathDashArrayNV_defined
#endif
#ifndef glPathGlyphIndexArrayNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glPathGlyphIndexArrayNV, (firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathGlyphIndexArrayNV_defined
#endif
#ifndef glPathGlyphIndexRangeNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glPathGlyphIndexRangeNV, (fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount), (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]))
#define glPathGlyphIndexRangeNV_defined
#endif
#ifndef glPathGlyphRangeNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathGlyphRangeNV, (firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathGlyphRangeNV_defined
#endif
#ifndef glPathGlyphsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathGlyphsNV, (firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathGlyphsNV_defined
#endif
#ifndef glPathMemoryGlyphIndexArrayNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glPathMemoryGlyphIndexArrayNV, (firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale), (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale))
#define glPathMemoryGlyphIndexArrayNV_defined
#endif
#ifndef glPathParameterfNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathParameterfNV, (path, pname, value), (GLuint path, GLenum pname, GLfloat value))
#define glPathParameterfNV_defined
#endif
#ifndef glPathParameterfvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathParameterfvNV, (path, pname, value), (GLuint path, GLenum pname, const GLfloat *value))
#define glPathParameterfvNV_defined
#endif
#ifndef glPathParameteriNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathParameteriNV, (path, pname, value), (GLuint path, GLenum pname, GLint value))
#define glPathParameteriNV_defined
#endif
#ifndef glPathParameterivNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathParameterivNV, (path, pname, value), (GLuint path, GLenum pname, const GLint *value))
#define glPathParameterivNV_defined
#endif
#ifndef glPathStencilDepthOffsetNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathStencilDepthOffsetNV, (factor, units), (GLfloat factor, GLfloat units))
#define glPathStencilDepthOffsetNV_defined
#endif
#ifndef glPathStencilFuncNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathStencilFuncNV, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glPathStencilFuncNV_defined
#endif
#ifndef glPathStringNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathStringNV, (path, format, length, pathString), (GLuint path, GLenum format, GLsizei length, const void *pathString))
#define glPathStringNV_defined
#endif
#ifndef glPathSubCommandsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathSubCommandsNV, (path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords), (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathSubCommandsNV_defined
#endif
#ifndef glPathSubCoordsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPathSubCoordsNV, (path, coordStart, numCoords, coordType, coords), (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords))
#define glPathSubCoordsNV_defined
#endif
#ifndef glPointAlongPathNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glPointAlongPathNV, (path, startSegment, numSegments, distance, x, y, tangentX, tangentY), (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY))
#define glPointAlongPathNV_defined
#endif
#ifndef glProgramPathFragmentInputGenNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramPathFragmentInputGenNV, (program, location, genMode, components, coeffs), (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs))
#define glProgramPathFragmentInputGenNV_defined
#endif
#ifndef glStencilFillPathInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFillPathInstancedNV, (numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues))
#define glStencilFillPathInstancedNV_defined
#endif
#ifndef glStencilFillPathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFillPathNV, (path, fillMode, mask), (GLuint path, GLenum fillMode, GLuint mask))
#define glStencilFillPathNV_defined
#endif
#ifndef glStencilStrokePathInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilStrokePathInstancedNV, (numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues))
#define glStencilStrokePathInstancedNV_defined
#endif
#ifndef glStencilStrokePathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilStrokePathNV, (path, reference, mask), (GLuint path, GLint reference, GLuint mask))
#define glStencilStrokePathNV_defined
#endif
#ifndef glStencilThenCoverFillPathInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilThenCoverFillPathInstancedNV, (numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glStencilThenCoverFillPathInstancedNV_defined
#endif
#ifndef glStencilThenCoverFillPathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilThenCoverFillPathNV, (path, fillMode, mask, coverMode), (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode))
#define glStencilThenCoverFillPathNV_defined
#endif
#ifndef glStencilThenCoverStrokePathInstancedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilThenCoverStrokePathInstancedNV, (numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues), (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues))
#define glStencilThenCoverStrokePathInstancedNV_defined
#endif
#ifndef glStencilThenCoverStrokePathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilThenCoverStrokePathNV, (path, reference, mask, coverMode), (GLuint path, GLint reference, GLuint mask, GLenum coverMode))
#define glStencilThenCoverStrokePathNV_defined
#endif
#ifndef glTransformPathNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTransformPathNV, (resultPath, srcPath, transformType, transformValues), (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues))
#define glTransformPathNV_defined
#endif
#ifndef glWeightPathsNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWeightPathsNV, (resultPath, numPaths, paths, weights), (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights))
#define glWeightPathsNV_defined
#endif
#endif // defined(GL_NV_path_rendering)
#if defined(GL_NV_polygon_mode)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPolygonModeNV, (face, mode), (GLenum face, GLenum mode))
#define glPolygonModeNV_defined
#endif // defined(GL_NV_polygon_mode)
#if defined(GL_NV_read_buffer)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadBufferNV, (mode), (GLenum mode))
#define glReadBufferNV_defined
#endif // defined(GL_NV_read_buffer)
#if defined(GL_NV_sample_locations)
#ifndef glFramebufferSampleLocationsfvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferSampleLocationsfvNV, (target, start, count, v), (GLenum target, GLuint start, GLsizei count, const GLfloat *v))
#define glFramebufferSampleLocationsfvNV_defined
#endif
#ifndef glNamedFramebufferSampleLocationsfvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glNamedFramebufferSampleLocationsfvNV, (framebuffer, start, count, v), (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v))
#define glNamedFramebufferSampleLocationsfvNV_defined
#endif
#ifndef glResolveDepthValuesNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glResolveDepthValuesNV, (), (void))
#define glResolveDepthValuesNV_defined
#endif
#endif // defined(GL_NV_sample_locations)
#if defined(GL_NV_viewport_array)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangeArrayfvNV, (first, count, v), (GLuint first, GLsizei count, const GLfloat *v))
#define glDepthRangeArrayfvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangeIndexedfNV, (index, n, f), (GLuint index, GLfloat n, GLfloat f))
#define glDepthRangeIndexedfNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableiNV, (target, index), (GLenum target, GLuint index))
#define glDisableiNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableiNV, (target, index), (GLenum target, GLuint index))
#define glEnableiNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFloati_vNV, (target, index, data), (GLenum target, GLuint index, GLfloat *data))
#define glGetFloati_vNV_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnablediNV, (target, index), (GLenum target, GLuint index))
#define glIsEnablediNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissorArrayvNV, (first, count, v), (GLuint first, GLsizei count, const GLint *v))
#define glScissorArrayvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissorIndexedNV, (index, left, bottom, width, height), (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height))
#define glScissorIndexedNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissorIndexedvNV, (index, v), (GLuint index, const GLint *v))
#define glScissorIndexedvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportArrayvNV, (first, count, v), (GLuint first, GLsizei count, const GLfloat *v))
#define glViewportArrayvNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportIndexedfNV, (index, x, y, w, h), (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h))
#define glViewportIndexedfNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportIndexedfvNV, (index, v), (GLuint index, const GLfloat *v))
#define glViewportIndexedfvNV_defined
#endif // defined(GL_NV_viewport_array)
#if defined(GL_NV_viewport_swizzle)
#ifndef glViewportSwizzleNV_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportSwizzleNV, (index, swizzlex, swizzley, swizzlez, swizzlew), (GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew))
#define glViewportSwizzleNV_defined
#endif
#endif // defined(GL_NV_viewport_swizzle)
#if defined(GL_OES_EGL_image)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEGLImageTargetRenderbufferStorageOES, (target, image), (GLenum target, GLeglImageOES image))
#define glEGLImageTargetRenderbufferStorageOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEGLImageTargetTexture2DOES, (target, image), (GLenum target, GLeglImageOES image))
#define glEGLImageTargetTexture2DOES_defined
#endif // defined(GL_OES_EGL_image)
#if defined(GL_OES_copy_image)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyImageSubDataOES, (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth), (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth))
#define glCopyImageSubDataOES_defined
#endif // defined(GL_OES_copy_image)
#if defined(GL_OES_draw_buffers_indexed)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparateiOES, (buf, modeRGB, modeAlpha), (GLuint buf, GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparateiOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationiOES, (buf, mode), (GLuint buf, GLenum mode))
#define glBlendEquationiOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparateiOES, (buf, srcRGB, dstRGB, srcAlpha, dstAlpha), (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha))
#define glBlendFuncSeparateiOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunciOES, (buf, src, dst), (GLuint buf, GLenum src, GLenum dst))
#define glBlendFunciOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMaskiOES, (index, r, g, b, a), (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a))
#define glColorMaskiOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableiOES, (target, index), (GLenum target, GLuint index))
#define glDisableiOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableiOES, (target, index), (GLenum target, GLuint index))
#define glEnableiOES_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnablediOES, (target, index), (GLenum target, GLuint index))
#define glIsEnablediOES_defined
#endif // defined(GL_OES_draw_buffers_indexed)
#if defined(GL_OES_draw_elements_base_vertex)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsBaseVertexOES, (mode, count, type, indices, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawElementsBaseVertexOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstancedBaseVertexOES, (mode, count, type, indices, instancecount, basevertex), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex))
#define glDrawElementsInstancedBaseVertexOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawRangeElementsBaseVertexOES, (mode, start, end, count, type, indices, basevertex), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex))
#define glDrawRangeElementsBaseVertexOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMultiDrawElementsBaseVertexEXT, (mode, count, type, indices, primcount, basevertex), (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, const GLint *basevertex))
#define glMultiDrawElementsBaseVertexEXT_defined
#endif // defined(GL_OES_draw_elements_base_vertex)
#if defined(GL_OES_geometry_shader)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureOES, (target, attachment, texture, level), (GLenum target, GLenum attachment, GLuint texture, GLint level))
#define glFramebufferTextureOES_defined
#endif // defined(GL_OES_geometry_shader)
#if defined(GL_OES_get_program_binary)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramBinaryOES, (program, bufSize, length, binaryFormat, binary), (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary))
#define glGetProgramBinaryOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramBinaryOES, (program, binaryFormat, binary, length), (GLuint program, GLenum binaryFormat, const void *binary, GLint length))
#define glProgramBinaryOES_defined
#endif // defined(GL_OES_get_program_binary)
#if defined(GL_OES_mapbuffer)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferPointervOES, (target, pname, params), (GLenum target, GLenum pname, void **params))
#define glGetBufferPointervOES_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, void *, GL_APIENTRY, glMapBufferOES, (target, access), (GLenum target, GLenum access))
#define glMapBufferOES_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glUnmapBufferOES, (target), (GLenum target))
#define glUnmapBufferOES_defined
#endif // defined(GL_OES_mapbuffer)
#if defined(GL_OES_primitive_bounding_box)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPrimitiveBoundingBoxOES, (minX, minY, minZ, minW, maxX, maxY, maxZ, maxW), (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW))
#define glPrimitiveBoundingBoxOES_defined
#endif // defined(GL_OES_primitive_bounding_box)
#if defined(GL_OES_sample_shading)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glMinSampleShadingOES, (value), (GLfloat value))
#define glMinSampleShadingOES_defined
#endif // defined(GL_OES_sample_shading)
#if defined(GL_OES_tessellation_shader)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPatchParameteriOES, (pname, value), (GLenum pname, GLint value))
#define glPatchParameteriOES_defined
#endif // defined(GL_OES_tessellation_shader)
#if defined(GL_OES_texture_3D)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage3DOES, (target, level, internalformat, width, height, depth, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage3DOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage3DOES, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage3DOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage3DOES, (target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage3DOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture3DOES, (target, attachment, textarget, texture, level, zoffset), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset))
#define glFramebufferTexture3DOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage3DOES, (target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage3DOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage3DOES, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage3DOES_defined
#endif // defined(GL_OES_texture_3D)
#if defined(GL_OES_texture_border_clamp)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterIivOES, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameterIivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterIuivOES, (sampler, pname, params), (GLuint sampler, GLenum pname, GLuint *params))
#define glGetSamplerParameterIuivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterIivOES, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameterIivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterIuivOES, (target, pname, params), (GLenum target, GLenum pname, GLuint *params))
#define glGetTexParameterIuivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterIivOES, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameterIivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterIuivOES, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLuint *param))
#define glSamplerParameterIuivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterIivOES, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameterIivOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterIuivOES, (target, pname, params), (GLenum target, GLenum pname, const GLuint *params))
#define glTexParameterIuivOES_defined
#endif // defined(GL_OES_texture_border_clamp)
#if defined(GL_OES_texture_buffer)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexBufferOES, (target, internalformat, buffer), (GLenum target, GLenum internalformat, GLuint buffer))
#define glTexBufferOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexBufferRangeOES, (target, internalformat, buffer, offset, size), (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glTexBufferRangeOES_defined
#endif // defined(GL_OES_texture_buffer)
#if defined(GL_OES_texture_storage_multisample_2d_array)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage3DMultisampleOES, (target, samples, internalformat, width, height, depth, fixedsamplelocations), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations))
#define glTexStorage3DMultisampleOES_defined
#endif // defined(GL_OES_texture_storage_multisample_2d_array)
#if defined(GL_OES_texture_view)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureViewOES, (texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers), (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers))
#define glTextureViewOES_defined
#endif // defined(GL_OES_texture_view)
#if defined(GL_OES_vertex_array_object)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindVertexArrayOES, (array), (GLuint array))
#define glBindVertexArrayOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteVertexArraysOES, (n, arrays), (GLsizei n, const GLuint *arrays))
#define glDeleteVertexArraysOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenVertexArraysOES, (n, arrays), (GLsizei n, GLuint *arrays))
#define glGenVertexArraysOES_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsVertexArrayOES, (array), (GLuint array))
#define glIsVertexArrayOES_defined
#endif // defined(GL_OES_vertex_array_object)
#if defined(GL_OES_viewport_array)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangeArrayfvOES, (first, count, v), (GLuint first, GLsizei count, const GLfloat *v))
#define glDepthRangeArrayfvOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangeIndexedfOES, (index, n, f), (GLuint index, GLfloat n, GLfloat f))
#define glDepthRangeIndexedfOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFloati_vOES, (target, index, data), (GLenum target, GLuint index, GLfloat *data))
#define glGetFloati_vOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissorArrayvOES, (first, count, v), (GLuint first, GLsizei count, const GLint *v))
#define glScissorArrayvOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissorIndexedOES, (index, left, bottom, width, height), (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height))
#define glScissorIndexedOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissorIndexedvOES, (index, v), (GLuint index, const GLint *v))
#define glScissorIndexedvOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportArrayvOES, (first, count, v), (GLuint first, GLsizei count, const GLfloat *v))
#define glViewportArrayvOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportIndexedfOES, (index, x, y, w, h), (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h))
#define glViewportIndexedfOES_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewportIndexedfvOES, (index, v), (GLuint index, const GLfloat *v))
#define glViewportIndexedfvOES_defined
#endif // defined(GL_OES_viewport_array)
#if defined(GL_OVR_multiview)
#ifndef glFramebufferTextureMultiviewOVR_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureMultiviewOVR, (target, attachment, texture, level, baseViewIndex, numViews), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews))
#define glFramebufferTextureMultiviewOVR_defined
#endif
#endif // defined(GL_OVR_multiview)
#if defined(GL_OVR_multiview_multisampled_render_to_texture)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureMultisampleMultiviewOVR, (target, attachment, texture, level, samples, baseViewIndex, numViews), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews))
#define glFramebufferTextureMultisampleMultiviewOVR_defined
#endif // defined(GL_OVR_multiview_multisampled_render_to_texture)
#if defined(GL_QCOM_alpha_test)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glAlphaFuncQCOM, (func, ref), (GLenum func, GLclampf ref))
#define glAlphaFuncQCOM_defined
#endif // defined(GL_QCOM_alpha_test)
#if defined(GL_QCOM_driver_control)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableDriverControlQCOM, (driverControl), (GLuint driverControl))
#define glDisableDriverControlQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableDriverControlQCOM, (driverControl), (GLuint driverControl))
#define glEnableDriverControlQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetDriverControlStringQCOM, (driverControl, bufSize, length, driverControlString), (GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString))
#define glGetDriverControlStringQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetDriverControlsQCOM, (num, size, driverControls), (GLint *num, GLsizei size, GLuint *driverControls))
#define glGetDriverControlsQCOM_defined
#endif // defined(GL_QCOM_driver_control)
#if defined(GL_QCOM_extended_get)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetBufferPointervQCOM, (target, params), (GLenum target, void **params))
#define glExtGetBufferPointervQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetBuffersQCOM, (buffers, maxBuffers, numBuffers), (GLuint *buffers, GLint maxBuffers, GLint *numBuffers))
#define glExtGetBuffersQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetFramebuffersQCOM, (framebuffers, maxFramebuffers, numFramebuffers), (GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers))
#define glExtGetFramebuffersQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetRenderbuffersQCOM, (renderbuffers, maxRenderbuffers, numRenderbuffers), (GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers))
#define glExtGetRenderbuffersQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetTexLevelParameterivQCOM, (texture, face, level, pname, params), (GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params))
#define glExtGetTexLevelParameterivQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetTexSubImageQCOM, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void *texels))
#define glExtGetTexSubImageQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetTexturesQCOM, (textures, maxTextures, numTextures), (GLuint *textures, GLint maxTextures, GLint *numTextures))
#define glExtGetTexturesQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtTexObjectStateOverrideiQCOM, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glExtTexObjectStateOverrideiQCOM_defined
#endif // defined(GL_QCOM_extended_get)
#if defined(GL_QCOM_extended_get2)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetProgramBinarySourceQCOM, (program, shadertype, source, length), (GLuint program, GLenum shadertype, GLchar *source, GLint *length))
#define glExtGetProgramBinarySourceQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetProgramsQCOM, (programs, maxPrograms, numPrograms), (GLuint *programs, GLint maxPrograms, GLint *numPrograms))
#define glExtGetProgramsQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glExtGetShadersQCOM, (shaders, maxShaders, numShaders), (GLuint *shaders, GLint maxShaders, GLint *numShaders))
#define glExtGetShadersQCOM_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glExtIsProgramBinaryQCOM, (program), (GLuint program))
#define glExtIsProgramBinaryQCOM_defined
#endif // defined(GL_QCOM_extended_get2)
#if defined(GL_QCOM_framebuffer_foveated)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferFoveationConfigQCOM, (framebuffer, numLayers, focalPointsPerLayer, requestedFeatures, providedFeatures), (GLuint framebuffer, GLuint numLayers, GLuint focalPointsPerLayer, GLuint requestedFeatures, GLuint *providedFeatures))
#define glFramebufferFoveationConfigQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferFoveationParametersQCOM, (framebuffer, layer, focalPoint, focalX, focalY, gainX, gainY, foveaArea), (GLuint framebuffer, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea))
#define glFramebufferFoveationParametersQCOM_defined
#endif // defined(GL_QCOM_framebuffer_foveated)
#if defined(GL_QCOM_shader_framebuffer_fetch_noncoherent)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferFetchBarrierQCOM, (), (void))
#define glFramebufferFetchBarrierQCOM_defined
#endif // defined(GL_QCOM_shader_framebuffer_fetch_noncoherent)
#if defined(GL_QCOM_texture_foveated)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTextureFoveationParametersQCOM, (texture, layer, focalPoint, focalX, focalY, gainX, gainY, foveaArea), (GLuint texture, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea))
#define glTextureFoveationParametersQCOM_defined
#endif // defined(GL_QCOM_texture_foveated)
#if defined(GL_QCOM_tiled_rendering)
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndTilingQCOM, (preserveMask), (GLbitfield preserveMask))
#define glEndTilingQCOM_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStartTilingQCOM, (x, y, width, height, preserveMask), (GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask))
#define glStartTilingQCOM_defined
#endif // defined(GL_QCOM_tiled_rendering)
#endif // defined(__gles2_gl2ext_h_)
#if defined(__gles2_gl3_h_)
#if defined(GL_ES_VERSION_2_0)
#ifndef glActiveTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glActiveTexture, (texture), (GLenum texture))
#define glActiveTexture_defined
#endif
#ifndef glAttachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glAttachShader, (program, shader), (GLuint program, GLuint shader))
#define glAttachShader_defined
#endif
#ifndef glBindAttribLocation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindAttribLocation, (program, index, name), (GLuint program, GLuint index, const GLchar *name))
#define glBindAttribLocation_defined
#endif
#ifndef glBindBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBuffer, (target, buffer), (GLenum target, GLuint buffer))
#define glBindBuffer_defined
#endif
#ifndef glBindFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindFramebuffer, (target, framebuffer), (GLenum target, GLuint framebuffer))
#define glBindFramebuffer_defined
#endif
#ifndef glBindRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindRenderbuffer, (target, renderbuffer), (GLenum target, GLuint renderbuffer))
#define glBindRenderbuffer_defined
#endif
#ifndef glBindTexture_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTexture, (target, texture), (GLenum target, GLuint texture))
#define glBindTexture_defined
#endif
#ifndef glBlendColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glBlendColor_defined
#endif
#ifndef glBlendEquation_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquation, (mode), (GLenum mode))
#define glBlendEquation_defined
#endif
#ifndef glBlendEquationSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendEquationSeparate, (modeRGB, modeAlpha), (GLenum modeRGB, GLenum modeAlpha))
#define glBlendEquationSeparate_defined
#endif
#ifndef glBlendFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFunc, (sfactor, dfactor), (GLenum sfactor, GLenum dfactor))
#define glBlendFunc_defined
#endif
#ifndef glBlendFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlendFuncSeparate, (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha), (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha))
#define glBlendFuncSeparate_defined
#endif
#ifndef glBufferData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferData, (target, size, data, usage), (GLenum target, GLsizeiptr size, const void *data, GLenum usage))
#define glBufferData_defined
#endif
#ifndef glBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBufferSubData, (target, offset, size, data), (GLenum target, GLintptr offset, GLsizeiptr size, const void *data))
#define glBufferSubData_defined
#endif
#ifndef glCheckFramebufferStatus_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glCheckFramebufferStatus, (target), (GLenum target))
#define glCheckFramebufferStatus_defined
#endif
#ifndef glClear_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClear, (mask), (GLbitfield mask))
#define glClear_defined
#endif
#ifndef glClearColor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearColor, (red, green, blue, alpha), (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha))
#define glClearColor_defined
#endif
#ifndef glClearDepthf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearDepthf, (d), (GLfloat d))
#define glClearDepthf_defined
#endif
#ifndef glClearStencil_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearStencil, (s), (GLint s))
#define glClearStencil_defined
#endif
#ifndef glColorMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glColorMask, (red, green, blue, alpha), (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha))
#define glColorMask_defined
#endif
#ifndef glCompileShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompileShader, (shader), (GLuint shader))
#define glCompileShader_defined
#endif
#ifndef glCompressedTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage2D, (target, level, internalformat, width, height, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage2D_defined
#endif
#ifndef glCompressedTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage2D_defined
#endif
#ifndef glCopyTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexImage2D, (target, level, internalformat, x, y, width, height, border), (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border))
#define glCopyTexImage2D_defined
#endif
#ifndef glCopyTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage2D, (target, level, xoffset, yoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage2D_defined
#endif
#ifndef glCreateProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateProgram, (), (void))
#define glCreateProgram_defined
#endif
#ifndef glCreateShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glCreateShader, (type), (GLenum type))
#define glCreateShader_defined
#endif
#ifndef glCullFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCullFace, (mode), (GLenum mode))
#define glCullFace_defined
#endif
#ifndef glDeleteBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteBuffers, (n, buffers), (GLsizei n, const GLuint *buffers))
#define glDeleteBuffers_defined
#endif
#ifndef glDeleteFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteFramebuffers, (n, framebuffers), (GLsizei n, const GLuint *framebuffers))
#define glDeleteFramebuffers_defined
#endif
#ifndef glDeleteProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteProgram, (program), (GLuint program))
#define glDeleteProgram_defined
#endif
#ifndef glDeleteRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteRenderbuffers, (n, renderbuffers), (GLsizei n, const GLuint *renderbuffers))
#define glDeleteRenderbuffers_defined
#endif
#ifndef glDeleteShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteShader, (shader), (GLuint shader))
#define glDeleteShader_defined
#endif
#ifndef glDeleteTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTextures, (n, textures), (GLsizei n, const GLuint *textures))
#define glDeleteTextures_defined
#endif
#ifndef glDepthFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthFunc, (func), (GLenum func))
#define glDepthFunc_defined
#endif
#ifndef glDepthMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthMask, (flag), (GLboolean flag))
#define glDepthMask_defined
#endif
#ifndef glDepthRangef_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDepthRangef, (n, f), (GLfloat n, GLfloat f))
#define glDepthRangef_defined
#endif
#ifndef glDetachShader_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDetachShader, (program, shader), (GLuint program, GLuint shader))
#define glDetachShader_defined
#endif
#ifndef glDisable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisable, (cap), (GLenum cap))
#define glDisable_defined
#endif
#ifndef glDisableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDisableVertexAttribArray, (index), (GLuint index))
#define glDisableVertexAttribArray_defined
#endif
#ifndef glDrawArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArrays, (mode, first, count), (GLenum mode, GLint first, GLsizei count))
#define glDrawArrays_defined
#endif
#ifndef glDrawElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElements, (mode, count, type, indices), (GLenum mode, GLsizei count, GLenum type, const void *indices))
#define glDrawElements_defined
#endif
#ifndef glEnable_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnable, (cap), (GLenum cap))
#define glEnable_defined
#endif
#ifndef glEnableVertexAttribArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEnableVertexAttribArray, (index), (GLuint index))
#define glEnableVertexAttribArray_defined
#endif
#ifndef glFinish_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFinish, (), (void))
#define glFinish_defined
#endif
#ifndef glFlush_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlush, (), (void))
#define glFlush_defined
#endif
#ifndef glFramebufferRenderbuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferRenderbuffer, (target, attachment, renderbuffertarget, renderbuffer), (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer))
#define glFramebufferRenderbuffer_defined
#endif
#ifndef glFramebufferTexture2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTexture2D, (target, attachment, textarget, texture, level), (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level))
#define glFramebufferTexture2D_defined
#endif
#ifndef glFrontFace_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFrontFace, (mode), (GLenum mode))
#define glFrontFace_defined
#endif
#ifndef glGenBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenBuffers, (n, buffers), (GLsizei n, GLuint *buffers))
#define glGenBuffers_defined
#endif
#ifndef glGenFramebuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenFramebuffers, (n, framebuffers), (GLsizei n, GLuint *framebuffers))
#define glGenFramebuffers_defined
#endif
#ifndef glGenRenderbuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenRenderbuffers, (n, renderbuffers), (GLsizei n, GLuint *renderbuffers))
#define glGenRenderbuffers_defined
#endif
#ifndef glGenTextures_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTextures, (n, textures), (GLsizei n, GLuint *textures))
#define glGenTextures_defined
#endif
#ifndef glGenerateMipmap_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenerateMipmap, (target), (GLenum target))
#define glGenerateMipmap_defined
#endif
#ifndef glGetActiveAttrib_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveAttrib, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveAttrib_defined
#endif
#ifndef glGetActiveUniform_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniform, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name))
#define glGetActiveUniform_defined
#endif
#ifndef glGetAttachedShaders_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetAttachedShaders, (program, maxCount, count, shaders), (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders))
#define glGetAttachedShaders_defined
#endif
#ifndef glGetAttribLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetAttribLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetAttribLocation_defined
#endif
#ifndef glGetBooleanv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBooleanv, (pname, data), (GLenum pname, GLboolean *data))
#define glGetBooleanv_defined
#endif
#ifndef glGetBufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetBufferParameteriv_defined
#endif
#ifndef glGetError_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glGetError, (), (void))
#define glGetError_defined
#endif
#ifndef glGetFloatv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFloatv, (pname, data), (GLenum pname, GLfloat *data))
#define glGetFloatv_defined
#endif
#ifndef glGetFramebufferAttachmentParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetFramebufferAttachmentParameteriv, (target, attachment, pname, params), (GLenum target, GLenum attachment, GLenum pname, GLint *params))
#define glGetFramebufferAttachmentParameteriv_defined
#endif
#ifndef glGetIntegerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegerv, (pname, data), (GLenum pname, GLint *data))
#define glGetIntegerv_defined
#endif
#ifndef glGetProgramInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramInfoLog, (program, bufSize, length, infoLog), (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetProgramInfoLog_defined
#endif
#ifndef glGetProgramiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramiv, (program, pname, params), (GLuint program, GLenum pname, GLint *params))
#define glGetProgramiv_defined
#endif
#ifndef glGetRenderbufferParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetRenderbufferParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetRenderbufferParameteriv_defined
#endif
#ifndef glGetShaderInfoLog_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderInfoLog, (shader, bufSize, length, infoLog), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog))
#define glGetShaderInfoLog_defined
#endif
#ifndef glGetShaderPrecisionFormat_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderPrecisionFormat, (shadertype, precisiontype, range, precision), (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision))
#define glGetShaderPrecisionFormat_defined
#endif
#ifndef glGetShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderSource, (shader, bufSize, length, source), (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source))
#define glGetShaderSource_defined
#endif
#ifndef glGetShaderiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetShaderiv, (shader, pname, params), (GLuint shader, GLenum pname, GLint *params))
#define glGetShaderiv_defined
#endif
#ifndef glGetString_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetString, (name), (GLenum name))
#define glGetString_defined
#endif
#ifndef glGetTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, GLfloat *params))
#define glGetTexParameterfv_defined
#endif
#ifndef glGetTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetTexParameteriv_defined
#endif
#ifndef glGetUniformLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetUniformLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetUniformLocation_defined
#endif
#ifndef glGetUniformfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformfv, (program, location, params), (GLuint program, GLint location, GLfloat *params))
#define glGetUniformfv_defined
#endif
#ifndef glGetUniformiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformiv, (program, location, params), (GLuint program, GLint location, GLint *params))
#define glGetUniformiv_defined
#endif
#ifndef glGetVertexAttribPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribPointerv, (index, pname, pointer), (GLuint index, GLenum pname, void **pointer))
#define glGetVertexAttribPointerv_defined
#endif
#ifndef glGetVertexAttribfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribfv, (index, pname, params), (GLuint index, GLenum pname, GLfloat *params))
#define glGetVertexAttribfv_defined
#endif
#ifndef glGetVertexAttribiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribiv_defined
#endif
#ifndef glHint_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glHint, (target, mode), (GLenum target, GLenum mode))
#define glHint_defined
#endif
#ifndef glIsBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsBuffer, (buffer), (GLuint buffer))
#define glIsBuffer_defined
#endif
#ifndef glIsEnabled_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsEnabled, (cap), (GLenum cap))
#define glIsEnabled_defined
#endif
#ifndef glIsFramebuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsFramebuffer, (framebuffer), (GLuint framebuffer))
#define glIsFramebuffer_defined
#endif
#ifndef glIsProgram_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsProgram, (program), (GLuint program))
#define glIsProgram_defined
#endif
#ifndef glIsRenderbuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsRenderbuffer, (renderbuffer), (GLuint renderbuffer))
#define glIsRenderbuffer_defined
#endif
#ifndef glIsShader_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsShader, (shader), (GLuint shader))
#define glIsShader_defined
#endif
#ifndef glIsTexture_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTexture, (texture), (GLuint texture))
#define glIsTexture_defined
#endif
#ifndef glLineWidth_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLineWidth, (width), (GLfloat width))
#define glLineWidth_defined
#endif
#ifndef glLinkProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glLinkProgram, (program), (GLuint program))
#define glLinkProgram_defined
#endif
#ifndef glPixelStorei_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPixelStorei, (pname, param), (GLenum pname, GLint param))
#define glPixelStorei_defined
#endif
#ifndef glPolygonOffset_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPolygonOffset, (factor, units), (GLfloat factor, GLfloat units))
#define glPolygonOffset_defined
#endif
#ifndef glReadPixels_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadPixels, (x, y, width, height, format, type, pixels), (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels))
#define glReadPixels_defined
#endif
#ifndef glReleaseShaderCompiler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReleaseShaderCompiler, (), (void))
#define glReleaseShaderCompiler_defined
#endif
#ifndef glRenderbufferStorage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorage, (target, internalformat, width, height), (GLenum target, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorage_defined
#endif
#ifndef glSampleCoverage_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSampleCoverage, (value, invert), (GLfloat value, GLboolean invert))
#define glSampleCoverage_defined
#endif
#ifndef glScissor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glScissor, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glScissor_defined
#endif
#ifndef glShaderBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderBinary, (count, shaders, binaryformat, binary, length), (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length))
#define glShaderBinary_defined
#endif
#ifndef glShaderSource_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glShaderSource, (shader, count, string, length), (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length))
#define glShaderSource_defined
#endif
#ifndef glStencilFunc_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFunc, (func, ref, mask), (GLenum func, GLint ref, GLuint mask))
#define glStencilFunc_defined
#endif
#ifndef glStencilFuncSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilFuncSeparate, (face, func, ref, mask), (GLenum face, GLenum func, GLint ref, GLuint mask))
#define glStencilFuncSeparate_defined
#endif
#ifndef glStencilMask_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMask, (mask), (GLuint mask))
#define glStencilMask_defined
#endif
#ifndef glStencilMaskSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilMaskSeparate, (face, mask), (GLenum face, GLuint mask))
#define glStencilMaskSeparate_defined
#endif
#ifndef glStencilOp_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOp, (fail, zfail, zpass), (GLenum fail, GLenum zfail, GLenum zpass))
#define glStencilOp_defined
#endif
#ifndef glStencilOpSeparate_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glStencilOpSeparate, (face, sfail, dpfail, dppass), (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass))
#define glStencilOpSeparate_defined
#endif
#ifndef glTexImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage2D, (target, level, internalformat, width, height, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage2D_defined
#endif
#ifndef glTexParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterf, (target, pname, param), (GLenum target, GLenum pname, GLfloat param))
#define glTexParameterf_defined
#endif
#ifndef glTexParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameterfv, (target, pname, params), (GLenum target, GLenum pname, const GLfloat *params))
#define glTexParameterfv_defined
#endif
#ifndef glTexParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteri, (target, pname, param), (GLenum target, GLenum pname, GLint param))
#define glTexParameteri_defined
#endif
#ifndef glTexParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexParameteriv, (target, pname, params), (GLenum target, GLenum pname, const GLint *params))
#define glTexParameteriv_defined
#endif
#ifndef glTexSubImage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage2D, (target, level, xoffset, yoffset, width, height, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage2D_defined
#endif
#ifndef glUniform1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1f, (location, v0), (GLint location, GLfloat v0))
#define glUniform1f_defined
#endif
#ifndef glUniform1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform1fv_defined
#endif
#ifndef glUniform1i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1i, (location, v0), (GLint location, GLint v0))
#define glUniform1i_defined
#endif
#ifndef glUniform1iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform1iv_defined
#endif
#ifndef glUniform2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2f, (location, v0, v1), (GLint location, GLfloat v0, GLfloat v1))
#define glUniform2f_defined
#endif
#ifndef glUniform2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform2fv_defined
#endif
#ifndef glUniform2i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2i, (location, v0, v1), (GLint location, GLint v0, GLint v1))
#define glUniform2i_defined
#endif
#ifndef glUniform2iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform2iv_defined
#endif
#ifndef glUniform3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3f, (location, v0, v1, v2), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2))
#define glUniform3f_defined
#endif
#ifndef glUniform3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform3fv_defined
#endif
#ifndef glUniform3i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3i, (location, v0, v1, v2), (GLint location, GLint v0, GLint v1, GLint v2))
#define glUniform3i_defined
#endif
#ifndef glUniform3iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform3iv_defined
#endif
#ifndef glUniform4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4f, (location, v0, v1, v2, v3), (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3))
#define glUniform4f_defined
#endif
#ifndef glUniform4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4fv, (location, count, value), (GLint location, GLsizei count, const GLfloat *value))
#define glUniform4fv_defined
#endif
#ifndef glUniform4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4i, (location, v0, v1, v2, v3), (GLint location, GLint v0, GLint v1, GLint v2, GLint v3))
#define glUniform4i_defined
#endif
#ifndef glUniform4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4iv, (location, count, value), (GLint location, GLsizei count, const GLint *value))
#define glUniform4iv_defined
#endif
#ifndef glUniformMatrix2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2fv_defined
#endif
#ifndef glUniformMatrix3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3fv_defined
#endif
#ifndef glUniformMatrix4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4fv_defined
#endif
#ifndef glUseProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUseProgram, (program), (GLuint program))
#define glUseProgram_defined
#endif
#ifndef glValidateProgram_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glValidateProgram, (program), (GLuint program))
#define glValidateProgram_defined
#endif
#ifndef glVertexAttrib1f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1f, (index, x), (GLuint index, GLfloat x))
#define glVertexAttrib1f_defined
#endif
#ifndef glVertexAttrib1fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib1fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib1fv_defined
#endif
#ifndef glVertexAttrib2f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2f, (index, x, y), (GLuint index, GLfloat x, GLfloat y))
#define glVertexAttrib2f_defined
#endif
#ifndef glVertexAttrib2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib2fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib2fv_defined
#endif
#ifndef glVertexAttrib3f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3f, (index, x, y, z), (GLuint index, GLfloat x, GLfloat y, GLfloat z))
#define glVertexAttrib3f_defined
#endif
#ifndef glVertexAttrib3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib3fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib3fv_defined
#endif
#ifndef glVertexAttrib4f_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4f, (index, x, y, z, w), (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w))
#define glVertexAttrib4f_defined
#endif
#ifndef glVertexAttrib4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttrib4fv, (index, v), (GLuint index, const GLfloat *v))
#define glVertexAttrib4fv_defined
#endif
#ifndef glVertexAttribPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribPointer, (index, size, type, normalized, stride, pointer), (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer))
#define glVertexAttribPointer_defined
#endif
#ifndef glViewport_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glViewport, (x, y, width, height), (GLint x, GLint y, GLsizei width, GLsizei height))
#define glViewport_defined
#endif
#endif // defined(GL_ES_VERSION_2_0)
#if defined(GL_ES_VERSION_3_0)
#ifndef glBeginQuery_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginQuery, (target, id), (GLenum target, GLuint id))
#define glBeginQuery_defined
#endif
#ifndef glBeginTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBeginTransformFeedback, (primitiveMode), (GLenum primitiveMode))
#define glBeginTransformFeedback_defined
#endif
#ifndef glBindBufferBase_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBufferBase, (target, index, buffer), (GLenum target, GLuint index, GLuint buffer))
#define glBindBufferBase_defined
#endif
#ifndef glBindBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindBufferRange, (target, index, buffer, offset, size), (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size))
#define glBindBufferRange_defined
#endif
#ifndef glBindSampler_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindSampler, (unit, sampler), (GLuint unit, GLuint sampler))
#define glBindSampler_defined
#endif
#ifndef glBindTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindTransformFeedback, (target, id), (GLenum target, GLuint id))
#define glBindTransformFeedback_defined
#endif
#ifndef glBindVertexArray_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBindVertexArray, (array), (GLuint array))
#define glBindVertexArray_defined
#endif
#ifndef glBlitFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glBlitFramebuffer, (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter), (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter))
#define glBlitFramebuffer_defined
#endif
#ifndef glClearBufferfi_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferfi, (buffer, drawbuffer, depth, stencil), (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil))
#define glClearBufferfi_defined
#endif
#ifndef glClearBufferfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferfv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLfloat *value))
#define glClearBufferfv_defined
#endif
#ifndef glClearBufferiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLint *value))
#define glClearBufferiv_defined
#endif
#ifndef glClearBufferuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glClearBufferuiv, (buffer, drawbuffer, value), (GLenum buffer, GLint drawbuffer, const GLuint *value))
#define glClearBufferuiv_defined
#endif
#ifndef glClientWaitSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLenum, GL_APIENTRY, glClientWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glClientWaitSync_defined
#endif
#ifndef glCompressedTexImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexImage3D, (target, level, internalformat, width, height, depth, border, imageSize, data), (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data))
#define glCompressedTexImage3D_defined
#endif
#ifndef glCompressedTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCompressedTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data))
#define glCompressedTexSubImage3D_defined
#endif
#ifndef glCopyBufferSubData_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyBufferSubData, (readTarget, writeTarget, readOffset, writeOffset, size), (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size))
#define glCopyBufferSubData_defined
#endif
#ifndef glCopyTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glCopyTexSubImage3D, (target, level, xoffset, yoffset, zoffset, x, y, width, height), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height))
#define glCopyTexSubImage3D_defined
#endif
#ifndef glDeleteQueries_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteQueries, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteQueries_defined
#endif
#ifndef glDeleteSamplers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSamplers, (count, samplers), (GLsizei count, const GLuint *samplers))
#define glDeleteSamplers_defined
#endif
#ifndef glDeleteSync_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteSync, (sync), (GLsync sync))
#define glDeleteSync_defined
#endif
#ifndef glDeleteTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteTransformFeedbacks, (n, ids), (GLsizei n, const GLuint *ids))
#define glDeleteTransformFeedbacks_defined
#endif
#ifndef glDeleteVertexArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDeleteVertexArrays, (n, arrays), (GLsizei n, const GLuint *arrays))
#define glDeleteVertexArrays_defined
#endif
#ifndef glDrawArraysInstanced_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawArraysInstanced, (mode, first, count, instancecount), (GLenum mode, GLint first, GLsizei count, GLsizei instancecount))
#define glDrawArraysInstanced_defined
#endif
#ifndef glDrawBuffers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawBuffers, (n, bufs), (GLsizei n, const GLenum *bufs))
#define glDrawBuffers_defined
#endif
#ifndef glDrawElementsInstanced_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawElementsInstanced, (mode, count, type, indices, instancecount), (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount))
#define glDrawElementsInstanced_defined
#endif
#ifndef glDrawRangeElements_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glDrawRangeElements, (mode, start, end, count, type, indices), (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices))
#define glDrawRangeElements_defined
#endif
#ifndef glEndQuery_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndQuery, (target), (GLenum target))
#define glEndQuery_defined
#endif
#ifndef glEndTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glEndTransformFeedback, (), (void))
#define glEndTransformFeedback_defined
#endif
#ifndef glFenceSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLsync, GL_APIENTRY, glFenceSync, (condition, flags), (GLenum condition, GLbitfield flags))
#define glFenceSync_defined
#endif
#ifndef glFlushMappedBufferRange_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFlushMappedBufferRange, (target, offset, length), (GLenum target, GLintptr offset, GLsizeiptr length))
#define glFlushMappedBufferRange_defined
#endif
#ifndef glFramebufferTextureLayer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glFramebufferTextureLayer, (target, attachment, texture, level, layer), (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer))
#define glFramebufferTextureLayer_defined
#endif
#ifndef glGenQueries_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenQueries, (n, ids), (GLsizei n, GLuint *ids))
#define glGenQueries_defined
#endif
#ifndef glGenSamplers_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenSamplers, (count, samplers), (GLsizei count, GLuint *samplers))
#define glGenSamplers_defined
#endif
#ifndef glGenTransformFeedbacks_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenTransformFeedbacks, (n, ids), (GLsizei n, GLuint *ids))
#define glGenTransformFeedbacks_defined
#endif
#ifndef glGenVertexArrays_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGenVertexArrays, (n, arrays), (GLsizei n, GLuint *arrays))
#define glGenVertexArrays_defined
#endif
#ifndef glGetActiveUniformBlockName_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformBlockName, (program, uniformBlockIndex, bufSize, length, uniformBlockName), (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName))
#define glGetActiveUniformBlockName_defined
#endif
#ifndef glGetActiveUniformBlockiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformBlockiv, (program, uniformBlockIndex, pname, params), (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params))
#define glGetActiveUniformBlockiv_defined
#endif
#ifndef glGetActiveUniformsiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetActiveUniformsiv, (program, uniformCount, uniformIndices, pname, params), (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params))
#define glGetActiveUniformsiv_defined
#endif
#ifndef glGetBufferParameteri64v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferParameteri64v, (target, pname, params), (GLenum target, GLenum pname, GLint64 *params))
#define glGetBufferParameteri64v_defined
#endif
#ifndef glGetBufferPointerv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetBufferPointerv, (target, pname, params), (GLenum target, GLenum pname, void **params))
#define glGetBufferPointerv_defined
#endif
#ifndef glGetFragDataLocation_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLint, GL_APIENTRY, glGetFragDataLocation, (program, name), (GLuint program, const GLchar *name))
#define glGetFragDataLocation_defined
#endif
#ifndef glGetInteger64i_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64i_v, (target, index, data), (GLenum target, GLuint index, GLint64 *data))
#define glGetInteger64i_v_defined
#endif
#ifndef glGetInteger64v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInteger64v, (pname, data), (GLenum pname, GLint64 *data))
#define glGetInteger64v_defined
#endif
#ifndef glGetIntegeri_v_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetIntegeri_v, (target, index, data), (GLenum target, GLuint index, GLint *data))
#define glGetIntegeri_v_defined
#endif
#ifndef glGetInternalformativ_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetInternalformativ, (target, internalformat, pname, bufSize, params), (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params))
#define glGetInternalformativ_defined
#endif
#ifndef glGetProgramBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetProgramBinary, (program, bufSize, length, binaryFormat, binary), (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary))
#define glGetProgramBinary_defined
#endif
#ifndef glGetQueryObjectuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryObjectuiv, (id, pname, params), (GLuint id, GLenum pname, GLuint *params))
#define glGetQueryObjectuiv_defined
#endif
#ifndef glGetQueryiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetQueryiv, (target, pname, params), (GLenum target, GLenum pname, GLint *params))
#define glGetQueryiv_defined
#endif
#ifndef glGetSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameterfv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLfloat *params))
#define glGetSamplerParameterfv_defined
#endif
#ifndef glGetSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSamplerParameteriv, (sampler, pname, params), (GLuint sampler, GLenum pname, GLint *params))
#define glGetSamplerParameteriv_defined
#endif
#ifndef glGetStringi_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, const GLubyte *, GL_APIENTRY, glGetStringi, (name, index), (GLenum name, GLuint index))
#define glGetStringi_defined
#endif
#ifndef glGetSynciv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetSynciv, (sync, pname, bufSize, length, values), (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values))
#define glGetSynciv_defined
#endif
#ifndef glGetTransformFeedbackVarying_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetTransformFeedbackVarying, (program, index, bufSize, length, size, type, name), (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name))
#define glGetTransformFeedbackVarying_defined
#endif
#ifndef glGetUniformBlockIndex_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLuint, GL_APIENTRY, glGetUniformBlockIndex, (program, uniformBlockName), (GLuint program, const GLchar *uniformBlockName))
#define glGetUniformBlockIndex_defined
#endif
#ifndef glGetUniformIndices_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformIndices, (program, uniformCount, uniformNames, uniformIndices), (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices))
#define glGetUniformIndices_defined
#endif
#ifndef glGetUniformuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetUniformuiv, (program, location, params), (GLuint program, GLint location, GLuint *params))
#define glGetUniformuiv_defined
#endif
#ifndef glGetVertexAttribIiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribIiv, (index, pname, params), (GLuint index, GLenum pname, GLint *params))
#define glGetVertexAttribIiv_defined
#endif
#ifndef glGetVertexAttribIuiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glGetVertexAttribIuiv, (index, pname, params), (GLuint index, GLenum pname, GLuint *params))
#define glGetVertexAttribIuiv_defined
#endif
#ifndef glInvalidateFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInvalidateFramebuffer, (target, numAttachments, attachments), (GLenum target, GLsizei numAttachments, const GLenum *attachments))
#define glInvalidateFramebuffer_defined
#endif
#ifndef glInvalidateSubFramebuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glInvalidateSubFramebuffer, (target, numAttachments, attachments, x, y, width, height), (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height))
#define glInvalidateSubFramebuffer_defined
#endif
#ifndef glIsQuery_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsQuery, (id), (GLuint id))
#define glIsQuery_defined
#endif
#ifndef glIsSampler_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSampler, (sampler), (GLuint sampler))
#define glIsSampler_defined
#endif
#ifndef glIsSync_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsSync, (sync), (GLsync sync))
#define glIsSync_defined
#endif
#ifndef glIsTransformFeedback_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsTransformFeedback, (id), (GLuint id))
#define glIsTransformFeedback_defined
#endif
#ifndef glIsVertexArray_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glIsVertexArray, (array), (GLuint array))
#define glIsVertexArray_defined
#endif
#ifndef glMapBufferRange_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, void *, GL_APIENTRY, glMapBufferRange, (target, offset, length, access), (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access))
#define glMapBufferRange_defined
#endif
#ifndef glPauseTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glPauseTransformFeedback, (), (void))
#define glPauseTransformFeedback_defined
#endif
#ifndef glProgramBinary_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramBinary, (program, binaryFormat, binary, length), (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length))
#define glProgramBinary_defined
#endif
#ifndef glProgramParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glProgramParameteri, (program, pname, value), (GLuint program, GLenum pname, GLint value))
#define glProgramParameteri_defined
#endif
#ifndef glReadBuffer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glReadBuffer, (src), (GLenum src))
#define glReadBuffer_defined
#endif
#ifndef glRenderbufferStorageMultisample_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glRenderbufferStorageMultisample, (target, samples, internalformat, width, height), (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height))
#define glRenderbufferStorageMultisample_defined
#endif
#ifndef glResumeTransformFeedback_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glResumeTransformFeedback, (), (void))
#define glResumeTransformFeedback_defined
#endif
#ifndef glSamplerParameterf_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterf, (sampler, pname, param), (GLuint sampler, GLenum pname, GLfloat param))
#define glSamplerParameterf_defined
#endif
#ifndef glSamplerParameterfv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameterfv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLfloat *param))
#define glSamplerParameterfv_defined
#endif
#ifndef glSamplerParameteri_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameteri, (sampler, pname, param), (GLuint sampler, GLenum pname, GLint param))
#define glSamplerParameteri_defined
#endif
#ifndef glSamplerParameteriv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glSamplerParameteriv, (sampler, pname, param), (GLuint sampler, GLenum pname, const GLint *param))
#define glSamplerParameteriv_defined
#endif
#ifndef glTexImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexImage3D, (target, level, internalformat, width, height, depth, border, format, type, pixels), (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels))
#define glTexImage3D_defined
#endif
#ifndef glTexStorage2D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage2D, (target, levels, internalformat, width, height), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height))
#define glTexStorage2D_defined
#endif
#ifndef glTexStorage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexStorage3D, (target, levels, internalformat, width, height, depth), (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth))
#define glTexStorage3D_defined
#endif
#ifndef glTexSubImage3D_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTexSubImage3D, (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels), (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels))
#define glTexSubImage3D_defined
#endif
#ifndef glTransformFeedbackVaryings_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glTransformFeedbackVaryings, (program, count, varyings, bufferMode), (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode))
#define glTransformFeedbackVaryings_defined
#endif
#ifndef glUniform1ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1ui, (location, v0), (GLint location, GLuint v0))
#define glUniform1ui_defined
#endif
#ifndef glUniform1uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform1uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform1uiv_defined
#endif
#ifndef glUniform2ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2ui, (location, v0, v1), (GLint location, GLuint v0, GLuint v1))
#define glUniform2ui_defined
#endif
#ifndef glUniform2uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform2uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform2uiv_defined
#endif
#ifndef glUniform3ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3ui, (location, v0, v1, v2), (GLint location, GLuint v0, GLuint v1, GLuint v2))
#define glUniform3ui_defined
#endif
#ifndef glUniform3uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform3uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform3uiv_defined
#endif
#ifndef glUniform4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4ui, (location, v0, v1, v2, v3), (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3))
#define glUniform4ui_defined
#endif
#ifndef glUniform4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniform4uiv, (location, count, value), (GLint location, GLsizei count, const GLuint *value))
#define glUniform4uiv_defined
#endif
#ifndef glUniformBlockBinding_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformBlockBinding, (program, uniformBlockIndex, uniformBlockBinding), (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding))
#define glUniformBlockBinding_defined
#endif
#ifndef glUniformMatrix2x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x3fv_defined
#endif
#ifndef glUniformMatrix2x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix2x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix2x4fv_defined
#endif
#ifndef glUniformMatrix3x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x2fv_defined
#endif
#ifndef glUniformMatrix3x4fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix3x4fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix3x4fv_defined
#endif
#ifndef glUniformMatrix4x2fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x2fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x2fv_defined
#endif
#ifndef glUniformMatrix4x3fv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glUniformMatrix4x3fv, (location, count, transpose, value), (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value))
#define glUniformMatrix4x3fv_defined
#endif
#ifndef glUnmapBuffer_defined
GLATTER_FBLOCK(return, GL, GL_APICALL, GLboolean, GL_APIENTRY, glUnmapBuffer, (target), (GLenum target))
#define glUnmapBuffer_defined
#endif
#ifndef glVertexAttribDivisor_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribDivisor, (index, divisor), (GLuint index, GLuint divisor))
#define glVertexAttribDivisor_defined
#endif
#ifndef glVertexAttribI4i_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4i, (index, x, y, z, w), (GLuint index, GLint x, GLint y, GLint z, GLint w))
#define glVertexAttribI4i_defined
#endif
#ifndef glVertexAttribI4iv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4iv, (index, v), (GLuint index, const GLint *v))
#define glVertexAttribI4iv_defined
#endif
#ifndef glVertexAttribI4ui_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4ui, (index, x, y, z, w), (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w))
#define glVertexAttribI4ui_defined
#endif
#ifndef glVertexAttribI4uiv_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribI4uiv, (index, v), (GLuint index, const GLuint *v))
#define glVertexAttribI4uiv_defined
#endif
#ifndef glVertexAttribIPointer_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glVertexAttribIPointer, (index, size, type, stride, pointer), (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer))
#define glVertexAttribIPointer_defined
#endif
#ifndef glWaitSync_defined
GLATTER_FBLOCK(, GL, GL_APICALL, void, GL_APIENTRY, glWaitSync, (sync, flags, timeout), (GLsync sync, GLbitfield flags, GLuint64 timeout))
#define glWaitSync_defined
#endif
#endif // defined(__gles2_gl3_h_)
#endif // defined(GL_ES_VERSION_3_0)
#endif // GLATTER_GL

