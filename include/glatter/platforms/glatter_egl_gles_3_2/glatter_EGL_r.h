/*
Copyright 2018 Ioannis Makris

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation and/or
other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

// This file was generated by glatter.py script.



#ifdef GLATTER_EGL
#if defined(__egl_h_)
#if defined(EGL_VERSION_1_0)
#ifndef eglChooseConfig
#define eglChooseConfig(dpy, attrib_list, configs, config_size, num_config) glatter_eglChooseConfig((dpy), (attrib_list), (configs), (config_size), (num_config))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglChooseConfig, (EGLDisplay dpy, const EGLint *attrib_list, EGLConfig *configs, EGLint config_size, EGLint *num_config))
#ifndef eglCopyBuffers
#define eglCopyBuffers(dpy, surface, target) glatter_eglCopyBuffers((dpy), (surface), (target))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCopyBuffers, (EGLDisplay dpy, EGLSurface surface, EGLNativePixmapType target))
#ifndef eglCreateContext
#define eglCreateContext(dpy, config, share_context, attrib_list) glatter_eglCreateContext((dpy), (config), (share_context), (attrib_list))
#endif
GLATTER_UBLOCK(EGLContext, EGLAPIENTRY, eglCreateContext, (EGLDisplay dpy, EGLConfig config, EGLContext share_context, const EGLint *attrib_list))
#ifndef eglCreatePbufferSurface
#define eglCreatePbufferSurface(dpy, config, attrib_list) glatter_eglCreatePbufferSurface((dpy), (config), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePbufferSurface, (EGLDisplay dpy, EGLConfig config, const EGLint *attrib_list))
#ifndef eglCreatePixmapSurface
#define eglCreatePixmapSurface(dpy, config, pixmap, attrib_list) glatter_eglCreatePixmapSurface((dpy), (config), (pixmap), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePixmapSurface, (EGLDisplay dpy, EGLConfig config, EGLNativePixmapType pixmap, const EGLint *attrib_list))
#ifndef eglCreateWindowSurface
#define eglCreateWindowSurface(dpy, config, win, attrib_list) glatter_eglCreateWindowSurface((dpy), (config), (win), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreateWindowSurface, (EGLDisplay dpy, EGLConfig config, EGLNativeWindowType win, const EGLint *attrib_list))
#ifndef eglDestroyContext
#define eglDestroyContext(dpy, ctx) glatter_eglDestroyContext((dpy), (ctx))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroyContext, (EGLDisplay dpy, EGLContext ctx))
#ifndef eglDestroySurface
#define eglDestroySurface(dpy, surface) glatter_eglDestroySurface((dpy), (surface))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroySurface, (EGLDisplay dpy, EGLSurface surface))
#ifndef eglGetConfigAttrib
#define eglGetConfigAttrib(dpy, config, attribute, value) glatter_eglGetConfigAttrib((dpy), (config), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetConfigAttrib, (EGLDisplay dpy, EGLConfig config, EGLint attribute, EGLint *value))
#ifndef eglGetConfigs
#define eglGetConfigs(dpy, configs, config_size, num_config) glatter_eglGetConfigs((dpy), (configs), (config_size), (num_config))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetConfigs, (EGLDisplay dpy, EGLConfig *configs, EGLint config_size, EGLint *num_config))
#ifndef eglGetCurrentDisplay
#define eglGetCurrentDisplay() glatter_eglGetCurrentDisplay()
#endif
GLATTER_UBLOCK(EGLDisplay, EGLAPIENTRY, eglGetCurrentDisplay, (void))
#ifndef eglGetCurrentSurface
#define eglGetCurrentSurface(readdraw) glatter_eglGetCurrentSurface((readdraw))
#endif
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglGetCurrentSurface, (EGLint readdraw))
#ifndef eglGetDisplay
#define eglGetDisplay(display_id) glatter_eglGetDisplay((display_id))
#endif
GLATTER_UBLOCK(EGLDisplay, EGLAPIENTRY, eglGetDisplay, (EGLNativeDisplayType display_id))
#ifndef eglGetError
#define eglGetError() glatter_eglGetError()
#endif
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglGetError, (void))
#ifndef eglGetProcAddress
#define eglGetProcAddress(procname) glatter_eglGetProcAddress((procname))
#endif
GLATTER_UBLOCK(__eglMustCastToProperFunctionPointerType, EGLAPIENTRY, eglGetProcAddress, (const char *procname))
#ifndef eglInitialize
#define eglInitialize(dpy, major, minor) glatter_eglInitialize((dpy), (major), (minor))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglInitialize, (EGLDisplay dpy, EGLint *major, EGLint *minor))
#ifndef eglMakeCurrent
#define eglMakeCurrent(dpy, draw, read, ctx) glatter_eglMakeCurrent((dpy), (draw), (read), (ctx))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglMakeCurrent, (EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx))
#ifndef eglQueryContext
#define eglQueryContext(dpy, ctx, attribute, value) glatter_eglQueryContext((dpy), (ctx), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryContext, (EGLDisplay dpy, EGLContext ctx, EGLint attribute, EGLint *value))
#ifndef eglQueryString
#define eglQueryString(dpy, name) glatter_eglQueryString((dpy), (name))
#endif
GLATTER_UBLOCK(const char *, EGLAPIENTRY, eglQueryString, (EGLDisplay dpy, EGLint name))
#ifndef eglQuerySurface
#define eglQuerySurface(dpy, surface, attribute, value) glatter_eglQuerySurface((dpy), (surface), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQuerySurface, (EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint *value))
#ifndef eglSwapBuffers
#define eglSwapBuffers(dpy, surface) glatter_eglSwapBuffers((dpy), (surface))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSwapBuffers, (EGLDisplay dpy, EGLSurface surface))
#ifndef eglTerminate
#define eglTerminate(dpy) glatter_eglTerminate((dpy))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglTerminate, (EGLDisplay dpy))
#ifndef eglWaitGL
#define eglWaitGL() glatter_eglWaitGL()
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglWaitGL, (void))
#ifndef eglWaitNative
#define eglWaitNative(engine) glatter_eglWaitNative((engine))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglWaitNative, (EGLint engine))
#endif // defined(EGL_VERSION_1_0)
#if defined(EGL_VERSION_1_1)
#ifndef eglBindTexImage
#define eglBindTexImage(dpy, surface, buffer) glatter_eglBindTexImage((dpy), (surface), (buffer))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglBindTexImage, (EGLDisplay dpy, EGLSurface surface, EGLint buffer))
#ifndef eglReleaseTexImage
#define eglReleaseTexImage(dpy, surface, buffer) glatter_eglReleaseTexImage((dpy), (surface), (buffer))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglReleaseTexImage, (EGLDisplay dpy, EGLSurface surface, EGLint buffer))
#ifndef eglSurfaceAttrib
#define eglSurfaceAttrib(dpy, surface, attribute, value) glatter_eglSurfaceAttrib((dpy), (surface), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSurfaceAttrib, (EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint value))
#ifndef eglSwapInterval
#define eglSwapInterval(dpy, interval) glatter_eglSwapInterval((dpy), (interval))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSwapInterval, (EGLDisplay dpy, EGLint interval))
#endif // defined(EGL_VERSION_1_1)
#if defined(EGL_VERSION_1_2)
#ifndef eglBindAPI
#define eglBindAPI(api) glatter_eglBindAPI((api))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglBindAPI, (EGLenum api))
#ifndef eglCreatePbufferFromClientBuffer
#define eglCreatePbufferFromClientBuffer(dpy, buftype, buffer, config, attrib_list) glatter_eglCreatePbufferFromClientBuffer((dpy), (buftype), (buffer), (config), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePbufferFromClientBuffer, (EGLDisplay dpy, EGLenum buftype, EGLClientBuffer buffer, EGLConfig config, const EGLint *attrib_list))
#ifndef eglQueryAPI
#define eglQueryAPI() glatter_eglQueryAPI()
#endif
GLATTER_UBLOCK(EGLenum, EGLAPIENTRY, eglQueryAPI, (void))
#ifndef eglReleaseThread
#define eglReleaseThread() glatter_eglReleaseThread()
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglReleaseThread, (void))
#ifndef eglWaitClient
#define eglWaitClient() glatter_eglWaitClient()
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglWaitClient, (void))
#endif // defined(EGL_VERSION_1_2)
#if defined(EGL_VERSION_1_4)
#ifndef eglGetCurrentContext
#define eglGetCurrentContext() glatter_eglGetCurrentContext()
#endif
GLATTER_UBLOCK(EGLContext, EGLAPIENTRY, eglGetCurrentContext, (void))
#endif // defined(EGL_VERSION_1_4)
#if defined(EGL_VERSION_1_5)
#ifndef eglClientWaitSync
#define eglClientWaitSync(dpy, sync, flags, timeout) glatter_eglClientWaitSync((dpy), (sync), (flags), (timeout))
#endif
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglClientWaitSync, (EGLDisplay dpy, EGLSync sync, EGLint flags, EGLTime timeout))
#ifndef eglCreateImage
#define eglCreateImage(dpy, ctx, target, buffer, attrib_list) glatter_eglCreateImage((dpy), (ctx), (target), (buffer), (attrib_list))
#endif
GLATTER_UBLOCK(EGLImage, EGLAPIENTRY, eglCreateImage, (EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLAttrib *attrib_list))
#ifndef eglCreatePlatformPixmapSurface
#define eglCreatePlatformPixmapSurface(dpy, config, native_pixmap, attrib_list) glatter_eglCreatePlatformPixmapSurface((dpy), (config), (native_pixmap), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePlatformPixmapSurface, (EGLDisplay dpy, EGLConfig config, void *native_pixmap, const EGLAttrib *attrib_list))
#ifndef eglCreatePlatformWindowSurface
#define eglCreatePlatformWindowSurface(dpy, config, native_window, attrib_list) glatter_eglCreatePlatformWindowSurface((dpy), (config), (native_window), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePlatformWindowSurface, (EGLDisplay dpy, EGLConfig config, void *native_window, const EGLAttrib *attrib_list))
#ifndef eglCreateSync
#define eglCreateSync(dpy, type, attrib_list) glatter_eglCreateSync((dpy), (type), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSync, EGLAPIENTRY, eglCreateSync, (EGLDisplay dpy, EGLenum type, const EGLAttrib *attrib_list))
#ifndef eglDestroyImage
#define eglDestroyImage(dpy, image) glatter_eglDestroyImage((dpy), (image))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroyImage, (EGLDisplay dpy, EGLImage image))
#ifndef eglDestroySync
#define eglDestroySync(dpy, sync) glatter_eglDestroySync((dpy), (sync))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroySync, (EGLDisplay dpy, EGLSync sync))
#ifndef eglGetPlatformDisplay
#define eglGetPlatformDisplay(platform, native_display, attrib_list) glatter_eglGetPlatformDisplay((platform), (native_display), (attrib_list))
#endif
GLATTER_UBLOCK(EGLDisplay, EGLAPIENTRY, eglGetPlatformDisplay, (EGLenum platform, void *native_display, const EGLAttrib *attrib_list))
#ifndef eglGetSyncAttrib
#define eglGetSyncAttrib(dpy, sync, attribute, value) glatter_eglGetSyncAttrib((dpy), (sync), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetSyncAttrib, (EGLDisplay dpy, EGLSync sync, EGLint attribute, EGLAttrib *value))
#ifndef eglWaitSync
#define eglWaitSync(dpy, sync, flags) glatter_eglWaitSync((dpy), (sync), (flags))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglWaitSync, (EGLDisplay dpy, EGLSync sync, EGLint flags))
#endif // defined(EGL_VERSION_1_5)
#endif // defined(__egl_h_)
#if defined(__eglext_h_)
#if defined(EGL_ANDROID_blob_cache)
#ifndef eglSetBlobCacheFuncsANDROID
#define eglSetBlobCacheFuncsANDROID(dpy, set, get) glatter_eglSetBlobCacheFuncsANDROID((dpy), (set), (get))
#endif
GLATTER_UBLOCK(void, EGLAPIENTRY, eglSetBlobCacheFuncsANDROID, (EGLDisplay dpy, EGLSetBlobFuncANDROID set, EGLGetBlobFuncANDROID get))
#endif // defined(EGL_ANDROID_blob_cache)
#if defined(EGL_ANDROID_create_native_client_buffer)
#ifndef eglCreateNativeClientBufferANDROID
#define eglCreateNativeClientBufferANDROID(attrib_list) glatter_eglCreateNativeClientBufferANDROID((attrib_list))
#endif
GLATTER_UBLOCK(EGLClientBuffer, EGLAPIENTRY, eglCreateNativeClientBufferANDROID, (const EGLint *attrib_list))
#endif // defined(EGL_ANDROID_create_native_client_buffer)
#if defined(EGL_ANDROID_native_fence_sync)
#ifndef eglDupNativeFenceFDANDROID
#define eglDupNativeFenceFDANDROID(dpy, sync) glatter_eglDupNativeFenceFDANDROID((dpy), (sync))
#endif
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglDupNativeFenceFDANDROID, (EGLDisplay dpy, EGLSyncKHR sync))
#endif // defined(EGL_ANDROID_native_fence_sync)
#if defined(EGL_ANDROID_presentation_time)
#ifndef eglPresentationTimeANDROID
#define eglPresentationTimeANDROID(dpy, surface, time) glatter_eglPresentationTimeANDROID((dpy), (surface), (time))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglPresentationTimeANDROID, (EGLDisplay dpy, EGLSurface surface, EGLnsecsANDROID time))
#endif // defined(EGL_ANDROID_presentation_time)
#if defined(EGL_ANGLE_query_surface_pointer)
#ifndef eglQuerySurfacePointerANGLE
#define eglQuerySurfacePointerANGLE(dpy, surface, attribute, value) glatter_eglQuerySurfacePointerANGLE((dpy), (surface), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQuerySurfacePointerANGLE, (EGLDisplay dpy, EGLSurface surface, EGLint attribute, void **value))
#endif // defined(EGL_ANGLE_query_surface_pointer)
#if defined(EGL_EXT_compositor)
#ifndef eglCompositorBindTexWindowEXT
#define eglCompositorBindTexWindowEXT(external_win_id) glatter_eglCompositorBindTexWindowEXT((external_win_id))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorBindTexWindowEXT, (EGLint external_win_id))
#ifndef eglCompositorSetContextAttributesEXT
#define eglCompositorSetContextAttributesEXT(external_ref_id, context_attributes, num_entries) glatter_eglCompositorSetContextAttributesEXT((external_ref_id), (context_attributes), (num_entries))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorSetContextAttributesEXT, (EGLint external_ref_id, const EGLint *context_attributes, EGLint num_entries))
#ifndef eglCompositorSetContextListEXT
#define eglCompositorSetContextListEXT(external_ref_ids, num_entries) glatter_eglCompositorSetContextListEXT((external_ref_ids), (num_entries))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorSetContextListEXT, (const EGLint *external_ref_ids, EGLint num_entries))
#ifndef eglCompositorSetSizeEXT
#define eglCompositorSetSizeEXT(external_win_id, width, height) glatter_eglCompositorSetSizeEXT((external_win_id), (width), (height))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorSetSizeEXT, (EGLint external_win_id, EGLint width, EGLint height))
#ifndef eglCompositorSetWindowAttributesEXT
#define eglCompositorSetWindowAttributesEXT(external_win_id, window_attributes, num_entries) glatter_eglCompositorSetWindowAttributesEXT((external_win_id), (window_attributes), (num_entries))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorSetWindowAttributesEXT, (EGLint external_win_id, const EGLint *window_attributes, EGLint num_entries))
#ifndef eglCompositorSetWindowListEXT
#define eglCompositorSetWindowListEXT(external_ref_id, external_win_ids, num_entries) glatter_eglCompositorSetWindowListEXT((external_ref_id), (external_win_ids), (num_entries))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorSetWindowListEXT, (EGLint external_ref_id, const EGLint *external_win_ids, EGLint num_entries))
#ifndef eglCompositorSwapPolicyEXT
#define eglCompositorSwapPolicyEXT(external_win_id, policy) glatter_eglCompositorSwapPolicyEXT((external_win_id), (policy))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglCompositorSwapPolicyEXT, (EGLint external_win_id, EGLint policy))
#endif // defined(EGL_EXT_compositor)
#if defined(EGL_EXT_device_base)
#ifndef eglQueryDeviceAttribEXT
#define eglQueryDeviceAttribEXT(device, attribute, value) glatter_eglQueryDeviceAttribEXT((device), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDeviceAttribEXT, (EGLDeviceEXT device, EGLint attribute, EGLAttrib *value))
#ifndef eglQueryDeviceStringEXT
#define eglQueryDeviceStringEXT(device, name) glatter_eglQueryDeviceStringEXT((device), (name))
#endif
GLATTER_UBLOCK(const char *, EGLAPIENTRY, eglQueryDeviceStringEXT, (EGLDeviceEXT device, EGLint name))
#ifndef eglQueryDevicesEXT
#define eglQueryDevicesEXT(max_devices, devices, num_devices) glatter_eglQueryDevicesEXT((max_devices), (devices), (num_devices))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDevicesEXT, (EGLint max_devices, EGLDeviceEXT *devices, EGLint *num_devices))
#ifndef eglQueryDisplayAttribEXT
#define eglQueryDisplayAttribEXT(dpy, attribute, value) glatter_eglQueryDisplayAttribEXT((dpy), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDisplayAttribEXT, (EGLDisplay dpy, EGLint attribute, EGLAttrib *value))
#endif // defined(EGL_EXT_device_base)
#if defined(EGL_EXT_image_dma_buf_import_modifiers)
#ifndef eglQueryDmaBufFormatsEXT
#define eglQueryDmaBufFormatsEXT(dpy, max_formats, formats, num_formats) glatter_eglQueryDmaBufFormatsEXT((dpy), (max_formats), (formats), (num_formats))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDmaBufFormatsEXT, (EGLDisplay dpy, EGLint max_formats, EGLint *formats, EGLint *num_formats))
#ifndef eglQueryDmaBufModifiersEXT
#define eglQueryDmaBufModifiersEXT(dpy, format, max_modifiers, modifiers, external_only, num_modifiers) glatter_eglQueryDmaBufModifiersEXT((dpy), (format), (max_modifiers), (modifiers), (external_only), (num_modifiers))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDmaBufModifiersEXT, (EGLDisplay dpy, EGLint format, EGLint max_modifiers, EGLuint64KHR *modifiers, EGLBoolean *external_only, EGLint *num_modifiers))
#endif // defined(EGL_EXT_image_dma_buf_import_modifiers)
#if defined(EGL_EXT_output_base)
#ifndef eglGetOutputLayersEXT
#define eglGetOutputLayersEXT(dpy, attrib_list, layers, max_layers, num_layers) glatter_eglGetOutputLayersEXT((dpy), (attrib_list), (layers), (max_layers), (num_layers))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetOutputLayersEXT, (EGLDisplay dpy, const EGLAttrib *attrib_list, EGLOutputLayerEXT *layers, EGLint max_layers, EGLint *num_layers))
#ifndef eglGetOutputPortsEXT
#define eglGetOutputPortsEXT(dpy, attrib_list, ports, max_ports, num_ports) glatter_eglGetOutputPortsEXT((dpy), (attrib_list), (ports), (max_ports), (num_ports))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetOutputPortsEXT, (EGLDisplay dpy, const EGLAttrib *attrib_list, EGLOutputPortEXT *ports, EGLint max_ports, EGLint *num_ports))
#ifndef eglOutputLayerAttribEXT
#define eglOutputLayerAttribEXT(dpy, layer, attribute, value) glatter_eglOutputLayerAttribEXT((dpy), (layer), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglOutputLayerAttribEXT, (EGLDisplay dpy, EGLOutputLayerEXT layer, EGLint attribute, EGLAttrib value))
#ifndef eglOutputPortAttribEXT
#define eglOutputPortAttribEXT(dpy, port, attribute, value) glatter_eglOutputPortAttribEXT((dpy), (port), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglOutputPortAttribEXT, (EGLDisplay dpy, EGLOutputPortEXT port, EGLint attribute, EGLAttrib value))
#ifndef eglQueryOutputLayerAttribEXT
#define eglQueryOutputLayerAttribEXT(dpy, layer, attribute, value) glatter_eglQueryOutputLayerAttribEXT((dpy), (layer), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryOutputLayerAttribEXT, (EGLDisplay dpy, EGLOutputLayerEXT layer, EGLint attribute, EGLAttrib *value))
#ifndef eglQueryOutputLayerStringEXT
#define eglQueryOutputLayerStringEXT(dpy, layer, name) glatter_eglQueryOutputLayerStringEXT((dpy), (layer), (name))
#endif
GLATTER_UBLOCK(const char *, EGLAPIENTRY, eglQueryOutputLayerStringEXT, (EGLDisplay dpy, EGLOutputLayerEXT layer, EGLint name))
#ifndef eglQueryOutputPortAttribEXT
#define eglQueryOutputPortAttribEXT(dpy, port, attribute, value) glatter_eglQueryOutputPortAttribEXT((dpy), (port), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryOutputPortAttribEXT, (EGLDisplay dpy, EGLOutputPortEXT port, EGLint attribute, EGLAttrib *value))
#ifndef eglQueryOutputPortStringEXT
#define eglQueryOutputPortStringEXT(dpy, port, name) glatter_eglQueryOutputPortStringEXT((dpy), (port), (name))
#endif
GLATTER_UBLOCK(const char *, EGLAPIENTRY, eglQueryOutputPortStringEXT, (EGLDisplay dpy, EGLOutputPortEXT port, EGLint name))
#endif // defined(EGL_EXT_output_base)
#if defined(EGL_EXT_platform_base)
#ifndef eglCreatePlatformPixmapSurfaceEXT
#define eglCreatePlatformPixmapSurfaceEXT(dpy, config, native_pixmap, attrib_list) glatter_eglCreatePlatformPixmapSurfaceEXT((dpy), (config), (native_pixmap), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePlatformPixmapSurfaceEXT, (EGLDisplay dpy, EGLConfig config, void *native_pixmap, const EGLint *attrib_list))
#ifndef eglCreatePlatformWindowSurfaceEXT
#define eglCreatePlatformWindowSurfaceEXT(dpy, config, native_window, attrib_list) glatter_eglCreatePlatformWindowSurfaceEXT((dpy), (config), (native_window), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePlatformWindowSurfaceEXT, (EGLDisplay dpy, EGLConfig config, void *native_window, const EGLint *attrib_list))
#ifndef eglGetPlatformDisplayEXT
#define eglGetPlatformDisplayEXT(platform, native_display, attrib_list) glatter_eglGetPlatformDisplayEXT((platform), (native_display), (attrib_list))
#endif
GLATTER_UBLOCK(EGLDisplay, EGLAPIENTRY, eglGetPlatformDisplayEXT, (EGLenum platform, void *native_display, const EGLint *attrib_list))
#endif // defined(EGL_EXT_platform_base)
#if defined(EGL_EXT_stream_consumer_egloutput)
#ifndef eglStreamConsumerOutputEXT
#define eglStreamConsumerOutputEXT(dpy, stream, layer) glatter_eglStreamConsumerOutputEXT((dpy), (stream), (layer))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerOutputEXT, (EGLDisplay dpy, EGLStreamKHR stream, EGLOutputLayerEXT layer))
#endif // defined(EGL_EXT_stream_consumer_egloutput)
#if defined(EGL_EXT_swap_buffers_with_damage)
#ifndef eglSwapBuffersWithDamageEXT
#define eglSwapBuffersWithDamageEXT(dpy, surface, rects, n_rects) glatter_eglSwapBuffersWithDamageEXT((dpy), (surface), (rects), (n_rects))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSwapBuffersWithDamageEXT, (EGLDisplay dpy, EGLSurface surface, EGLint *rects, EGLint n_rects))
#endif // defined(EGL_EXT_swap_buffers_with_damage)
#if defined(EGL_HI_clientpixmap)
#ifndef eglCreatePixmapSurfaceHI
#define eglCreatePixmapSurfaceHI(dpy, config, pixmap) glatter_eglCreatePixmapSurfaceHI((dpy), (config), (pixmap))
#endif
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreatePixmapSurfaceHI, (EGLDisplay dpy, EGLConfig config, struct EGLClientPixmapHI *pixmap))
#endif // defined(EGL_HI_clientpixmap)
#if defined(EGL_KHR_cl_event2)
#ifndef eglCreateSync64KHR
#define eglCreateSync64KHR(dpy, type, attrib_list) glatter_eglCreateSync64KHR((dpy), (type), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSyncKHR, EGLAPIENTRY, eglCreateSync64KHR, (EGLDisplay dpy, EGLenum type, const EGLAttribKHR *attrib_list))
#endif // defined(EGL_KHR_cl_event2)
#if defined(EGL_KHR_debug)
#ifndef eglDebugMessageControlKHR
#define eglDebugMessageControlKHR(callback, attrib_list) glatter_eglDebugMessageControlKHR((callback), (attrib_list))
#endif
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglDebugMessageControlKHR, (EGLDEBUGPROCKHR callback, const EGLAttrib *attrib_list))
#ifndef eglLabelObjectKHR
#define eglLabelObjectKHR(display, objectType, object, label) glatter_eglLabelObjectKHR((display), (objectType), (object), (label))
#endif
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglLabelObjectKHR, (EGLDisplay display, EGLenum objectType, EGLObjectKHR object, EGLLabelKHR label))
#ifndef eglQueryDebugKHR
#define eglQueryDebugKHR(attribute, value) glatter_eglQueryDebugKHR((attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDebugKHR, (EGLint attribute, EGLAttrib *value))
#endif // defined(EGL_KHR_debug)
#if defined(EGL_KHR_fence_sync)
#if defined(KHRONOS_SUPPORT_INT64)
#ifndef eglClientWaitSyncKHR
#define eglClientWaitSyncKHR(dpy, sync, flags, timeout) glatter_eglClientWaitSyncKHR((dpy), (sync), (flags), (timeout))
#endif
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglClientWaitSyncKHR, (EGLDisplay dpy, EGLSyncKHR sync, EGLint flags, EGLTimeKHR timeout))
#ifndef eglCreateSyncKHR
#define eglCreateSyncKHR(dpy, type, attrib_list) glatter_eglCreateSyncKHR((dpy), (type), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSyncKHR, EGLAPIENTRY, eglCreateSyncKHR, (EGLDisplay dpy, EGLenum type, const EGLint *attrib_list))
#ifndef eglDestroySyncKHR
#define eglDestroySyncKHR(dpy, sync) glatter_eglDestroySyncKHR((dpy), (sync))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroySyncKHR, (EGLDisplay dpy, EGLSyncKHR sync))
#ifndef eglGetSyncAttribKHR
#define eglGetSyncAttribKHR(dpy, sync, attribute, value) glatter_eglGetSyncAttribKHR((dpy), (sync), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetSyncAttribKHR, (EGLDisplay dpy, EGLSyncKHR sync, EGLint attribute, EGLint *value))
#endif // defined(KHRONOS_SUPPORT_INT64)
#endif // defined(EGL_KHR_fence_sync)
#if defined(EGL_KHR_image)
#ifndef eglCreateImageKHR
#define eglCreateImageKHR(dpy, ctx, target, buffer, attrib_list) glatter_eglCreateImageKHR((dpy), (ctx), (target), (buffer), (attrib_list))
#endif
GLATTER_UBLOCK(EGLImageKHR, EGLAPIENTRY, eglCreateImageKHR, (EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLint *attrib_list))
#ifndef eglDestroyImageKHR
#define eglDestroyImageKHR(dpy, image) glatter_eglDestroyImageKHR((dpy), (image))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroyImageKHR, (EGLDisplay dpy, EGLImageKHR image))
#endif // defined(EGL_KHR_image)
#if defined(EGL_KHR_lock_surface)
#ifndef eglLockSurfaceKHR
#define eglLockSurfaceKHR(dpy, surface, attrib_list) glatter_eglLockSurfaceKHR((dpy), (surface), (attrib_list))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglLockSurfaceKHR, (EGLDisplay dpy, EGLSurface surface, const EGLint *attrib_list))
#ifndef eglUnlockSurfaceKHR
#define eglUnlockSurfaceKHR(dpy, surface) glatter_eglUnlockSurfaceKHR((dpy), (surface))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglUnlockSurfaceKHR, (EGLDisplay dpy, EGLSurface surface))
#endif // defined(EGL_KHR_lock_surface)
#if defined(EGL_KHR_lock_surface3)
#ifndef eglQuerySurface64KHR
#define eglQuerySurface64KHR(dpy, surface, attribute, value) glatter_eglQuerySurface64KHR((dpy), (surface), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQuerySurface64KHR, (EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLAttribKHR *value))
#endif // defined(EGL_KHR_lock_surface3)
#if defined(EGL_KHR_partial_update)
#ifndef eglSetDamageRegionKHR
#define eglSetDamageRegionKHR(dpy, surface, rects, n_rects) glatter_eglSetDamageRegionKHR((dpy), (surface), (rects), (n_rects))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSetDamageRegionKHR, (EGLDisplay dpy, EGLSurface surface, EGLint *rects, EGLint n_rects))
#endif // defined(EGL_KHR_partial_update)
#if defined(EGL_KHR_reusable_sync)
#if defined(KHRONOS_SUPPORT_INT64)
#ifndef eglSignalSyncKHR
#define eglSignalSyncKHR(dpy, sync, mode) glatter_eglSignalSyncKHR((dpy), (sync), (mode))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSignalSyncKHR, (EGLDisplay dpy, EGLSyncKHR sync, EGLenum mode))
#endif // defined(KHRONOS_SUPPORT_INT64)
#endif // defined(EGL_KHR_reusable_sync)
#if defined(EGL_KHR_stream)
#if defined(KHRONOS_SUPPORT_INT64)
#ifndef eglCreateStreamKHR
#define eglCreateStreamKHR(dpy, attrib_list) glatter_eglCreateStreamKHR((dpy), (attrib_list))
#endif
GLATTER_UBLOCK(EGLStreamKHR, EGLAPIENTRY, eglCreateStreamKHR, (EGLDisplay dpy, const EGLint *attrib_list))
#ifndef eglDestroyStreamKHR
#define eglDestroyStreamKHR(dpy, stream) glatter_eglDestroyStreamKHR((dpy), (stream))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroyStreamKHR, (EGLDisplay dpy, EGLStreamKHR stream))
#ifndef eglQueryStreamKHR
#define eglQueryStreamKHR(dpy, stream, attribute, value) glatter_eglQueryStreamKHR((dpy), (stream), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryStreamKHR, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLint *value))
#ifndef eglQueryStreamu64KHR
#define eglQueryStreamu64KHR(dpy, stream, attribute, value) glatter_eglQueryStreamu64KHR((dpy), (stream), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryStreamu64KHR, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLuint64KHR *value))
#ifndef eglStreamAttribKHR
#define eglStreamAttribKHR(dpy, stream, attribute, value) glatter_eglStreamAttribKHR((dpy), (stream), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamAttribKHR, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLint value))
#endif // defined(KHRONOS_SUPPORT_INT64)
#endif // defined(EGL_KHR_stream)
#if defined(EGL_KHR_stream_attrib)
#if defined(KHRONOS_SUPPORT_INT64)
#ifndef eglCreateStreamAttribKHR
#define eglCreateStreamAttribKHR(dpy, attrib_list) glatter_eglCreateStreamAttribKHR((dpy), (attrib_list))
#endif
GLATTER_UBLOCK(EGLStreamKHR, EGLAPIENTRY, eglCreateStreamAttribKHR, (EGLDisplay dpy, const EGLAttrib *attrib_list))
#ifndef eglQueryStreamAttribKHR
#define eglQueryStreamAttribKHR(dpy, stream, attribute, value) glatter_eglQueryStreamAttribKHR((dpy), (stream), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryStreamAttribKHR, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLAttrib *value))
#ifndef eglSetStreamAttribKHR
#define eglSetStreamAttribKHR(dpy, stream, attribute, value) glatter_eglSetStreamAttribKHR((dpy), (stream), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSetStreamAttribKHR, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLAttrib value))
#ifndef eglStreamConsumerAcquireAttribKHR
#define eglStreamConsumerAcquireAttribKHR(dpy, stream, attrib_list) glatter_eglStreamConsumerAcquireAttribKHR((dpy), (stream), (attrib_list))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerAcquireAttribKHR, (EGLDisplay dpy, EGLStreamKHR stream, const EGLAttrib *attrib_list))
#ifndef eglStreamConsumerReleaseAttribKHR
#define eglStreamConsumerReleaseAttribKHR(dpy, stream, attrib_list) glatter_eglStreamConsumerReleaseAttribKHR((dpy), (stream), (attrib_list))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerReleaseAttribKHR, (EGLDisplay dpy, EGLStreamKHR stream, const EGLAttrib *attrib_list))
#endif // defined(KHRONOS_SUPPORT_INT64)
#endif // defined(EGL_KHR_stream_attrib)
#if defined(EGL_KHR_stream_consumer_gltexture)
#if defined(EGL_KHR_stream)
#ifndef eglStreamConsumerAcquireKHR
#define eglStreamConsumerAcquireKHR(dpy, stream) glatter_eglStreamConsumerAcquireKHR((dpy), (stream))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerAcquireKHR, (EGLDisplay dpy, EGLStreamKHR stream))
#ifndef eglStreamConsumerGLTextureExternalKHR
#define eglStreamConsumerGLTextureExternalKHR(dpy, stream) glatter_eglStreamConsumerGLTextureExternalKHR((dpy), (stream))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerGLTextureExternalKHR, (EGLDisplay dpy, EGLStreamKHR stream))
#ifndef eglStreamConsumerReleaseKHR
#define eglStreamConsumerReleaseKHR(dpy, stream) glatter_eglStreamConsumerReleaseKHR((dpy), (stream))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerReleaseKHR, (EGLDisplay dpy, EGLStreamKHR stream))
#endif // defined(EGL_KHR_stream)
#endif // defined(EGL_KHR_stream_consumer_gltexture)
#if defined(EGL_KHR_stream_cross_process_fd)
#if defined(EGL_KHR_stream)
#ifndef eglCreateStreamFromFileDescriptorKHR
#define eglCreateStreamFromFileDescriptorKHR(dpy, file_descriptor) glatter_eglCreateStreamFromFileDescriptorKHR((dpy), (file_descriptor))
#endif
GLATTER_UBLOCK(EGLStreamKHR, EGLAPIENTRY, eglCreateStreamFromFileDescriptorKHR, (EGLDisplay dpy, EGLNativeFileDescriptorKHR file_descriptor))
#ifndef eglGetStreamFileDescriptorKHR
#define eglGetStreamFileDescriptorKHR(dpy, stream) glatter_eglGetStreamFileDescriptorKHR((dpy), (stream))
#endif
GLATTER_UBLOCK(EGLNativeFileDescriptorKHR, EGLAPIENTRY, eglGetStreamFileDescriptorKHR, (EGLDisplay dpy, EGLStreamKHR stream))
#endif // defined(EGL_KHR_stream)
#endif // defined(EGL_KHR_stream_cross_process_fd)
#if defined(EGL_KHR_stream_fifo)
#if defined(EGL_KHR_stream)
#ifndef eglQueryStreamTimeKHR
#define eglQueryStreamTimeKHR(dpy, stream, attribute, value) glatter_eglQueryStreamTimeKHR((dpy), (stream), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryStreamTimeKHR, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLTimeKHR *value))
#endif // defined(EGL_KHR_stream)
#endif // defined(EGL_KHR_stream_fifo)
#if defined(EGL_KHR_stream_producer_eglsurface)
#if defined(EGL_KHR_stream)
#ifndef eglCreateStreamProducerSurfaceKHR
#define eglCreateStreamProducerSurfaceKHR(dpy, config, stream, attrib_list) glatter_eglCreateStreamProducerSurfaceKHR((dpy), (config), (stream), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSurface, EGLAPIENTRY, eglCreateStreamProducerSurfaceKHR, (EGLDisplay dpy, EGLConfig config, EGLStreamKHR stream, const EGLint *attrib_list))
#endif // defined(EGL_KHR_stream)
#endif // defined(EGL_KHR_stream_producer_eglsurface)
#if defined(EGL_KHR_swap_buffers_with_damage)
#ifndef eglSwapBuffersWithDamageKHR
#define eglSwapBuffersWithDamageKHR(dpy, surface, rects, n_rects) glatter_eglSwapBuffersWithDamageKHR((dpy), (surface), (rects), (n_rects))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSwapBuffersWithDamageKHR, (EGLDisplay dpy, EGLSurface surface, EGLint *rects, EGLint n_rects))
#endif // defined(EGL_KHR_swap_buffers_with_damage)
#if defined(EGL_KHR_wait_sync)
#ifndef eglWaitSyncKHR
#define eglWaitSyncKHR(dpy, sync, flags) glatter_eglWaitSyncKHR((dpy), (sync), (flags))
#endif
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglWaitSyncKHR, (EGLDisplay dpy, EGLSyncKHR sync, EGLint flags))
#endif // defined(EGL_KHR_wait_sync)
#if defined(EGL_MESA_drm_image)
#ifndef eglCreateDRMImageMESA
#define eglCreateDRMImageMESA(dpy, attrib_list) glatter_eglCreateDRMImageMESA((dpy), (attrib_list))
#endif
GLATTER_UBLOCK(EGLImageKHR, EGLAPIENTRY, eglCreateDRMImageMESA, (EGLDisplay dpy, const EGLint *attrib_list))
#ifndef eglExportDRMImageMESA
#define eglExportDRMImageMESA(dpy, image, name, handle, stride) glatter_eglExportDRMImageMESA((dpy), (image), (name), (handle), (stride))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglExportDRMImageMESA, (EGLDisplay dpy, EGLImageKHR image, EGLint *name, EGLint *handle, EGLint *stride))
#endif // defined(EGL_MESA_drm_image)
#if defined(EGL_MESA_image_dma_buf_export)
#ifndef eglExportDMABUFImageMESA
#define eglExportDMABUFImageMESA(dpy, image, fds, strides, offsets) glatter_eglExportDMABUFImageMESA((dpy), (image), (fds), (strides), (offsets))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglExportDMABUFImageMESA, (EGLDisplay dpy, EGLImageKHR image, int *fds, EGLint *strides, EGLint *offsets))
#ifndef eglExportDMABUFImageQueryMESA
#define eglExportDMABUFImageQueryMESA(dpy, image, fourcc, num_planes, modifiers) glatter_eglExportDMABUFImageQueryMESA((dpy), (image), (fourcc), (num_planes), (modifiers))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglExportDMABUFImageQueryMESA, (EGLDisplay dpy, EGLImageKHR image, int *fourcc, int *num_planes, EGLuint64KHR *modifiers))
#endif // defined(EGL_MESA_image_dma_buf_export)
#if defined(EGL_NOK_swap_region)
#ifndef eglSwapBuffersRegionNOK
#define eglSwapBuffersRegionNOK(dpy, surface, numRects, rects) glatter_eglSwapBuffersRegionNOK((dpy), (surface), (numRects), (rects))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSwapBuffersRegionNOK, (EGLDisplay dpy, EGLSurface surface, EGLint numRects, const EGLint *rects))
#endif // defined(EGL_NOK_swap_region)
#if defined(EGL_NOK_swap_region2)
#ifndef eglSwapBuffersRegion2NOK
#define eglSwapBuffersRegion2NOK(dpy, surface, numRects, rects) glatter_eglSwapBuffersRegion2NOK((dpy), (surface), (numRects), (rects))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSwapBuffersRegion2NOK, (EGLDisplay dpy, EGLSurface surface, EGLint numRects, const EGLint *rects))
#endif // defined(EGL_NOK_swap_region2)
#if defined(EGL_NV_native_query)
#ifndef eglQueryNativeDisplayNV
#define eglQueryNativeDisplayNV(dpy, display_id) glatter_eglQueryNativeDisplayNV((dpy), (display_id))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryNativeDisplayNV, (EGLDisplay dpy, EGLNativeDisplayType *display_id))
#ifndef eglQueryNativePixmapNV
#define eglQueryNativePixmapNV(dpy, surf, pixmap) glatter_eglQueryNativePixmapNV((dpy), (surf), (pixmap))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryNativePixmapNV, (EGLDisplay dpy, EGLSurface surf, EGLNativePixmapType *pixmap))
#ifndef eglQueryNativeWindowNV
#define eglQueryNativeWindowNV(dpy, surf, window) glatter_eglQueryNativeWindowNV((dpy), (surf), (window))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryNativeWindowNV, (EGLDisplay dpy, EGLSurface surf, EGLNativeWindowType *window))
#endif // defined(EGL_NV_native_query)
#if defined(EGL_NV_post_sub_buffer)
#ifndef eglPostSubBufferNV
#define eglPostSubBufferNV(dpy, surface, x, y, width, height) glatter_eglPostSubBufferNV((dpy), (surface), (x), (y), (width), (height))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglPostSubBufferNV, (EGLDisplay dpy, EGLSurface surface, EGLint x, EGLint y, EGLint width, EGLint height))
#endif // defined(EGL_NV_post_sub_buffer)
#if defined(EGL_NV_stream_consumer_gltexture_yuv)
#ifndef eglStreamConsumerGLTextureExternalAttribsNV
#define eglStreamConsumerGLTextureExternalAttribsNV(dpy, stream, attrib_list) glatter_eglStreamConsumerGLTextureExternalAttribsNV((dpy), (stream), (attrib_list))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglStreamConsumerGLTextureExternalAttribsNV, (EGLDisplay dpy, EGLStreamKHR stream, EGLAttrib *attrib_list))
#endif // defined(EGL_NV_stream_consumer_gltexture_yuv)
#if defined(EGL_NV_stream_metadata)
#ifndef eglQueryDisplayAttribNV
#define eglQueryDisplayAttribNV(dpy, attribute, value) glatter_eglQueryDisplayAttribNV((dpy), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryDisplayAttribNV, (EGLDisplay dpy, EGLint attribute, EGLAttrib *value))
#ifndef eglQueryStreamMetadataNV
#define eglQueryStreamMetadataNV(dpy, stream, name, n, offset, size, data) glatter_eglQueryStreamMetadataNV((dpy), (stream), (name), (n), (offset), (size), (data))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglQueryStreamMetadataNV, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum name, EGLint n, EGLint offset, EGLint size, void *data))
#ifndef eglSetStreamMetadataNV
#define eglSetStreamMetadataNV(dpy, stream, n, offset, size, data) glatter_eglSetStreamMetadataNV((dpy), (stream), (n), (offset), (size), (data))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSetStreamMetadataNV, (EGLDisplay dpy, EGLStreamKHR stream, EGLint n, EGLint offset, EGLint size, const void *data))
#endif // defined(EGL_NV_stream_metadata)
#if defined(EGL_NV_stream_reset)
#ifndef eglResetStreamNV
#define eglResetStreamNV(dpy, stream) glatter_eglResetStreamNV((dpy), (stream))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglResetStreamNV, (EGLDisplay dpy, EGLStreamKHR stream))
#endif // defined(EGL_NV_stream_reset)
#if defined(EGL_NV_stream_sync)
#ifndef eglCreateStreamSyncNV
#define eglCreateStreamSyncNV(dpy, stream, type, attrib_list) glatter_eglCreateStreamSyncNV((dpy), (stream), (type), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSyncKHR, EGLAPIENTRY, eglCreateStreamSyncNV, (EGLDisplay dpy, EGLStreamKHR stream, EGLenum type, const EGLint *attrib_list))
#endif // defined(EGL_NV_stream_sync)
#if defined(EGL_NV_sync)
#if defined(KHRONOS_SUPPORT_INT64)
#ifndef eglClientWaitSyncNV
#define eglClientWaitSyncNV(sync, flags, timeout) glatter_eglClientWaitSyncNV((sync), (flags), (timeout))
#endif
GLATTER_UBLOCK(EGLint, EGLAPIENTRY, eglClientWaitSyncNV, (EGLSyncNV sync, EGLint flags, EGLTimeNV timeout))
#ifndef eglCreateFenceSyncNV
#define eglCreateFenceSyncNV(dpy, condition, attrib_list) glatter_eglCreateFenceSyncNV((dpy), (condition), (attrib_list))
#endif
GLATTER_UBLOCK(EGLSyncNV, EGLAPIENTRY, eglCreateFenceSyncNV, (EGLDisplay dpy, EGLenum condition, const EGLint *attrib_list))
#ifndef eglDestroySyncNV
#define eglDestroySyncNV(sync) glatter_eglDestroySyncNV((sync))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglDestroySyncNV, (EGLSyncNV sync))
#ifndef eglFenceNV
#define eglFenceNV(sync) glatter_eglFenceNV((sync))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglFenceNV, (EGLSyncNV sync))
#ifndef eglGetSyncAttribNV
#define eglGetSyncAttribNV(sync, attribute, value) glatter_eglGetSyncAttribNV((sync), (attribute), (value))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglGetSyncAttribNV, (EGLSyncNV sync, EGLint attribute, EGLint *value))
#ifndef eglSignalSyncNV
#define eglSignalSyncNV(sync, mode) glatter_eglSignalSyncNV((sync), (mode))
#endif
GLATTER_UBLOCK(EGLBoolean, EGLAPIENTRY, eglSignalSyncNV, (EGLSyncNV sync, EGLenum mode))
#endif // defined(KHRONOS_SUPPORT_INT64)
#endif // defined(EGL_NV_sync)
#if defined(EGL_NV_system_time)
#if defined(KHRONOS_SUPPORT_INT64)
#ifndef eglGetSystemTimeFrequencyNV
#define eglGetSystemTimeFrequencyNV() glatter_eglGetSystemTimeFrequencyNV()
#endif
GLATTER_UBLOCK(EGLuint64NV, EGLAPIENTRY, eglGetSystemTimeFrequencyNV, (void))
#ifndef eglGetSystemTimeNV
#define eglGetSystemTimeNV() glatter_eglGetSystemTimeNV()
#endif
GLATTER_UBLOCK(EGLuint64NV, EGLAPIENTRY, eglGetSystemTimeNV, (void))
#endif // defined(__eglext_h_)
#endif // defined(EGL_NV_system_time)
#endif // defined(KHRONOS_SUPPORT_INT64)
#endif // GLATTER_EGL

